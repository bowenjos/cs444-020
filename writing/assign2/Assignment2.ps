%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: Assignment2.dvi
%%CreationDate: Mon Oct 24 17:06:20 2016
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMCSC10 CMBX12 CMR12 CMR10 CMTI12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Assignment2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.10.24:1706
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 63 /question put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 76 /L put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E071B1B
EA3AC8852A244A3DDFA721781B8B57F516BCEB435A4F42E532592312715532EC
4DC435F0546D80297D49C189661DEA12AE525D5B1345826520398B38C48ADDC0
C36C2A0B450B2BE83691EF1C4AEDDAA5A14FF0850BACCDFBF8925A12F64606B2
E62FA442298F5FA8153AE19DFE113EAE5296A3A035C268C6BB5401B21A64FFF4
531A7CFEB2D4F7E1ADF44E19598E990459272CF22A5F44392A0198D6FE261F33
4FA1BF87B552C50C10A9B2F1DCD3DCAF3C9964B45D9924B3077CA104C79A55FD
8EE4D8E4C1C441E98EFF2F8B90760FCA6CAD3D49949EBBF602D650D74B076D86
A885FE2AA2690B42BA6B52A3303A7E1FC141DA49B0CBC159FE84D1C2466FF42D
2B62AD586716AD8E5AF0AE292B2045701FB9FFEFFA98627A1944943855008C93
E068B6F8BE96FEF55B59F6B76E09DC1FD82640CA56E4117117463DD9F5EAC847
57BC27F759DEC9CA3140B2CDCCEACB6ADB2B57D62C876815057020B1F141067B
1D7F7DF9A6601F9F0FE806E4B8C64C1623190DFA566E0BE0CFC5FB2BE139C351
DC5088C2CCAE8656F60DF142884F11254BD31FF1D1DD973AC55431CDEA718C87
66171F95E8407B7C3854A76AFB94DB33EF01500019C43ECF204CF1AA7D846B07
917C2A981E17E097B9FD5AF7B0CD1EC8B81161581CF30877F13357D70E35E2AE
858644C34255AF17C08238AA111A2AA0BA40D42CE57235369C2030DF6B07C142
2BE26A7E12601B0336E396F9EFDFFC3869DCC258200AB0468F7CBAAA5343DCCA
318AF1247615D4580A491DDCE490EB9BF2FEF0D9ADE866E117B5E4E1D5C0B3FE
951E842BF1BD4D1B999D3B0D3F1173F017BC70F498034C80D7F9AFEB5A727A4E
FC087665C7CB5476B691F253629D87E89B67027CD8DE75509F35E93CEE05652D
3BCC402422BD2C91067FEE631A942E34634F2F310D3DD745E7B1837B46BEE418
777933E8D9DD92FB6D93227C87C5DD3E9B11207FC44C3BEC1661EF899A87DE49
936B19C8BD2AF4CC7AF233C159997C5CFE9FF9A16C16DD74750BE76D93F6E17C
AA584907B46BB1BC78274A1876CD9E4DAEF7188AB52DA71C96A4EF380E806C9D
797047DEFA8095117ED35AAEB99B11197E2F2C98935AF5D2116A0D1B7672A428
C84F893920B830EE76AB81885423E13E353F1BC61C9B418DDBB1F7B08F6AEF56
A28682138EF7CB80ACD99079156F5D3A5017250B72CC6A570E37D1A096A873CE
D23998270324481EC154BAABD77DF2D8AE340F0F8BC5298949C771CB79A2F86A
5ECA52E6CCF89AA9AB7CC2B0AB2C238ED033DB40DA3A7B30FC8F180E9FA49AB8
6ECB6CD77DFE4B2305D8944AF3471BD86CAD0E72FF1DA86110CA2BE2228A2F9A
32738AAD65C67D3948D2D762F334873A31FD94DE94C985A85BD6FF8F74421FA2
4A35E9FD57259071F7D3C6CDCD7C559B2230BABA545594CE45C40A89D0D6CF6A
6623DAE1693B2F80EE290BCB3C06767A9B5CE026830ED1AE96B48D7678B75463
96AF6CF653C87364E7190DB7944D4515ED8866A37D6C1C987561B43F57C06420
7286957DAE550A9A6F780F7F4F5C2CF1F0848E8A907DCDD535AE89FDE9FB5DC7
6F97656494CBA5CAABED5569E218FF9D39199F081365057D2AB4BDE0F0ADE456
03B376F5DC4127F08394DC46B35FE32A943C891C34C22E4900B9D3755C51ABCE
4B9AD3FAFC1FFC64574AE4152C37DC8715AED67FFCFCA063451DDA183040A59B
7A29555AC3B14A112C62262A76539DDA3DAF6A7A988A8FF992850C0508DB2994
B55134F7F50994FFF3670D6384B0251C10A6794D634AB7B8A31EDD501E47BCF9
61597A056F20114C7A3542087D395C7A12628FC24CCE0D3D7B74EE35CE5E7651
E8830F4306BEC64003D06D6888BB50D7DF80B222D1CCF57A71E669C252DD1296
6133346582DAB93D436507D520DA4828C1C8A556E98511CF732AC23FEE2631C2
8EFF174DF02D4ED619F2E752E105AC6A4F814759BDBCE91894EF0F4F5D6529B4
13F83D84EAE452DA19F62AE4ADD30A6D7DA6A97BD8A9F3C1291253CBA39E1535
E7019220E2376E038BBC7C16FACCD3624EC77407CC4B93322D70AA41CCA10AD5
597397F840D81735B707F7A1ACC58A46ADD289A653E64ADD241F13DF72A92FB6
0B575889F704121623979C74AC6C5E480C053119754CCCDCA2533FEADAA8001E
E4475486E9599BEFBBD027E102753EC12A4DC0F528EAF1170F27B0FFCF9070B6
677B64FBE6FCCC95BE4295CE99877FCF3D6132F3D6F2B03EC02B143AF526917C
EA40F9B4F5633CEB0907D3901F2EAA9A9361FD30D7B37AD0D0B85F7002B53611
45611F52D7AA3466FB2DACC33BF8B3EC7CD7C6E4065A4399E20B121A34CA9771
F3116D89066FD2CCC72B83751C9239E6AAAE776F15792D18666DA91C07E33AD5
D17D99DB18A7D47AFEA9E1E41B7E95BD6101B2D03528B9D7F5D263A450CCCD39
C845C8F607B8A1085C241DC80FF16DF1C3B5BC8D27A8A8903098A4AEEE7D3BD0
9C2C46D5FD292E0432770FFD25D5DDD3BDCE5D51A46C71FE022BC17FFAEDA70E
0C6C7CB7BA56B7D75D18E13F860AA62E1203D93DA80B36AF655DE6A19900A01B
44197C8DC238D9D43C4D7541BC6D543624DA09CB3F1BBE6934252C0384ED7989
6A174EE4D2690219AB32C81AB650BCDED4A1FFEFAD652E6D3BD4168F7A8FE29D
08984CA7E517C072230E557E346A0EDF369AEDE4B461EFBCE98C16841376C634
87613FA0CA72C7CB332B87DC76A4EA7B54A9BF5C6F5953FE396AB5142FE74F0B
E69E7D3E285B0AA5AEE02F58E9E13AACB25DCA4B60C81A2953CE96ED3B5E276E
001DBB53B5791562652A84B257A62F1EBBE5E3FE8524EFE6FE03EAB2C31B7377
80E6A5687F6D3D9B5005A5580D9109DF6028BC9B2EF067BF8A14AB2C29AB464E
521CEC88BEF38ED60FA2337811EC42790A7E7A56C54C0732615476F644A217D3
4A3D0A305FC0B8CC25CF9590E14A9B21CE9064FAF301218F967204B3B13CCAEE
8ECCAC35B100C31B858C37B122C1B75167EC3EA74B019179DDF488A49C5020ED
FA0FB6C66533DE37D23EFA8CE43FDC1C594B9321706F313AF4E80CBD8DDE9D69
4DDA744C90BE9BD6CC8643580B74188B3CF9D9FBD987893BA56CF045B7E158DC
5454A6FFD5FC6C12E53D7D6F5BB1AB0A6D2E4597F95A3B4B1DF3FF0592A9426B
57B38AEAC1B5A272AAE3A6A67223500AE719F4587DA818A1C6FA4402301126EA
0AA0C1B8BFAADD72311CDBACF233641398E68320B225379689E05E1AEB9D492A
220813AB4251EFB7A74B19BEE08E2D6EA96359BC41DDCBAFF75B28006CECA536
9ED6351B754ED3B6FA6426A79D9C67472B8D5C229AE7BE318BE608D3F10B1649
F7E1527E914874FC9F70C1CD3149287877399903DC98A22BE01DB69802D3A783
5617B491D8B60884BBB8CE977D3F309DDFE278491DC6912816FC36BA714D9703
46907EE853DCDE8F2972A3F8DC615442EAE36D0CAB1F22A9A9DBAA9F4E4FEBE2
070DFE410CA669EB7D77CF25A7A817609BD6597791282772F0BF03097E7FE27E
C35F79C07A29397341A687B5DE3C69DE0A218BD767909F52E1650909BD4892AB
2EDEF4825FA13E08319E81A37453D1812774887204934A7989847A617332D150
64C5BA6D247DCA385FF5E879574CCDB54BFFE6EC1D9F1A413A8BD29056DEAA64
1A38889B389748E842D9F23F47BF1E807B69F66FD035B78600E152A7DA7F4E2A
E542EFD8C3BBF70091E359F862D431CEFF64E0330877DE3317673F96B04A40D3
BB90550B8B19F526A51A23E521BA5DB9E2C86B2690A3A84D0321165C7EA91615
30740CAF7077E2E2A206980F84A60DDF39A2F03BAFC7B5347B84E018FE9AFA4D
527E06430E5B71B46349927CD59DD81706038BEEE346549472C5BF931B7EC78A
18DC954DA10DBCED55BE6D6B4E9167F71A7AD91C2E99AFD844D2137B9099F447
E10BCF50929B4877AF2AB9CDF6B7D90FF19116083C272B8A8E8A513FD47B5C9D
5BBC31D1D5AF043D4C56D8251BCEBD005512524C93E3FD93752F51EC03568115
F2F7503030C5E722A9B894D15B94DFD9C980FDDC48F797892D5615A7DF61DC8B
5FBE4C0DCBE37CDF8BF964016D19FED03EC6600028F48A4EF0E2A41A11CF6A19
2876F6E362C5198F62CF2658DDB97D14B4B97781FC99BDCCA89A846ADDF4CA9A
1DEFE2B5918061CAA975F443D6B4BCAEED89C46B751C1738887D154AC373687D
5824F2780B225848231280B0F8A8EA337A33464079076577AAAA70C410908186
5FD0C9FC28326BA823EAB8C38E9F15AA15D8CF16370EC888CB966A3D0D7AAE03
634DCDC86A30C9802F26045F2F47F3CE5699C37EC635F87A58E6AD2445E02E1F
1DD5F71497EAAC6F95B5D24370AD25C1D37B4DAF1F4F5E9543F16696DB61283D
CDA30BE63D249932A76D722F353DC5631C196903C028A807CD538D0F214FE473
14EB9DEA5E484E8B7A9BAB82BA21EC2A0E97D3B4E068A7E12F569FA8B0F79933
938BB5C19D9FDA60B887BE081CC7E1EB1EE4A5D22D4747CE59E9DBF78C19D61E
DD801299D062D6059E442BB1EE3642252F72D6276417406F5DB57F1E5EC3B306
B169745B82CE9DF91A3CEEC25498AEC0F32EB414B79969030518D8D118D3C06B
3FE81989D63E94DAF82E2655155E5CA4AD11C323FBD71BE021D56C2FD3AA78C0
4F6DA867C50A80824C9286CD6A5D03FFED148E499EF54BD2FA62781A7BF482A6
77DDA4DDB1071186092FBA8924BF1D2172BDFD66AA3E750ECC34265791F6A3E7
94E4A0044F3D546D47B4663DB9B3E516B70340E281BFD2A9D01FAE443E3F3F02
416C6DDC79C1E03C1B77DA19C38D50D621CC21C6D79316C1ADC414DEB1EE0BA8
2692309E75BCEFE420EB7467A91DCCBFE046743EABA345328DCC1DA0DFCF7FA1
C6BD667DF7CA3DE76A9B296E520C17FC0CF77EEDE29E030AE9282E458140820D
6C76EE95B2F24D77A0B1D0CEBA92001D4959F9C47C3E793B04876937E773B223
C1923805063B38BE29FFF1F73CF6996C0D5092180DB2150EF5FC79AC7365A2BF
BCE5158472BC77B745771133C9AD1A57557988B8411D4CF4DDFB18B6750BB719
6B9701DAADADF6EA8A08E5859CB4D1C345E1DC5B13A33340056E7A666B52A9D1
98B21C5DB5C14ED2564A332B31475D0C74575D4C83AE855C494A80D502022E73
5E2DC0712874FB92D3992261F208DC0DA44654293179BA5F4C93C34865CFD5AE
602C75860BD3514352C24C4A7BACA5042251A3F01D3A9504C2C529B525EBE785
B381B7E7F87FAA959BA458CB508498EB5C272487529B93560D49E55DD4CF834E
4599F0FCA22B4B8C2834479CBA7CF4E58D5115CA6A3878F4C175F9082F64AA1C
362F7D8F9EAE8A496E9E6887ECC955C4EF3A7F83E7C386D511B8A5FCB555AFA8
52894FE809977F3F2A0E2E960A7881B695A51A2998A46F2CDF9ED8ED0305909A
C755842AB921101384A6C2B10795D0A71CCBE138FE2AB0AA8169EE1E233B63F6
B79D49CB1F4D133C144EC0DA8C00CADED8D0133CAA575020D88D9E868044B246
77C7FAAB01A05E47C198316F4BE90156B86AD6D73CAE23145B9F1BF4A2474269
3CEE898FE8834D3BAB56477C30402962E72BD705F8142EFC83FB4A09C15D929B
CD2790AF6F976CA6796E042F3BAA60C1D73655F6738403F446AB013F886895CC
AB315698936774859D2A0F1F50752382549D0733F42B940E0EB48A9D8B25B302
FD9972451E0D86910569211CC1B1D9C95371EB8A56301D75D13BA78B296D3A59
3BA0C9EED990B3E3B4E71F6E20E1E0F6B0B811EAC005C73CE4327AE914EE4E12
570150F7874E9A8B741EF50799F6FDD3D53D4C2309578746187FCA4C8845394C
F8EBD21887F481A099B81ED1D5369316E2467527F4A3FCEABC7457C5F5CCFF53
B01866260937679EBB9D2779FF27EA7C64DF7F040782A509BD1839DE424008A8
1EBAA15DF1FED74416E0BE6682EA46A78D255E5B54F1B23C292A61358D99CB2F
813B918310F78CB005153591ECCCECD19DC882F3329633A36DEA19748D615C7A
D02C637CD2AE76BF69C0E23394DD929B1F5D976C33CBC3BC530960FBD84742AA
FD2E3041E6CAC35294A8828BF1E530D471AB94567237E9EFA6EC1A517F541FAA
4ECA856DBA4EBF73D52F384B8FEE4F2C0B595439EC71B1319C5A8EE079CA79ED
E1308422D41B61EED15DD4CCE21BB18E1443222C25B3C2C9CAF2F3AEBFC81DCA
45B9011BBC4D0181360B0D4D7F54D0783ED536FA27C861CADAA9786DBC1BDD58
EE3169F179FBFC8D177B257226CBEA2B3C196978267BF72E3A1B459B29EA931B
B9AA0695EE4B09799F73F1CD7BF21D4B425D449EA9FB76D19B856DB8594701FB
7966C8B9A21C559C5AD256EA5BE2210CF710A80B750A6A8E0CFDB00FEB212228
1B6B6803276A931CC26B6C51406B5C313CBFAE43CD9C71BB1358F1D4B964B18B
041FBEFB09B3F392AD70A15E629AE3FE5ECF3E680D60E5B815EFD8C579A18379
31FDBD0EE42C096E86CC47CC4FE18BDC6AF43A52F40D889244EB2C03F35536E5
31B2859BD5969CEE70FBB2D940BA4B43C4F094D2075E7EFF1E2414E78B6AB594
80E97FF0745EBE307E4FF2AC463759557FBF94D4B901E7798961AF72D3FDAB33
AC49D237B5E7E23B2B08A268E1ECBB9437E44427BD7D0C530D8CF90A12090EDC
F17AD6520B5FC06C28198102B85268D800C1B98C72BFB62AA0BCD51EAC7FED37
BD24036AB46E1C2CFDFC0859C38400EDF40BF12E4B25A0690A0CDBFC320F50F9
4B837569C220A11099EB6F62843F24D504873570A64AE714A6767E00633B0C5C
11FEC1681C403789B80F6E535A0490EB95096268BC1091EFF700DD0BDD2D7EBF
6DDE7BDA1FD8D484EABEFEE5CC5256DFDC3F0231841E4EFCB02D4D18CCA47199
7BDDE64EE821FE17D54693DEE3DA9CBC5B688167DFF1B51690F0883209D25DFA
B49FDDB48EA3F0D25FB73A7E7D2D2123D57C9767BB28A410126B62E6B5B8B01D
5E0D68881F13B7A52FE1D38F1493E4CDE57E0BC4266E4811B48C399C13466614
B09A69E57440B08A9DCFB74566C0EB9B26E1C405AE48AA6B3ED875EDBF3AFA58
66AA7C48E6BEB889771B2A6C4FF32DBF92F63F67A2D5CE50C90132172D4BE483
9A85BF70752F4B68335C7F619D573E2E42FE546AB050848272ECB2273FF564DF
5B61A264524E8080CC79A72E45962FAFB095EDD4D2D79DEC3355BEF0977BAD81
35DD7172BC939D775CB04A48092EFBEA87D042792818B75C8F3B00E012795053
79A978DFB215C4BFBAC45DAF4CC6A8FA3AB38A80331FBAC486EC3E59699678BC
D760ED58D2CB0CE370DFBBC97C7199B3FF4E9F0868D3BF663E99B25CFA3C0B05
E8F88E54953A742151DC158DFCAB58BFDAAB74174857B01AF9ABD7FD924EDC52
52470502464B4CECA233767265DDCDBA226A9C5B6DAEA29C06EBFA5A23DD4442
A5E348C18D1439D01CAC6038B23CEECA12B71482A8BED3CBA145FC75BA6334B3
9FE5AD91916E5EAECA5E2CAE6CB328D6E72D20601C45EE61068F25DEE9AEEC1C
C1EE93DF8E64DF1D53D35018CB69BD9A4255CC75A0C504715B57513226AE5482
5706BDBE530665752DA4E6DC61F9B641608896530BD1672809C9E2D7F87C7459
759AFEDA7CFB85AD7290B715FFB5934082C4622B52B31E9E273AE989F3FC171D
285BC85C9DC130B8AA3F6A6FECB8A42BB6C6FF03862734B8BDFEF81B0B2DF544
2DFC7A67A117F7DE6891D42A0D5D76C546B847821C221CF26B0406C0FE5403D4
69FC1486B7A7697E8FEC85F703DEC04280A186332BA19957191EC3089DBE3532
591AED7B45B4B089BAA4C10FA605074B3CC2C43864630248BF22B0DBCB1552CC
1588602E207B4D4CBAADD704EBE9F42862DF71A7A5DBF97B02EF9BBE27DF9A98
D8BF2BBFAFB9804A67C2E135C5ACD0AC87B7E1E14C881C109BD64D6559286737
35A3CF93C4F73859794FFD0C6C29CE539BB835E72AC66C545FE8DE7A8D0AA129
59249852A31B615C86F124DB7DA121A4DA2A8F472ECD6940B2F34CE6F29DBACD
D9AE0B204181F90996B6D652B393A4DAA21422E291EB1090A727226935BFB99C
F069D5006535D85A90F83AD063174A04D4531686A7F1D9D87D7EE35A6DA6E0E5
7997E6E57C1404FD6EE611E8515C041C9C4C18F2779422870FCB22316B64BC4B
489BC0A6BB896CF83D8B1A65E23824B53A2E27F8FC816D83E8625ADEAF395E60
02283106761D69EAED5C8BCFC0D9130052054F76D806D8E7A9940FD0EC7D76F5
F4F39F08683396F910F8DA9C2B7D28F50A29081ED04CCD6B06E61935AA50B9B7
DCD21600132881EB31B73FFEC47A90568B0DD77A5DC8979F8891ABD60A018B1F
8D0553224E6FF2DB5A27C1BF314FFCC16C13BCCFDC912AE8DA112CC6AA64F41D
C27FBE7B6E32BD3E33FF23043827502B4D81EF8E712D9035C4826806E8BCB2A0
B1C18153D862BEF7079050F6DE0F565C60C65BC5297F494CAC5D9C67F6AE78E9
9613065437F6E7FDE35EB421CAD280F0F4037C4EDF5AE85DD2D6D9B3D49F4CD8
488A89AAA9AB8BC0A5AF84869E85038F913CD5FA2B3885E11017AA867B20AA92
52BFE95A08D3157BFCD310B07D6773DC1A8BF6B0C9048C174FB1B25F05585576
7AEC2711D8F6149337D79966CE66C8F60159DDD6F0324931A37C471F6FAE48E6
89F57910A605CE19FC0468A7CA173C8F4914335B712606E3FAE89EC81CB2FE3B
09A251ACCF067800160E87347BF4942A7E6974A5819C647E0761429FB454CCDD
C8E7C3C12C5E898BE08DFF38A30691C17C699D5C0F59CF53738EF1DC71088297
04611DB6DEF69BBD197DF760C25D9BF4D1345C56C0408F079B664E93EABC7BAE
6E54D1096316FB765EEA1FB1A9C02BA57DE84463FA332771FBB9CE7E067E77AC
72019799D26E72304486AA86AFA6566DD542AA9C9AEC1CD5C3C8A53CC8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 74 /J put
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
dup 122 /z put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
650616505E0FCD67CF5E89EDE5BF4076A2B61157BA3026222D87F25ABD7EEE6B
C063552F1E1DA55C6D0BE4CCA40B2166279BE26A494057184362EA5B25010B92
BD2B75AA25231695E03B804D1857C4DC377DD996A282AEDF8E58F906EB641B17
9BC5F8E8C853FECEA001C2EB6CF903C38A1ABA094BFFFD3DF4B07DA07CD877CD
81F5BCBE6D27F6BBA8F037E0D1A98F70AC1B2AD9BCC01FB61726E24A491ECCAF
88EE09BBD7CA442FD5B009ED5C6FB44AC315EE52F0DC915E5C16B65A57C4D901
B306AE75EB1CBD214F6DA15279353883B8E3DCDDD0657E9179FD2E27BC1CE545
7331B7DC09BE87F776AFBEC83D0DDCA760851AF5D54E00E4B01F2089C78AEDEA
3AD3DBCCEDE1824586C73ECCFC7EBCDE8B0D7CE99DEDC7ACDC88DE7DE274D5F4
679F6E56BA0A6144D7699E76FE0F3B6F7AA2BA31AA7BB5A18B3E2367CF44F883
1D1694A9E27F62A1A0860945A281C8082D9569160AA04522FBD6D0A632C79165
48C710B52CC247CE38B041B5D271233BDB60460A01EFCE87B4D417E8CC0D74CE
7C0FEEDB81C146A3E2F7F66CB8A08FE0BBF2D785C6E998EC2D68ECEF8D8F7158
A8F9536F33C4F39B0D6318C13CC53C0202ADF7925849BD821C5248562D5B0024
32C259353C93155F023F461AD322B4448CDF9522419450E2988D1C37F1A08C47
5C990A19601DE2786D657D5B0395D5CB1C7CDBD1C394EFD5553AA05D74FAD0BB
41AA1B7E43EF7F8F821B6F6F2DB14B1CEA1537749FF851553115D4CB551F4E43
24AF65AB584855A40BB4187449242B30FE9B07B10B06BBE106A8166A2278A7DC
FC0D2EF1EEC090718BFF892CA7156A23FC511AAF79CA37FD0F25F1A76134E35D
B4998ACB3B6915258372AD1D715202A5F45B127048B86E37C8F3275C80FB75FF
5355DEBC31183A1A22228ECF6BCABE61FCE6FA0FD74A89544825F7E919A6C371
6872B4BFBCD7C3D302CD4DE77DB74163440ECFD29C4296D3FC22931B3DC80610
AE29A3EA1F2D4073D60720A20AF90CE5521D776CA821A25704D64F4D6B09B7CA
59E8E7A1D9316EF92ACA4CA2FCDF8B15A9BD1E4B2DDC2763AB8CE529599DD861
085530F73028B71FF0A7FEB1AC9DD3BC11653AB78D2DD22E0AF45AAC54B26C44
8E5C7743F45FFCDCECC88946A3F4B2CC47802A2D6810D9B9EAA2E58482902D25
9CBDFD8F9E174061EAD82512ED20AB94E5B2DD6FDF518A708931A5DD1F5BBE40
48BE3E7207E109419E83FE224F90668C540C4C187D81BA58A8721746664B0B01
36AB0ACD6EC925D7656DBB093849CFF735BCDF50DD4FC7FF423B0438CC92F17D
274167308DCDDEDD9A983A3CCF65F280C3AF08E58927B8A4CEF029A8BC49C58C
A69A488BCC5B11B7DC0D7BB495AA034C6099F230C411C29B2F116D60317D6F85
31A174626CFFB84B0FB86BBFDF5E7558207B41198F8B79BEA4CD9681675BB910
32986E2172A2BDC2B84C631F4E1D12934FF9780F12760EF76C6E67DC17AC5B2B
9083F80772317F5243DABB35E9664CFDA559630ADAC2EEC5C8E9B14D73822EA6
746B23EF1335D34DFA1A8D62F0F54778589F68CF3D4140BF3818FE34B4BBCDCF
04D379342BD9773586A2C60739E3E7D667EC60EDD7F5236B0AF71C5B95975B3E
9F1820BB23D823E67A676017EDFCBE1A512D291D912B11292F29960446AEA663
D8EEFAD0806C69C8C63A1742EE2CEFFAB013D5BAF02057AE3A6418A470362AC9
D24D36E015F57FC9FDFBB977A3D975AD24B8D3C84CA4C2A6A57FE28CFAEA7B18
9B03B47A18947D6D8A3413D6EE85D9C150410BB6F2725D9B862AB2DAE4B9EED8
EC4F0F59A475B10CA7F0F52D37418CE9F2E6F0262B2005985D8348F9441ED719
912AC1A5E9EAC60B96F3F4698B1C3CDCF4A5DE15A757914893132B7D626A2B56
AEFED59D0D5792870751C4507BDE1C30A0CAAA6CE352DFF0BFFA1D72CD173117
F9BF1E6BD84A15796C18541A0D65FF7B825A6B1D7B183A78D224F6FBFB77C5EA
EB5B9F1B994C672E6EE516489101D898057680EB4CC62462FF0E92EF0E489656
18EFCEE4CB55418A4457EF6B37FAFFB9BAF699E631227306BE9BF56CCE4500B5
10C9DCC4F2E1DF974C1114359BE3136A6BD252D6DC4AB059878412526A4A1584
55AE7D6CFB31D19BF2FE9B680EAC56A395C59B872EF9C964E7427DA359D1B5F3
3E39D087BF4D215C03B7FFBB8A3692624966410AEB8AE3CC186E4D9F8C256E3C
1B885D72F2937C4D4FF2CF3FEFB8864413A4179C3C1262F0870495A1E00E9D47
AE7CB3422C7CFDD926957E589294E06BE4A6925ABD757C0A3FDC75915F61C223
066C23CB594F0D0DE40E793EA191AD6B6AEB7325D6264ACEC083D1B70560929D
8BA33631DB63D1B82E271A2A3EE175223F24F3D335A200A3AC7483971506761C
4939953416399722FF9BCE80059A58D867E442ABBDC3F1D9AF2F6ADB41A63301
C66B82BE4181C236AC31DC0A47A5FD61F9B43CFF76968D65BE4CC774413D31F1
BB0A2DDE8D22C2BA3A9E8241492E154B7A7905327F7F23020318DE5F98474465
C77614941C2C8677CCB3E7DFCA16BE4925E31BE4B57EFBC5C96C430B0ED3481B
64B7AFCD030A4B598BE6AF970FB9ABB787B75F7B2CC59D245449BAD5887FE643
3CCA61A9A0C09EA4437B4337AE9AE54D9616AE3075B9842EADB73EFA9DDE4CCC
228F5992957C9ABF9AE9B87499DDB01B7FA23C4E197C5812C057B411B23E2EE3
DCF3728E0391C76BF320A29884B8DB4D744868F2144F851430E43A884725472F
2D3BD6F28DF64A9776E817CCDB7EA74481C9752E2A2D58276E472F5E74083314
E70987BEA407ACD25E210BF26D80876075431B72D1D46753A3FD11C36784FD98
196C2596433A7964F27EF1C41CF7BBFEC129AAE1BD24E0156D5AFC744B56B7D5
D89D58D3C135EB50A559B5D788C761B6A55DF8B1F6B757FC1BE72F796063A1DB
ABF5AC744BCA4A4ED58807718C9D88AD28E078FB39AC2344A2E0959339BA7E5F
550F8354FA57A4A15E052F15C13B694F1FB3AEA29B0C13CC9D71DA60337C1B24
9EE3E7A615D555BEE44629F04FF90F2547C5ECBDC04D83495FF03FA0FB107FCC
9E56AC8A53DA2B284AABF573DA680593281033081541B7B16B2AED12F109AA90
46443C2A48E2CA26231C5F5696FF9172E55D21D9A99D5BE52016C0A64FCD65B8
BD06AB74BED3C546D8C22D59290FFE14CD280E78A0C7750D23003A196B024AFA
504E004247BD05773A1F0B9CE7977E237C4AFE1F613324AE10CDBB06E6F329BA
9A3A33B4F7F24AE8E6019B58E303143BE1EECA3CAA878E7F0D0D4DD90865801D
4AEA5BCB708A01EDDFC4C9749A0B06E3ED1F131F9AF6622A7D1D5998BAE82793
D7D15DDAE032579B4506374E4DCD2388F2648B9F17ED0115F225FFBD744D20C1
CC0EC537D7FBC4ED110188C271D75F442F2AD22FFBB1CE3CF72C85940C27E5CE
C0F369F6FF7CC02F060987808C2F55C93EBA15F405158A47010F8144966BD19A
AC88E515A506FA5E889B293D6320DE713CC711EC2977B4DE9860BE39B04C7B10
EC2A65FD152061D535A1F977D9CE07491A7CEE1046B5A586989118BFD7157DDE
8182860741D82083F86021A62A60EF9B4370B2763BD5C429430453AD622BBE40
BF0725D218FA4AB2C6880467082B50AECF22DF6B5F3F4D3F74C535E057EC0874
871BE604BC4341BD4F2C28E48742C3099DE8941DB0AA59CC4C198A9BF371CB78
BD25851EDBFC9DB04AE4D4EE2FAB597A4B3D742378B77ED2F8B812D315D4F8A1
8A2FE69FE6124536BF01C180ED59DA00524818BE42B89DE91F79705CA45D67E2
B5FD708F99F79051769FB242D7DC75CEE399B4602428099C32AA2D89E32D747D
75DF602BE229600E7E9FFB5DD706F180710E5F8717EF1E6887242C8C923E8FD8
9B0176F5070888C52270CC09D2DC954567CC82FDAE0638923D6A196DC6685F9B
6158A3F87B252D413187EBD366CF23E66642D95E7482B872A1F7F4C97A63DE6A
8E291AACFFB2528FDC522A68D6D2D7A0B91AFABFCC562DBC52D598613E20ABD1
8B7E1BC9D350DEDD5C2C9761828D0D113EA917C2DD86E186ED17910E8A0833F5
3A9FBBDCD29B30D213F2F1DDD75783DF44F9E09E48981D3378AE2E4E79EAA16C
8228077462CCAEDF5E5E911044FC644268D260491358F833E3F498E867119273
DDBA1C2B1358D3EC34CBD55BEF987D73955D02090E97905CBE60CAA581DE2710
C266BE4E5F6F340DC62732822E6847CD863D917115B173817A11EC430EB39BC3
787AC2A419B62AB244FF0D8BAE81C58FF94F71F66FABEB6175F85FE1BA78EE3D
A857F6F211DF6CE588E0B513F9C1C8074F5B6EA04B6C1E37B60CAD0901EFEEC9
80856C60D9E611FC67A302B86C3BD033D15B4D6CDD4F657021EBB800A07303F8
262AF97F9D538AD948705EBA14A9195E63DD0CCEB2D5E91977C450C49F4AD38D
1346417D1B1DE37A5147F8EF822F55A1803400583D9970C2A7908344CC958231
67CEDBFE850D67B24038720A4622E6A373F30DA31E58A542863A9A25E586BCFE
A8B07BCD42DDA0599D1F3B70F8B32FBA87487BBA6DBE4B5230F2535C1007A417
B7784D7FB75D2AD8A5F0274853F6CCB348EB63293F5F0C716FC7E5992F748E35
5255C3AF2712CA17532EF32005BFC13E8E61A60F463474F3B2050C00C2E51807
B34817C5CF1B58EFAC36F3F1EAAC05F25DDBBE662B48855D713F8E6FD8DA6384
EED714FF62E641A4632D5F07B6525204C8E9EB00A6BFBDBDE9F82A05FB047D7E
F0F7E0C6A6761EC9927B81E141F63DB4A794D56E41AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 60 /exclamdown put
dup 62 /questiondown put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636178FA377DB2DDE5FEF41
9E91F3BEBCFBD3B4EBB510A0DF7F4D19C6552BC98F10E25612B1396020D7836F
A3D3C865661DB276E428F09F048A916B4F07D8FD01AC1942A3CA342B0E531BF2
3E9A7AF265AA160510B81B7113D8A21A7B80B3643831C06298CE64490D1BD442
655AFB3E59D4BEA803F2C6887185FBECFB8364BC8C72DE13BF53666948ED6D06
A26DA57159B87DF039230D9FF4F1599A02E34AB75EC70EC145615A3EC1DE130A
E25CFAFBCC2745E480901393FE87AC239F56CC3A82132F1FC28BB6F08ACDCEB3
EF14472D2B44B354482210B0CD31E02051BB1FDFBA5A3E652F2ADF4EC52FC462
76A07127343DF465B4AC2BBD401B43DEBDE8F7B904AD2FBDA6000B830EDE0066
3BC920D6EDD5ADF0EFD658631DB3DD9994F24F7CC1CB310667ED6C836CDAFD40
384EDDDB45CE58783B479E641A58A2F739C79D3975720D4613ECFA2B661F6F16
739004EBC678C1F0CAB7526D3ED7A67E8C864CE0BC36AE063F833CE66C7B3E67
E540746EA9D50C11A20FF145FD449C026C655322B9BAB3D5715B1BDD6CE95562
7282C775C416C476E24A21A4603E4858D6B8BABEF712AF9648D7A92B1138FA16
AB06699BB084F049E32C11557DFFF834395B65EC460967B649A69CE2CE51563D
673DF25F7EA0400A145DF2F3243235C450451C550EE77FA8EFECAF90ECD2CD6F
C7CE876439563760F0088A6498ED310C7FE3FDB00E6D5249BFE13FEEE628FB70
7ED93FB902E98C73A826150F177D185F9E1831895F0DB9A9B37CB17F1E1BE839
622CCF93615931BB94F60687ACD1D9C6DC178B165FCA56F3478D59078F0D3D15
37F55109ECB5F4A5A1D91B2281451D210C069F966EB90621AE800E4248A41FC9
4098D48CBED1CAA4B16BFD37897D8542A37C3C4F94AE22773DE738AEC3042D63
5FC31690FBDF03E2A42F22FDF05FCCB74D647B765FFAA4E16B4890546EB7F1BC
92D2B3264C812D4ED8FF0CB14E7C21B684B8F9CB1D3FE9C4E70D88C54AC06B81
6314CFF9A2FF7B79B1F6219B6860F08815640BB029D1CAFF702314AF96CD925F
9F6712B28EA3C981CFEBAF4395630149E8622A7A1E545AADFF1EBB0076D57758
D38FEE2FC810F9149090DF662B9633DBCA50E939024005315F6BD2FFDB655748
A58B3D4D66EC6F939934DABCCA9825662BEB3730E9856246F953112E562B9A25
E31274F745F9434AAEA05CB8C654B98E273FB85CB9EA3AD1945779D6645D6D5E
8AE6A2FD6AD9C4F25211CBC3815DC4CD9B819B6000BD2C34F22121214DF62A07
EF2C95A170991A82501062B1D99FCEE47547A7CAA255F778A228C96D61CEFD2E
B474AA6F93DAC00F6437DDB3EE20531989145A79FC2212239FC24D8CAA9E7A0E
EC571DCB0C4158B4D1713309F11C538C5ABE3005A1B4CFCB11918D5CB0B41440
19D1C8B4DF51886EFF0A112BE770CE8B9AE33B9F40C5A0975D971C71065D9AB1
C1B4C97042BFCA7E77A50C0C55353814590B88675760523C6552E27A5A6B1B76
8C4E065442D2DFFC1D0EF7A5EC846D03D2E12E070FB9F74724B1979557F854E6
CF6C27FAAAA86DE0395867A0551D23064C358FE772DBE528AB77C153CC55D941
97F2F54782CC77382BD221EFBDE1F113361D28DFA1B32E058340F2DB7440901B
35CD9B0A9A3C2F823ED721C21FCAB0C82D58AA84EE2BD2591D19477476040A7B
CA638DC448630E91344294882A239CEC04885F081FCD9A34394222DAA61A624D
11F1E148642E095FF217EE599F856A0C9A6EA8133169C250EFDE27656D6C97C7
D2F99BE850FA91FF598E10D6B0E807CEF79777FB72A9AF2330F56502A83A4051
1AE42D9D42B16EE27DD63DD1A044C6FC19037F728490A603EAD406DD2A96832D
8F20C40205BB9EEF93CEFA1A87CB9306F7BD0EA7F1E8F589D72F1E7651F1E170
2A55F56C27CF4F78E1E5C2FCBB7FCC757CAE539D83A2E66E608EE1B83DE73320
E109FB02D60DD0055D8FFBFDAEAF6441EB5ADD2EEFF43CB141DEBCFB49E0D064
224115A48656776A1C698F8D4A7F12BD9A25B8E997DC1C0CA1A5A03C9BF655D0
56CD44CFEF58C3E49DC153865A5941E892F65C5A9E6F656A6BD3B26E259331AD
1B38AAC3353B966BBE07DDB8764D3D53426D5637C8AEC6BC276958EFEF7B4F60
F809F77F2E77A6B6AEB3EC41E1AD79B4A25BF05D46F044A23C91CFFB093E16CB
9BB46DD8866EE63D8FE5E36234702CF20E7786DEC6917C72DD030BA2F0528AA7
0ACA995DCCA09D6DB241BD02239E0C2A336042EED44A9E67A3044C1542DE6590
FFAA3775F39EC1B0B09B31C51FDD17B3EE6FF8B52B412F676437C19C1008C3EB
BFF88801893B1BAAC3D84CFC456531DB75BED11E2AA83A5003689C585B6F218E
FCD033B3E86D2DC497415D8B16E6FE6BDF20AD904D3B99728CE026FC6A88ADBC
942FFECECCEC7DBBE3714A300E467EB954B40FF747D2FD7F5612165F5CB13A0A
BDFD5FD2CB825D3DAA8CDBB34CF2D727E45E833AD34E04A3A149E7FD3886AF5A
027FE7D92AF892C411948D8C76A71C01987DC547D359BA2C1168CAFCCD6E03F7
719B35BD8511485F2CE6917B165E8B1210EF2DCE9408218D888DA9C6865B182E
E4C28C94CC5893E6142AF4CB0BC5AE992B5614403AFB35772C33B51D502BEFAA
09F56773299A7B79EF7942C07D8878265673BE26C073D2DA0EEA3ECDD264D90C
0EF3EE307E7152DABBCC999F1AFD61B3F0C10524B62231A4E7E01293988326EF
7BF4B1DDC745EC36DC98D7493ABC0F457215628172EA04CA8C6DB7774271A34F
388531B168F0AF50D14339E020FB079037E1181E42D760568140BFD6EF7B5681
4809CF3FB68C19366AA93129EAB821D752D1B5680B0A0DC2CD28B8763533CE5D
1B990C662360E0C49886A7F3BD334B4EE057E937C59498BE634FD114A114FC97
89D8B8DEA237203F109648B3522901E6F7340C180F5C4F980AA5168CC8EDCB68
08D52180AF9FD6640DA86109FFB6804E3852B430A075786E9839B16B6FC79193
B9F132EF31BE9EACD13C81AB94C67F9ACAAC6454125FB5DECD30826C1BF48AEF
96E5F3B7644E496B6CD8898C32CC9438193AE3E5C2F52369BD86D3ACB50A7AAD
CAC6B9B09ECF5FC220CA33F55E3CC5AEB0A0720434459BB524072D5C9D282A62
8B406FCA1B7C2F0DD7DD62E9AC0E1DBA3278A8B967BDB8CF893FE75ECEEE8461
6B71A29D206C2BD00B92DD9ADC6070EB99B9340157D3EA90D3D14B308001BADA
0B0DA60B621A60D7AAFDEA75FE172E684F3681048AB93ECD0FF21E63297137F9
2D4C4D60A2F5A3952321ADCB2F21BDB24C99BDD657141D4DA7533770F2651478
A9CFDCA1A1DE39D7AD6F23B616BDA673A1FD2E64584F7588326E5EA3CECE2A3A
EA0E99D809D4153F099895B7284FA72CFA2A508190DAD47EB085C47C6D928A72
7C8D2BA25C65BA10FF7F8EBDEA014FA7875B83F4915D324CE36667C12742101E
840977B9E1674066CA4B62553F9A05B8D817D6051BAE3FE9FFDC6AA080CF731B
7DAEDC2424E39B3474E5720E661A89013A90C48B697C3380250AFC4E1581BC8A
919B4455AAD3A9B07AD632E265B15EB259F682CAF0EE59D43DE90F8712661DC6
D3A3815D4FDF755D48E5CB705807D50EBCA8E8E99E7EF063B5D3A51C52AC6CA1
E4D424857E722688B8AD0914F5A1D632B1F048FF0DCDEC6D387BA0E8C5BCAB9D
3F3DFFF38C6FF251E1DBCE79EA807C8D91F45977B7B8710B08E06CB1D9C6D7A9
C94EE3664F8C24AAE58A8C4432B8DC3E3834311F8598DCAE62921355ED42BAFE
BC96A2000980026C7E0381A5139831BF7DB360A3B985B816723C32DA2D8082A7
3B26ECA7F46D31FEECEC64CF82F6BB262812650390293ED79A77C2346AAD0CCC
31758E1D28F870D6C4F2BC917253D1AEB3AB52745EA7D255DBB744F5E4EA3B73
695BB519F4718ED347584AA53390F60A688AA506B4B42277FD4CF18F489F423A
4687E97779472C912BEF7204BEC6A40997B3B358BE840F8DEE15168628D73068
4E252B28B3871E81EF3F701C6B20DDCD655A62BDEE25846F12E24BA8204267EA
FDB0D9DF1AC93130B2CBEBA8D5449173B97864B301A09D276260C8E72C9FBA98
DE2E85004931666CD83B94EBACC3F17EA1A53F49FD8B3518E968005C8FB90852
4139B6A3E4FF685683FF5497E0C22F6A49CF8EE6C234DBD9F3D1FD8FF2BF47C5
A5D8ACD5F77FA8B52B59C67D58BD3CEAF3D522D9B082A22AC5F3F65A9E6B981E
7D38D87E6C89685C5953BED6510786F781D5D5332C3E1B725F64C56D42BEA828
271AD2D59E1ED389ED70330C3DBFFE9EA390F3C24FCEA2A234829D0C716C81E2
D46D6771287698E235CB28BF1C02316C8FD4794D5A7062F2B96B848552A5EA8B
AA76B913B33BEE13AF8FAC6C95424592E96B49AE51AA993B64DFF659C911497F
B0030FA55BB4983D80FA5EE12B254132B298BE16B21559B9B26C2A693762E440
35955D393308C30E2A35040E3FE6620D0AF98CA7D877212C29D30E907375BE55
8A723B4E203E074631DBA4131F916752BC1501C0437FCB9D49162D31BAD3BC71
0F1826F63B942B6E29A03193CA212A60A9F61477781AE4C84250A002646A0F1D
6651BDB186EC4C638AE91A30FF00EE4DFD2B9F94CC2C7AB5FE90340846901608
532CD31341BB5032966653A4928AF5E1E7180E232AC0ECF51243FE22042E2EB8
E5883DF58ECAE94E1E053793CCE3A6276B82A6A2EACD412A04F8B63DE1468441
2D4900D4E92EDFD1FF2BCF5F3C06897BD616219FE1C0A49736CA506393031B0F
DCF573BD87BEBC15DE50B9D4FD301D1688481F3095B8945041F2F097DC93C0F4
CD5EE322FE217633D0CC4C4303342F417B74605CB1D420859F51F5E5A74EBCDC
ECCEBF670C6E03270EE7B0DE0751938BE52741C85A8E7B33B97EBD123596262B
C9BDBFED361B5D91A9C14FE744141F64F6FD865817519EB9B41562E999777BDC
D6F7AB5798D74ABC7C51531676ADC339A52EF85DF997D734E439D347EACBEEC1
25BDFF7073931F536F47F5B57E1DA448ADE47BA65F6CC1A30D643EE0795D2A96
3F7C321682B121A812FB8B719CFBEB545A3F668C1B827550751BE62547895E95
212563CA3D42BF97235822A1B3E6F267286E03C312AB3A19174D8E7D020A5727
7189F49999FD1206485EEB6A5088DC907BF8DB33265BBA83DB18BC57FCE698ED
B4286EC5CCA723BA61A9C788B8822A6436AAADFBF519A58EB420B19DD473E308
BCB91A52E3813D59C00BB435102A7212AF0591015EDE769A6E02C5BE3F5F2B7E
EEA63FDDFF7674D16D7B6D9EB12EEB5533CF5387C322F2D1199DF8D4280A15A1
E7FCCFF4DB999A9AC95E0C622A27FADD272DBE9E28F2FC3FBD624D7F88209DD2
EEE7BFB3ED39C6938CB61916CF60FD24AF3CF54E87384AC1F40F221214585C7A
EC7B144164C2232D10CB9BC97C802FCB8B8D425BC4807CA9E1D8AB5A36A3E4CA
DC840E3CADBCD03E90931ECA86A1B0490D1BD6034A6968D1C3F2E686CE5FC7E9
782AF5D9BB92020733A2203595093C91E9E988CE7A67F5E39BB9219FE87EBA69
A2BA21527D1897EB101CEFF432ABBB16D0E91DC246D96954F4E99B4CB5835620
11239C4BEFA355B58EBE0A58898D6FFAA4B1941320BD45A2DAF0D38A723C8272
6F93E506F8B76D75B5998BB4A8E33B8969805437360771C1770FF56C8C69223F
8814AB090EADFF1BBA471739144A7B9567417AB812B87DDA728A8863FDD598F3
C5BDFD5B2C6614732B30E026CE18B64D67FB3E06814DFE3EC75FC6996F5E96C3
8B08AA6368F738A844B3F57DDB96BAAC8CF03B3B1FD979991E03CC4FF1BB665A
52AD014E437FE1B5A21C3B1187CE7D4EED7A5D2E8F700D022F7F2FDB360DCC3E
7222D5EA018331F3FB938098DF45BFD7D1AF8E185FAD6F868229DDCEEFD705E0
B1E7C7F0E34941CAF9347A93998E4A3EC23E31AEAFAA430621F67E82AC0DA52C
D268F7B8BF15E031D145767E191CC377601D0828E27127B4BC9DCE5CCEF6A9AC
163CBEA531384C7B3C7772BE0B191039AE91DDEC77ABA455207AFE1D74D02681
27A58DF71E8968EC68FEA532BD95573307E37D6090FCBC70CE6801AF71B6E26A
5DA1EB1226C8C4C37F6DA5AEB9887E3DCE2CD7388C26FA40FD0F7238AFC0F760
C9F6554CD0A20401F258C07561A3276336190853B2947E0C0042D9D95D5DCBB0
300A2F5352D4854D168E8B1BE244D2C6832DC3B3FD5627CAB7FF65968BAA2F8F
AD4D91AD59F2E84905F2AC964C8744187C10555DD0D9D600D66BCDE8334CE75E
206680AB8C6AE4BAFDD4EC8C7F6984BF9B756A5A973ECBC2AF58D9841E47C35E
0DD56DDB218BA51A2F5C5510EF858298755F9852AC8BD9FFE2A7C8D5302A3DF2
CD176625C90C477DFFC716F4FFCF2218D96779A6DC67992522337ECF5E82C8F0
713227EC569F8D51F2CC0FA8C13274DCBB887024614434120654A8E8A876866F
2AF8B2AD6B014397379FE6DAE6745C4E9169DE1C9468142A1719B92C1D12CC1D
1D3CC90F84392449B2106BFBA0AA0DFCE4794B739AE4A67B4CBB6EE064F62CDD
41FEFEFBFC4813377D4FEDCA03D5DB3D47CF17CF91B34E50333B2BD37B2933B0
53FE3C638742691EA2F36CE2C68DD3B1B5E6A2BC559C37185CA5C984F7615EF0
234ABD41126BC6EDEE333F84199E422D65A2020A1713F3971D56C6211E9EBC25
54E8D39DC85915BEC8F8E2C7134197C9C04D08DDCDCFBE273A68840CCA4C5529
FD20D5E961F71EA3DFC062D51D76CCD45B4C21857F31E7108EC7074D52FD62CB
2A8E784D677BCE7999733E23E1D3D291DD05283A169AA28609A52CDCF4B26E3E
609D6A4AA2C24B55325351A761D7FD59C41BAD8FCEAA4DF363557DA2E5A55415
899AF805BE666B72C724AFEAAC7CFF53FE400B244436427CDF9CA42AD404BC21
277C0818E85D6015E71B70AC29671F5E8AACCF12225D591B05DAD4F5FC0307BE
6765C31AE66FFA0B7AE0EEAC95EA224B25E38DB9D68A3753717C77F44E5AB738
5F9DC94543E49EFB4E00B3BD60FE074C50B236B6CC892DFFD98E313BC507594F
70B9FC0DCDD4EFB00F508B06345ED3096BA986CFDB4F881E80B694B33CD77B2A
396689CA1E57A8D3CEDB268769C14E2B7E44B9D9AD5F2D355D59B87E0011D093
4D2CCD401036D4A861599D382C85FA6A109B7C23E6890F98A5CD754B78D58D55
F91511EF8B63196B86A38A58AA5A9571F58D1AFC374FD0B9CF4FA30387AF56CC
8BB553DFFF537A516A54DE0A361F11F958ED319F0C21784EB64CBA637151FC77
98EA1BFE4EB2A6995118D892368EEF8C96BBB4B434CE4E73121D1E22ED0F7C9B
CA689C6A4C78A1D7D55EB72005783B1840D19E339C9D25A8840A6262AB497DE4
D14FECE2E5B83D5E1197340E7C9935682CCF56A5E80509F517D3EB18451E910F
F72E2319D8EA1EF1ECB87B5E9BD0C541BB56358EF916E74D3355627BAA8DA64A
C6A8AA57B65F07F765B569738A20400F43696C112546729BA297FDD39D59A217
A18790D696D0C3341E0BA609D399CA608B654239EAA747FF2EC2FBCDFCBB62AB
0548B6B2B543A660D1CF90485596F308B67B3A5D881350EA5E8AF87103BA4348
61E2DD1CAE489E3045070E6FBEF79506442F9813213D1B60298291AC3EF37761
19308DB96235F79A230C69A587C29C175FD5A378A1269A3A4C4659900DC17ED6
99A1B1B0A5EA0E9A9AA5F1CC81F4E765D013E2D0E8A86B4E29BBD194B131F900
FF4950D1B35DDF4F132D1077BBD14A2DDE89BD4AE15B98600C293198F1702049
E82E0ED6FC601887F7F83325D824CF46BC9C4452D4401CED484117DC43692A7E
C10D53816555C0BD6B2710B35B075221334993902F08AA6E90C0E78063137D80
9B45AA006817D2F186AF8EC14BAD9642AFF4BB5B76CABE7AA10D1622B1ADC872
9EBCAC5966D3F162541F8FECB96D67FD71C4B3711D7A6F59707F75CA1DAAFDF9
4A2A5B07217F7D683C4B3551DE5FE56ABB7050D708EAF7E94691EB17C047D85C
6F178DA6436B50B7A6B960FEB8E1C2816CD2D402706DA3727729BFB8AA6BCC70
2088769C569507ABE96617F41259060888E8317C80C34FF29997C32B1285F732
C2F9660ED115F71594121F1F4D29F52AD2832762E039F745C2F79610F5F73551
60C101B99CB9AD77B65EF6AD06A92C1038E7105C7FA0FDCDB0F17140DA4BA168
0163692BB5B9749FA0BC00E6B85BFA891EB14AFA8323D7E13BBC01898523E42C
8C0074C77C602BB6A79762FBE42B8952F7BBCDCC81B14EB5621D6CFFE4876486
B58BE036F83394A73D88BE7AD56BA6EA6E360E27AAF758DFD3C1E0E853B82037
3482F81B0863F1D5F07B6D76BAA1F3DDABC263409F92921D77B879C1C7A87D77
B05EE011C1370A80F965036A3DDAAEC62DA174A6CC9ED636C9BDF07529082DF0
7A102281586E949B7288C1BD860545C2775548234BF65EBCEB9868555F519E28
C7D64F9326DD0D2D4DF56DC9646A265FC0143CA43818B0C4ADD516A4A16B4C42
55DFB1029F78AF9BF5F7F75FDBC135F0519D98D13B6A7BE56B17D1BE29AD66C4
0E9813561D436B4ACBA93E536EEEDC02BABA5E999AE7D0FD54FA78BF1D21AA97
E617233728D653E453BDB5788BE27236E5C51B8620918A43EA159ABD40BD7656
FD65E2FA44B15413477B1931734E82D8C74F8D23C7C5760E784BB61047FB5BA2
E0B61578898062F8E62E8431C8A15E5A7AF35EAFB1246E71596D427E045AFC6B
F8D31595D631650610B9ADD00683C729613B54B33E4ECA092C3DB1D7CD42E522
AF059F937B046FA00A7DE781DCC1D6BC0E9D9FA1B542C3647E2450E3E8A485CC
F7E2B9004061C9992FB4DF555A3FCB93A2B6897370E1F50AB36993D813464AB3
254FC47E5CCE3F1678CE2D7D3F393167BFA085FFD07128810F5CBF0B28FCF170
9C09BDF778B668705DC806835225EB40F6C3404E7CFC6C81FDE85366DAA61055
FEFF99C38E9DDA1B075346615EA9090943FE2BDD94EA25C3FBCAB5A1E212C821
CBEB22B66B938EC7851E798D0676688CA447BEE1EED56C1337A4977BCDE6CFD6
04107E029B4A9A418A2225784D67B819D127AC5F6040806F05CA16D60406A151
1FA5891641ED85AF5CD5CA550B0C029FE1E7EA2D2B11AD9986BB21A89BA372FB
7E2AA16B39CA7386659142F4F602ACF8165C3B503F1942E2D812DFA18E04755D
830A72E286A5C5F9EC03A0F32ABAB5D5845E144B0DC0BF94DBD3127E083619C3
BF7CBE62092721631372EA01F91E74945A5E56B6481970058DAB037835A26878
3246903F09E1768DB01322EA9C08CF72E77971EEECE3574DC6092E1BF39A64C7
EB567F50CF967C5420A4B64C0F26D1E14994B731E4EFD09E3599298D2884EFB5
F1FF3046D0B7CF79745EB49A05AC62A2CC23C32C82444D6FBBFD7E8DF96ED8B9
E82D918C36387EC7F070450EE70AFFAC2FFD61C792FA99006DAC7BC863BCD20A
3AB63DA67F8624DAE9168EB2482D79205DA6533EFC72E24128CD611959B156B9
986B59DA69B4DBF82966980CAD46E5DE665C8F94D8AFC6940713676EFF94E954
7F7CDCFBF3D84AB3D1FE19CCBDD70E10B3B1E21931EDFBD33C81B31E13A1550A
2FE6A20D6D37C636C93C915A3BEF6A91A6BDE25AB8D6BE99AAAE6E3F270F837C
BE86D8FB35919027FCA4EE032D6C749E161FC4761088CB69D94D5342DF9825B0
DAF6F93B50AD45658F2A87791B0E5A254E6E9C6444DFC4570908063A0B771377
A531D20CAAA0BDEBBD29FB5E4A451C6C4F42863183163BEEF90916BED930836B
0FAA08D41A8746AB879EDE37E1C231C062402066FE351ABB0F70CDFB4A6C9820
EE1C8B6F0A1B876FAD796F0ADABC9FEB5794F9CBE57611628FD41EF2B80FAE79
A59ABF394BA99A173AC864F423FD9B32DACDB8797B3A52E12A6D4787A451C3EB
4C9F76AD74467355FB4225B78AB25B1A3575D420D645AEA78F5B436687D79DAE
AD86670CBC1C15992EB9561A0D4D1DE932D7C542819C9ADDDCD2432A971C28F3
8EDD88A20538BBCCE49A64F453A6CC81F8D1414DCBC9F802D8B7F7A85F27634A
28346CA9335D2C545FCBCD0A0E28DEAF30578B4454AEEAE63FE628E480F01D9E
42A7B4C7696362A4A71988FD81F81E223B2B68CDE457FF0B2759C0BE0B9C6981
7F1F6C9152AD2DC8332E31AE1801EE06C1CB18BD54316DF938C323F52704D5B7
B719DFAE946CE6184588E15998EEB9059436E8ACC56EABC8CF2B53535E6A5563
808885872617A62D4A588FF4215058D1CD0DAD7D2D5A3DE22B87D4FA27DF36FA
46A6D7B74E1E13E16AF0ADE5D2D8FA5C3A7619F9E7BA3C98B408F6E61B311A2E
DF398D95AA56F043A2871CA35FD60A20E34E94E3ADB3C92A212CD150782E44A3
0ECE1D486348E3CAA7002ED41EC102834656ADBF867F5C6D2C257FBC2CFDA523
9E903940D4E9EB8A70CA887223F180FD8C065B2B0079C5D78383401D8137B699
0A173553F930F467A383DE6204C3B1DDE58F535265B0D4B9A1807C4A64E82E15
3BB7C323F65C67A7461910B37FF543A380EBA37157C77915279CCE4484BD913E
11A2ED4872560FD4285FAC6988F5C72F26907C51297AAEE08688EB1F7EA82FC1
419AD6AF9973D6935A9168B2ADAFC8239F899BDFBD2553A030CF52E51AAC8515
FBFA2290200602A7E70AB3DA2E88244ADB6FD736FE59DF77DB290E2557B03597
99A1FAC092BE67432EC879494AFDBB96B29F6C54E2F7FAA5BC1F9C68611038BC
94EF93953C4EC4FC19D57C1C05E022B880852C0623F724779035129A43EBC5D9
7951B2D53F0C8442A53112C7F721EC519170F6B449DB203DA214D892FE8CB494
E9AB3E5F7392965D8AA0D19272E038DABD3A5557C4EFA1799EAF67DE029B88D0
0930A5B81C58B15B3E03FD3EC2E0363715431AE48E9DF6B3733148FA235DD21D
41D60DD02C1C0860E0A1020DD822AE9EFBB288060AC90862C6F22021C84245FE
FA0C7948E43DDAB23C5AC8B4D30A81C1834E5BCDF7BA45D3D72A92BEE10881A3
F0A7CE45D197F1614EFC9AA378B4F7C46E64BC826D61651E3B9AAA79982419B5
938FDB232D9A2F2DC2D7DEDFF7EFFEFC59700CE2B58C8E5F271162763D14A06E
B0E8E2BAA4D651AE36E8BE8B063F21D9FACA68F27854FDF116FE46BACF491F4C
6C15FE1002A556B7B79930401FDBECA0BA323BABF827B99645DD9240176569D3
E92A37A92EC5F1428E4BB19C98BECAD6A385B966F29CDF00A41D9B85BD4A8750
B7052B19513191C80624E75E6E034BA89D97EAC534E856FF0865F1E29FCBD570
23BF45F84DC7807DA26D5D528627D2DF43E3162BEA445888451579757527C27C
73E671CE348DA746526D3EED12B29E97376A2822914F3364B2C0F19F908D618D
DEE72DEFCFBFCEFB2D4B88C63E902D1CEC7E17AE39B22447DC00FD5F4F1321C4
D3E889AE2B0A6E3BCA4D5DCF6F8B18472EFCEF144BDB48245046A2A3C271FC48
D41129F279B4D35A4AE11784EBD184F9C42664EA6CA6B785648854EE18B418E2
0E51BEC119CCDB8F82844C4C980F4F23C1683C05C7E67736ECEA551E5CB1BFA5
75291BCF5E0659DF36AB5F81759B0203C3590C3870B5707BEEC62B7B0F0F61D6
0EE83453B93C52336FB82C138DE6A04BE3F047C5EC9E3A6839A3AA339C4C1D21
146551AA37CA225BC5FB1EFA6E2CB86F7B226EBCD76150FECC0F4C6B2D137C24
D14C83489008F0D57D8B935BFA9CEADF3F16C6ACCA2A774058008E786A64A1BA
8D8DCF022AE918D3B9BA773F4D2F402FE82968655758F90ACFB646893C68F1C7
43D522D4EF539DC28F908A2C58E565BA5C30FA9481ECCC9DE15E065B7712C54F
BF87FE8797B076A3AECE9B419F8A1818B313DC58EF78DDC830A272F8BB93A79A
B7A5B6E5D3B465B4C423CACE8B06A4AEE1541B027228024AFF47E6B3B0E2A702
2B099CC6D7F5E419737CA35816613FC6A2F9E4967DEFC562DD05E2399E7ACFBA
922EAAFE28E27AF4FB970628921361DFDDFE8220BAC9DC378C476524F255381C
E75682989B7F50465B8A1635CC6FA2A4E2DCC59E4489B68568B143D6EFF16F20
2980985FCDE42E376A25ADB722CEE638F81F656082D886F76B60E72EA42852FC
E35FA41DBE6AD3D973AA188B17D315E1690DFD0EF550BF1B71EAFABAA34BC6F9
FFD1DB6AF14C3E5239D9928052018792BC6049F417AA1D2106B613D6716ABDF9
BD4B7ECFA65171EBFCB2EE955226B36949BEBD76106E77E4EC27CEE72592A37F
AD28A3518E89819BE856048BB13B971DB7F63C3FBA5B6E3778A03861420ACFDD
B3E01F9DEA1962E699D0917F7C078D556AFAC84204EB2C2E7065B137CA538B6F
7B9C93D556E34BAEABB6E7D32E5A358C97EEF89810DC8CF47AF82521C8D25CE9
51E0D43C106C730936264AAEC7307482CF5F1828D5350C3FFFDFC3A51CBBC929
F13C279C892C78EAE491A11384A6E4F3ABC6DCFF0C87211637A458EFDAEB0E1E
B573D3A27158B6C6CD5CEA5DE22AE55BAC14A5040F177444A6E819E25A90DBF6
E01F66FE6109AE8D122E050BFEC7F727B7F154E289DD335E9837D39C3D05C608
8A7A60A0DC79C9ECF31749EE9F58C414CABCBC89BD9E7A9FE828D0BE1E6017A5
DD39A061903BE7F202FA66CEBE08DFE3392E7F8D22EB50FEEB8623015BD11599
C7A3D4E69326A5259BA6D7CC961DFBCE483456A20E2D340B8AFBF411B8000BD2
DAC57265841BDDB1D44EA68D625CFC531C3AA418477D967E2890D26A2EDBDBB4
1D85914E92F0EECCC3D0E409AD5B426F5FAEE51D7CF8181F2F99BDA04F842081
83CB02654B96B52F09FA4CF6E6107CBB17B3BB43FC060314223A1BEE5A0AF7A5
2628E577A81DFEEFF7B33E6985BD885674BAFFD4A07B4E5DDF23DD6737FFD210
8A5175E8158C1DB446514BC09329AD870D62E31EACC712396575AFDB8615ED62
EFE75FDE98B6929DBCB74A727A13CD2858A754B7F248EB42E3C9398D37D4C226
6AF53D43ACF37458DF06B01CE6D638E87F0A998F732B83F7432DC6AADE3CF28B
9B952488791AC14C076C63E875467CE81066FAF462C94E787581B88E0962E77A
6E2ECFF8E42DE6ACE0892547A2D1615951CE953C29600FA8DA8EA5974329AC49
DDEE1FB5C27ACA9D60F11BF95FF83B690E97E1EFC20BA36B15DC6811EF8EE3F0
144D3253FF8E83547F1363AE9B610AB46F7D92BD7E6C971BDD4954CCF4E3CEC0
41B295263F2EC159A4CA69AE40A859FA3B0C292A8AD950D49554A344022BC6BE
E83CAB79DBBCEC7032E593546849637102205281F6C6E781092D908E38215A60
B6A0B6F645B4926A0ADB29FE27DA98A36E7D398AA67807F6AF7C6A3661586158
DE83DE1416B0644B6BCD3AE2E8741C5007A3650EF5747ED623549D3A548FECC4
326FC79028424D32016B2B4889E9786FB6F25640FF30FE0FF9066CF44233AF1F
275333E27A26A908FAB497CFB72A19AB85598F5EEF4ACB3B456CC298546568D2
D2782A1A65631246242123472B128D1748E52C29D48241A3B40C865316C68AD7
4BB2B6C1FE29539CE8001B2DCDB93315D7FDDDEF0F01450101ABB11CA0330863
E1CA26B3A3C1295FC5A08CB9CCA1448E06A5B2B32C4CB9675F2208D112475D1D
B27E9C666C556DD13FF92A8EDC375E889397385218B0A8584ED2A5A394AD6A36
4CBCDC6DFB76EAEB44503F8EA2D57E265618D3EDE22C1C20717CA65139185DBE
2CBAD09E33D69431ACE45CF93CD765C237296EC5ADCEC33A3E33B5581EE0E525
D3DD0F1DDD4C69EDBD8889433259D559C08D73C3F791AE70559E2F1DA8F9729A
941C893AA17B626703A4D617317A2D634A5E485D0ACEC8FFFCC99EFBB3681157
71D4F4C2A572A430BE4E3E8767ECF44DA6947A966CB6C65C7BEDF0E59E0738E9
751EE36880CFA4A09615941A71C535CEDC51451BB6E17E46F457800543399E50
589A62838739AF694718BEC62F15A395B8AD2029C273684C324F753F844B8217
FD73515DED1212D64730C11318642A790A653F6BB7F56C4488F6236D3DCFCEBE
1FA9612DBCB9D3C93823A42CB21F03D0411DBE123DDB58D845D160977533B8CC
2F993FEED00E5F7887F966A56A5CBCAF9052A06E8B874E82DDE993828C0678E9
476210F95B13E6D21223261FF6327055662CF2BF5D260140506AB6464A25A2B4
B4D8702606A9C3B94A2EE114A552B6127658638FD7F2493AD3BADAEF8A148E0B
70FC57C5F4FC81CC9559C4EDCE318D828B300CC771AEF67132809FECEC0903CE
C9175796F3ADA2D88B515584CFCE9C9BBC839E4770F0496B2790765513227E57
731E5FB632C54050B05AEAC26E2266722DB70422CE60CB30993FEE9E955FEBC4
410F14B4234AAB1F955858B3A9BBD5A558F6CF8DCC020BC63473E92D5991F945
C78E3E143D3FA8DDD13588262399D9992C3EF0FA32DCB21EC97D0177F5418AFD
29589840563FAB984D62121C345B8F311058525ACD621E67FACF46E3BD6566B0
817D664627C4BAB974696CC3AC471F9370E1AAB316F82C38707FB7B4DFCB5128
3E9488337C30A4ED796BB0A19E5F748836FE1A3F1F1F35B806FB9F3705C02A4E
1A996275ACD18BC574D9A78EF6044BA0F664850E19C062016DD7E1A4CA0B6E31
DBCED83BD61E58D7B4FC849870A2B4A2C7FB123FEB6A5D94477BCF217042BC96
7930D003FB9BC915F32588B06FC4CF8A5CEBD9F2712F47A9E46AC994C53A0DB9
D6B838661D5CA81F3AAF296264422AAFDFC328EA872C5110CAC47272B3FEC608
63911DB3E1A2A9118D9089F46FACC9CC77982721C38285D2E4A7FAF37F09B0A7
E280B6AB7D1956F77B478EB699A2BA7D6721962F23CCED47E1CC1E016CB600B2
199D24D28EFC6519097FA28501918AFDBA9EF43FD3F0A26171A5C1F9F54A0DBC
A42CBFA8A2AEB1930B33FE32EB7761522ED21E626E205EBFC0899A7877827E7A
7EE23D1442DC6D5440105640231C92827B420DF169688C1DF090EF6E6512689B
CF39F706A3EC3B1DD7BD4E9604F13E2BAEF07236964FFC319A5AFAAFF8FF1D98
4AEEB82E5030D5A81FA74F26B61758D95E38F556E87901BF5C7655DCD08B89D3
5A56386A93B57F46BBEC554589FCE4D2AFD4F01A48DF81D5487E7E45A9E2C4F5
B1C2904F0EA1C23FB5969337B0FBEDDFC7AEF19BD96410A2769759DB98CFF8E7
8371B6382B38A31388C9757DF2AB3A9ECA8B00C52ED56D7F3E03B6AEA2ED7394
C0E3A74D94F644AB68ED802964F95C27B3F0D396A834E27A94F4303E2651CE11
46F632ADFD834D217B92F33CF71D61827E43BCFBC2DE4C7219629FAFD52FD7F6
B55116E851663A5A2064FED29614151B3A034E933E1727FE71C543CC9C98C389
979AAF1B0A489DB1EA3BA9C0D9EA9D31E18D4B4EF71C99CD7C5F89D9088D12E8
F775F0B048B511E81AFCB9606A2F4C9DCFCF7B7B41F0CF66FEB1518CC8EF17F4
9E63FED66BB20B9348D29205452F8BA256B50975CAE32627037DC25557C30D8F
B0F4991C5B5FB89E79D20585426FFBEB77BDBAF498EE59740B80BBF989522DDB
B10B69E232D3F8F5391C59F61FCF2F3E0EF6B78910D227B901ED5D62911E66D7
72DF1C3B4F0A5B6356B9E93BF2CC534D7F67D397FA6317F7D2F36BCBDBFE9264
3AA1C4BAB1025851BFD6F86CF9DF3410A7D741F614B9278187DBA7984FF05E3A
D365C10365FD4A27E85F29CFA6B000397915AF0DC97D0DDD02F99EB5B18D797E
74B1F304EF52194C17A44FC0DFE30A6324515CA202977172856F0620D8326192
88A087260967B665A9F89021E899FECA6684DA1EEC3AC6B4D7567F5A51124ED0
61340D0A685E355C08E965EFFE32A2903481BEF26E0ECF0C9F0908ED113CACAE
5B7F648169881DA949B3755AC52353537A436C33AA3930118647F6A9D5BF8D5E
8261DC94CC09C620C84728B6E0CAF5E2A7CDB05122F10AA31FDB8637F2F357BB
5A2DA415962C59B0D62531E051545A107AD78DD514C0F46B77004296F9B5576F
83C3ABA82F5ECD142A7967A6763D569DA87FE6A06535A9D27ECFDF1AD7FD336A
304814E26BF96756B7CE8C2683B960B64BCF59FCCBA3A9078875029ABF6D85C2
A06068D119195954AB6E0F7777BF7966EFD2C4BA7114B63B6BD930235FEBFD73
3E3FDC0088AA33B0E911B817F15A0E0819A599CB9012E17E97D8F7839CD87C19
9706AD48A413FD7C15044ECBD475B81AD9D9E4CA0240BAE54673852841B48F0F
8442D900433F094CA61C3DD5719C174C4FC86BCFC8F094D93593297A9042CBFD
B2654B7DA2BBAED8A539C0C5FA153D8D3601D84C6A423204AD2828ED37752964
9740FE13183A7256F10C439153ADB52850DB9A726AB9E6E274BD168C137B40C8
C81D335A5D5F4DA940B46501F875920B3EC38FF85C661222EB895E071C5734F0
CDC66CD6D3FFDD8F5A3D4134D1A86E13B95C2B8AE70E4925A8C2E1A81502B711
FD7C3E559A2C8550EA2C86FC82CF5B24BF757C0A2B7128187BF1F0D6701FB9F2
031415BC86258C803F6B79DF726842372A02D8E2D083CC00E9B2FE4B9C3C85D4
A919269C69590E503823305E9A30C94E25C3487F9FD6E1E0780FA4BDEB7133A9
5C6A72F2C77804D9B7F6F1FD0701D1C4941C16C2AC551D62D56F05CBA78833EA
7D92FBBD3C2F5BF82FE8D86FABC0365D4A62ABBDEF8BA55B4CA81F23113676B6
42FFD922FCE721277E346A8591CAFF467C65C110C128495F753D4BD6EB2F0691
0429A44F03A82A217392D15A9D338DA05A0629E334B5F545770CF3F3C347D221
946CEC177C8C54C7515115CD4393516214AB9518594E16D5DA641F1B8335AA96
F496822052B38D1058BD7B400EB9ED9E026C9127E04B33C5601E34202B99AEB3
6691F469F8FF7B13249E3131863AD3C57937392AEF47E1ED1284B05467D08D60
F70FD6F9A13683893B5D59B843A32C5033BF0174F01C0FA1EF01393DCBC72E1F
97BEB2745D246318ED1B19527598EDA0C103216E06A52FABAC7D6CEA31D37794
2E63
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 79 /O put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEBE01C1B982
4B1CF704E817814FF9C921A7DF957037131846A9318EABE227DD959A3126D293
5EF095AB63775E893D0172D78115071DFD22E625B8E882A60EA5358F79B0D407
2CB46360841DE74BCBB46B4E841B227D8E0F7529519983B7BC1CA0D45BEF0C48
2B8E22023EDA74C4D427DB0ECD022C3992F11B76E2C8F793C3DFE2C317938342
C30A58D91471FAB94AD7E12F36A0AA59D644C3A14FDFE2E12796CBD29EE0033C
CA6F2BF09D62EEF9ED965E973D258A407815D3822BAF19EB69F9BA535581C286
6B14BD6A19C344358C74E9AF2CFCB10F23CBB244B8C18DD0FE5E0EE30C6FD8C0
15A44164AAB886A2F2984FB637E2526CEAFBCFFB5D4EADF4949FCEA04EAB843A
2E602B8937CC90B7E88977F6DD64E87648DBC0F53A5A534B6F879A7E2BF13E4A
A104ACCA022EC94422F26A233A62FA49B48F5462A330C87A82E7F948D4EAB247
F840637F5BBFDE8477A45163D3D97F3D0766FC1D1FC0A284235FE15AF94DDDB3
0F4F85A27E6C80E71146A1B23FDAC35CD3D7175A83E6ABB30649790A629E9A48
89FFED0C2FC7AF4623F02ECD3DE0C8A1B5F6B5773A4AF2E2057425768A71318A
A04598A6895D9E609E156849E2E8DA254461EBF2A2D3B2FBDA80A16728C2CA88
B384D3A88794F19AA477CA9E71A7D275D0AC7183FAF074848C2D4E3090AFBE5B
1CAB75584F8D51FB661338E3017822466D9920258E8F2C9F352161BFFA68356B
36625BFC19D4334AF252B4049F831F4F8FBC072D4165E5C6B050329AAADB34F6
B14A92F6BBAAE31221604DC4015F558C0CF47527C3BD167F1A466FB4811582E4
D76CB8AA5E99F59C3FC32C69A3F087A3DFBC123ECAC6CC534891ABA0CBA874FF
D4362D83E81797EB65C70C37E44AF177C992748BF06E06968D25E37CB13FC56F
AF5C7D031D48DADCFA4F733895512CBBF569FAF10B9CCE3F48EA33E1EB242A7E
0FEAF2F22D6F74F40459A0A051FA8C132955A674A5E4BA96C299CE163819F0D5
01C5FB8277DD6085B69672FA70E57F063D27AB863706500BD8DC3EE5F34B0752
69022D6C64A36EE51566CEFEB33BA62209C14342517CFAFEFDDC044CBE203046
DAB9DDB2E8886C648CA75F1D19BD7D52DEDA1F7CD1AA0EA3C03E5FEA7414CE7D
CCFD9F9401D481939A3ED007ABCAB7C022C3D4CB1C844499CC54C928F7283A7C
C5E10EA67A8BAB21AD87C4B31DACFD5EAF03D6D3F3024DBD1A86DA6841515D7A
E5F3283D55A9D87C1A1F6BEB8407250A81D4D55393D488138F867CDDBEA7F44B
C5FD28AEE588026DDC009BE9956EAC5270204203015287FB5C1955420AF477CC
57C640112A631D4AB5EB4D96FA4BD11B47C28CFEB675CB4E547A02DBBABA1510
6FEB8987FD3917BF71E2D40CD8E42691A68D9E890E1A172407F78C7172756670
1D9F6B5CBEBBB4936384F7D5E01113CB9E0FA21A6D8D96C6CEC601E7AB42AD0C
CD7467539C71E89104021E7720AEE22A211483F1D71BED31DF95FCAF84C0E465
57FBC539320454C66B50840995830B949822703EA5D547F4F1A451B78DB1C525
A379EDBE865E0CD51401DF1BD31848DC48FE23AC283BCD37352CA08EE6E2799C
C17F8FE44680C5D78BA136CFC021E75E012D1DC821484DB36B02898C536A86D0
1D68B15F5944C72344A88A7E0768CBB61594FDCF65AD09B7ADF324F5F1A708AD
C3039CE19F57D12F997638B858B488BF18ED7FE83861F2D538B673023E0DDCD7
62EA9B5B1AF3822610513037F8628FBB56BA4E4659FF2EFCE109F822AFD616CD
5C02A25DF18DAE4FFC232181DE9101CFE6643B78189E1280D8AA1E6B1E381739
75C59A019EFB429685F04E4E35085CE6937C1FE7A69E0BE04D5B8BA89D134DE0
686C3D6B3366A0677BAB1657C6EFA030806BA6B91398E81579DF223281D28123
8A9220FDB9014355689C6FFC8676176E439F91EAE8C9F384A3175FA78A26D77C
144540AD6C373B569164CF7EAB3DDEF5647FDAEC977DA0B507354474EA0A6429
B238E0E3E0853F29EDD143C29EC9602F86D167C53317CA4710547CDA7385217C
C765CA716D9A563556EC8F40BD4DABC0EA314A46BE941512FC8BAFA95D358C13
EDE4F9D148C1D6D6CD107BE48291E60A73D0F7BDF46D0211866926C7EF275C9F
3E9ECE607FBC967BE2601AE1EABEABC26D7AB9CCC865BC0A4B3B6CD80286AD85
EDB8C6226EC322F310E8FBD5173F8BB34FBC1D2A07285295A360FD6CBBFCA9AE
06E7FF5377885BE1F2409891191C8C9AA30482663C5BE2D588EF0AE785F8A257
A3EC57DAE9E7C14D7D1343DC87BBEF6A9B9995B70542A39281312C774A27F16D
F6FFCFA10DF9B026F893A619A0F55D395EEF8449E25ED7FF06F8B7DE2E2D59C5
6A685C73C70AA4768C07637797413CDA7DF6FC796AB5BCC6754B9F0E5B6C4BEF
315E062D705108A83A6EAE00AD84A39569B18DC72A1B32B4BC7C7C82C04A82DD
BAD753DFF53EA117ADDEAF062A1DE6C91D5DD77F96E0CE4E926352B5101A2463
96942113D30E27A8DAD33D3BEF59009E3E291A7441BCE262B64A984D9EA5A017
6020D7F72B46C57B964314731ACC0A22684A4C351A3B70182D86FC272CC89E23
A0182117C6CE244FF86DDE759C086705EF7CBF431191E8A36BC8E55ECFA6074D
42A865FDC5A3C80FCC61337BCDA595B024F2FFD110D93BC4E5F3889768C2E661
4C283120EDAAD9306DFAC01252B686440DE32A46AEB2F91740467487274B4776
CF39C6AC3F3C4D1F06A4B1CD0F4AAC9B2CED1904DF89117B4D17C5416E777647
EF3D5C348F7068801727549244ACC5884B8730AED1F8A2D6A565A7F1248BFC65
86D381981E0A3E715DA1F715236973A541749F05BB9CB842D46D3143490A3EFC
184D75449A757047C6327B93785C62D5743D50B81D55DF1741CAFCDE43B12EEA
BD1CDC41F4CABF936273E55B78A5E5E1F1C4C64D6E591B94574C88D90026B5A4
49F1D3D1F19AEA6D4004E8202466CB04C785D64BF116D90623FAB882A14B631B
3B6AA6585ACD65AED7B8F83E61ACFB39A95D9BC09BF3B6B2D1A6AB240FC8C372
6A029C8AE2DDBF86F4859FB0D41A04F1E58CFB53A0694110BE1A88BD1EE26D15
708D7A73A1314B99BDFD0D5EE0248402B69901D02B6FACED11FB365A26C09A37
DFC122FE6F2522DA9AE5356DDED97DA85A644BFA07FD2E6604670014B3FA0729
270F35161A712A8A55E19744606098FA789146C73E710946D493F7E3CE2E9231
B8D4BD84966CB4DDC390862A29380D02714A085A879EBF1C7FF7360A2AFB9C68
88009F50AACF3320FE712325A6A2996FB7CAEB906F819ACF42CCCEC06E68EC4A
035AA5ABE2E1DF7AB24663C637234997C18A9ED3E42F5B6D0A3E80EB42B7DA0F
2B995EF940DDC52575A2F1C2CFD670C6AE7B6573355C84231AEC646430526134
339FD8A9A3FBD2DF4A2A31FB47B4F85ADF52EF4C6240469EC50399A2AC301122
6DFCC60FA7692074E6D591A2BFD89AE982D8FAA703F640DA9963B772F1341F8E
474ABEC7B65E60EA417DD4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 50 /two put
dup 52 /four put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 73 /I put
dup 79 /O put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{14 -250 1077 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EFB5EA2C1CC5BC4
10B9F2CFB15EF40B4B89C2A47602259F6151EA1F80A5CF305047DC1ED96295BD
33B8D345BFE077AD3953E52363403E0E367EF0F56CEDDA3040ABAC807686BD29
CD94C473220A731C05B421112E08489C7E6571835A3CC404785BD6C8028C3FF5
D4198C89FA9F026499DA5ACC047C7F0993662D13012075F607DF17C8EAA45734
24BAFD98819FD1B3D6A0FF44DA4AD731BB329D63255D1B4DA248AE3BC300311D
9ECCFAC7396D4F1B5FD892C0E42A84706C3AFD503C6BDA912010090FBF3CF0E3
E9BAE512D498CD09417286C2434190A5758046DD8EB19C21D106BB62F1D2F402
4D41D712D327324FDC86FE9B5A3EB910401083C060FEF8D91E7956433A8993B4
7F7806EE9BFADF516228E45F3A32C21008E4C22E12533BAE1B1B3C808A8FA5A6
D30F062F0370B582783914DCD4D4660F091F532B3D93A0263F489DCC23A9AEDF
7218C115E383440617FFB2046739698ADCA0826DB7D8940360E19F592C1B876F
3818B8DB26AA24630F14EEAC2C525A77B757E8A2724A3670B0022EBBD139FDC3
D6C9378408F1433B62FFF9E1307058A848D12CBFCB0B9CFFFF7C59415E6F7679
44E17A547828607EA89A4DCA46F221FE45C6F237BFDF72B16F7A4B2A463312E8
94A7585B26499C7BBC636A42B24549AEADAB17EAB484880DC871DF9DE163D576
09005F8032BD10FD580FA38B29F87FCA9075470C82A8EBF973745B9E0ABD6566
6C1BE3B155CD70CF8AB807A92A648F7CE9AECE58F239B96F8B8DF5310BA2287D
1ECFF8691C6D80F771874E493F0E646E1AB312367D52F7628C6641FD37C7BA72
FAA2036AEFEB35ECF6E971FA2599847516A64DA33BB4C21C9B7B32B2CACE567F
FA48D14C07F6E0D776B3C2607A150B01B84D6B3BA9C1868326E0C2AF948CF8C6
3D546EEFCAD76394F027072861E7C7F314A1FA3EFE2FC30D027C6C865099437B
C121446FC7C165D3057952DC30C589E115583B42184E99195B95A7821A951885
826C2C4664652323A0901703300DABEF203715678F7D0DD833E0C64C6E46516E
098C9A96B7754B05EB04EF0F64B3C71D796028124E75F9CC9C944CBE561AE664
B71EF21ABABEE31F67322BD83705C8BB1BDE8E7CF9EDF1367638BB09756693E2
AE7A8EFC2882DD99436E23937DAB9BC3F7A57AAC305DF1E10934C87E4079CB96
2D068D3F979898D520CD0D789406C230E1B7B83F418102C4CCE1EE6A2BA6E4AD
9BDFCFE9E3BE357DDE84811FECE21EF77BA01E7811793C833B0BE603C2DF2D0C
2B52F754A52FAEDFD9C009BA411389242121256BDC6A1786F63BE27DDE39E22C
A3D26C218B60EED8869E7ECD9104FC647E565B0AE29AE59A4B65788A7740D8F4
DC4749DCB1140CC00BC70D0D1788894C83DC6915AF94FBA899AAA44F41C60C95
070213311532A21B77CEF753E1F52D41110990A9923B9F4A4564402C87F5773A
FF4CD6FCCB822C30BD99B51216BC398640F08E41A557541590BE357FCBA0970A
AF97C69A1F9AB8C4A44350B1BF3A32B1A90E1ED55B1F950562671AA8F36879C5
A8AEFC6449AD8B74511B1530F8998CA1661A0D292BAF76EDFFED9AA8001BD578
D30E2E9F3ED6E0B45DA961A3BE874401DBF4BA7304A149B25C316BF6C2640032
2EE5A779C3C0F761224789133D1446F6B3401399BF84F5C7F219F08AF6516A79
231CED57E6F6E4388FC85DE712D7AE3A57B4A851414F1728DE8644D229AF1B6C
A28233D9651192E1C718187F9A8E6B199486E77518CD4676350EA71C93B7C4C5
A052AFDFF93925378EEE8057296DEE9CA343AAEFA0F0F8BB07FB736CEE6E9415
67DD7C4BA57A10513646EF014823A55586C25246122AE0F2C378E860FEF52A38
519751612DD4C925EFD0A1DEB2A8D9583E0F06C53F99D3A34AA7A4672784C3E4
E776BCBBD13FFAD0953EDDC37C6B192951E303F38561B239658AB03897FCEEA0
8ADB51EC7D4F3600AB48AFEC0A25FA693F663DD52583D9B1D0ADCE44A04307F6
D2D53E3099EA65AABAAEF83198C25AD343AD10457E441D33EC55DF00CFAF6757
0961562FB4F4238DCE242068492646D22DFF190A7D453B1473A77B4BE0315482
47AF84FC91BECBF11C9BB180E3F8CAD4587A95293ECA6A293E6DF42684D01366
420D054561F9DB927F26787C1B289D2E975C433DD2D5DD5410F0A63E9F4AE8C0
2EA42BBB3EF4ACCB86CAE38CF0D50ADD63B6762688C9F87409F23690F46716A6
C6A36E9F04D14A5F781C4B07ACFD989B293C6D56B40FAE06DF1A4D259FCA46FE
30655A72A7EF2A0803BDF940278FE072B23AD1BAC8A8AAAE053DFF4A5A39A8F6
47D1EC64775DFED25EFB392E819160F99B3F1C260C0892F786458240223B33A7
3F5127673F908C036691175733087A79BA50D98F43673926DCE7BF0FDFC85E5D
580CFA9E282ADD24A61FB54A39AFB8C90A385D42182A455F15DEC83D34F29E36
CFA68FA075CEB59F04BDFA4C03B651D1A28AF1DDC874773237ECB31B770CF540
FC7F78CB9244BB8E2EE97CE5E9DB03984C0E9FEE4030EA56E863BB11D59519CA
09C7FA9BD45C3EA2372A73D188936232D32C2388F284F92DF742E523803E8F6D
61525D4017CC9DE6B086D06DA9963709CB6D78B20FA3EE1C89B8B74A2A9421DD
C8BD8DD843E461CCCC2D45F008626934F2E5A0691FCF70CC26A3365B28F9C56B
29FB90EFCAEBC5F944FC216516E98D12830DC2C4E9A7E0F3A38FC3AB799C0FDB
C078299BB0F13F67008B0735EF6A304189BDB46977A51F6F52FD1FE4801D3224
396624AF5AB383F5D243F645F7A8325702A5DD46B17D7B04351171A997BBF69F
C56E2270BE336960AA6393EB176F73486CEA582A2758AF11614DA5B47E4C81DF
B9727EA76E98AF02CD3C8506798D2223BB15B5714762C741B05A413F4B466E32
D23FE9A17E850CA948DA8FACC2DC49A94BC974018D4C7C3C81DF8C0E45E3E9A9
5A70668F298950C4B864A68856515B1C103022EE5D3553C51DDB83F2F82CE54B
46A209EA59F250B9CA769EC4BFA9D78D42CDC6D4F3A919815495CCA3EFBEBFB4
242BF50ED27891CCDDCE6D02EB71A73138A08D4B042678D187570F7461596537
FD384268879AD82D6751960C8D2F995731F61827D400A5675D64BCB60D2E5155
94EE4DF4E3BD7AFCD5725C0B5705C98DB0E7BEEDB8A601F84AC26C68583EC7F2
CD761C79509C76A44C314182DD62D48EBB1D38B3E326C97A0D6ACEB7ABA88E0A
C6E01CC962D15091BF681823F1183658FC6CC4186243FD34635439791991FB90
274823321514B1BA48B5AA6B87444C03A296151ECF63E3CAE48ED4F6ACF762DC
B1D7C6E1657CDE1D0A62314252108C951CC02CBD9C894BD61E8B4AA39D1E50C0
AEC25B29BFD4B62B08AC105D440EC2234DE5C14FB3696221D38EAAC1A86C19BF
BBEF94AA7B6BD3E4722C4F97FEBA1CD4589FF774F07784C6B0A5348163866A3E
EF6232AB956025361C3CD98A2E7FE660FDCB18A9046E1E5CF41615781F4BD3DE
162327589BAE10F74ED9C3BBDCBCF59473102482B3BABB70C1D0B2E83E256E9B
093724C898CDE7E423FE870480AB8EC4598402417034AFA694225EDF3A8B29AD
81178511C72E0B8CCD8E352B37421CC371E99191F91138FA65D3A26ED100321D
CE0E08AE16ABA1AAF0AC2FAED300B4F92CE9E5D27686EE9E99814295E139DF1E
1A96C4D7FC2D9DD0C1E10F19F5E80201586F38F62447FF8D6147EC56AFEFCAE5
453224AA47FBB43AA518D94156FD655EE66312150791DDD7F04532EA306DCF0E
86E75C0668EFFC63FF66E390C0A56C0B28BC91313E686C191D66AF5E21B7DFAB
D93A614666CBAFF0A78488354D0432D00D5F3037650C72240EEF5359B2D03261
3CB96B4199865685471A8211F1351D878A8C0D3218DC0EA81F63545E9F6459EA
16AD11125760B313B9ED5BA76A253B34B9597BAC6AB32002838D662E426959D8
173EDC4948EF895ACBF1EBF2AB42C33EED57BD40817EC5392AF7B62C824FE7FD
E0E14004EE0190F495C83B9570E08BE6EBC4F4CB89F141C06E731D9FE3494C69
846464C07453A5C1934DA916D9D1F6466AD56A98B941384FBDEF08C94496897D
6ACE2385D7A4B4C92D292BF6DC8DE53267D3BCEE35646F46AC95F1211E58804A
F71FC246DE94055D9C5263E1B78B63720D2A0FE1DFC2E6D80C0601B3CEBD21A4
E595A5D7CCC0784D96377428E5314FEAD0123DF0477656E47F1532895D44E713
511EC4744878B65D28F5F0F5518C03C07A8442526D7C8AB61C74F66D4017EAC9
AE8B2911F17503BE4BCD00D3DE714FC399DA544A251284591593965C755B1692
4237CF591A79F8A77F35A1B3AD3865C765828290E0AAEABBB745663B59AF2677
3A2675965D8D69B8B917B141510A6DE34FBC252A7A065ECA0FA39677FA2D3980
ED22E28EBE8025C54596A810104258AC7C1D417E91353BF256B5EFB0C1B093DD
08302EEB75807A35C84A24AECDE7B78AD6BD8B899E5D3317794596EB24504BD6
F4E84FD65235A0873CACD866DC32486CBB7D8775EB26FCAFC4ACCE256A01A443
0A0E06CC177435328EA576D2FA86133B1D4352C8E4BE6076D9FF4D69B83D9EF4
8DAEC69224E900B7887432E2151D820CC13FB432C1832C668F46255EB8F9AF58
9A8DB8DB0AFE555F5F7132613189582D70B842BA4FD84937DA02F9E830943112
88260F5F28614AE3D8220D2BFA43344C5554FA9F439B9B4017D414E3F15614F5
C81D01E4E896DF7554421F163D2929F769EF0370D5FF30EEEC8F41DE381E5CC9
C8F8E4284C56A001F78CA64EEB2EAF8B308C4FA3CA62591212EC1BD38049CEA8
6A4949C8DD0D8D820C1CC5D4AADEF56368348A630A51A36B0699F9BABADA445D
424A7245ABA2E4F220363928B0F44D81EA40968C1D8066ABCFF37D469ED428EA
784D2702D4CB8060A309CB4204196D0153AC5F2978F86F8804FB095F1B458AD7
742D04613F81E90CFD6FACFE67F8400C2202A06224C8E6666B054F0EE9A58F7D
6C0FEAEA815E7BFF0387BDCDCC1D618B8702380B79CC5B711F17378ABBAC6D5B
AADA4D712C278D2063FDF930270AF4A4F7F35A91884239C4455AAA5088B4CFF9
261B581A3DC88AE168DAC126478CF94CEEEEF2FEEBA5C1748C104750C3EFA26E
FAD192A72B42C5C4D95AA8043CD620A011F325809074BB54D53BA484EA1A132B
00034A3C0BDD01598A322D95F470DF45F489B49F89D820F964B1D915B75DF939
107E9DAA8FD7EEF22BFB55553C88F222A17DCC6A032C58AEAE1573B8AFDEFC31
DBC275E21E4DBFC6EAD3A555B3B0BCC5D3D97634
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (Assignment2.dvi)
@start /Fa 134[71 3[75 52 53 55 2[67 75 4[37 1[67 1[61
16[94 75 1[101 8[105 1[85 1[103 16[67 67 67 49[{}19 119.552
/CMBX12 rf /Fb 133[48 2[78 1[63 1[48 49 2[60 66 4[36
60 2[54 60 2[60 19[105 2[61 5[88 84 82 19[36 46[{}18
119.552 /CMTI12 rf /Fc 133[37 44 44 60 44 46 32 33 33
44 46 42 46 69 23 44 25 23 46 42 25 37 46 37 46 42 9[85
1[62 60 46 61 2[65 1[76 52 65 43 1[62 65 54 57 63 60
59 62 65 1[39 1[23 1[23 42 42 42 42 42 42 42 42 42 42
42 23 28 23 2[32 32 23 25[46 46 48 11[{}68 83.022 /CMR10
rf /Fd 139[38 38 38 2[49 9[43 1[43 54 49 17[76 13[73
10[49 1[49 1[49 49 49 3[27 44[{}16 99.6264 /CMR12 rf
/Fe 134[59 1[81 1[62 44 44 46 1[62 56 62 93 31 59 1[31
62 56 34 51 62 50 62 54 9[116 85 1[78 7[67 3[88 88 70
1[86 81 3[53 8[56 1[56 56 56 56 56 1[31 1[31 44[{}39
99.6264 /CMBX12 rf /Ff 134[88 4[85 66 86 1[80 1[88 107
3[43 1[92 1[80 3[88 13[88 3[121 5[58 5[113 8[46 5[79
52[{}17 143.462 /CMCSC10 rf /Fg 137[106 1[102 79 104
2[109 106 129 88 2[52 1[110 1[96 3[106 17[145 5[70 3[128
3[140 6[55 7[95 2[95 47[{}19 172.188 /CMCSC10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Project 2: I/O Elevators) /Subject (CS 444 Project 2) /Creator (LaTeX with hyperref package) /Author (Christopher Mendez, Joshua Bowen) /Keywords (cs444 ) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (SSTF Design) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -4 /Dest (section.2) cvn /Title (Questions) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.1) cvn /Title (What do you think the main point of this assignment is?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.2) cvn /Title (How did you personally approach the problem? Design decisions, algorithm, etc.) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.2.3) cvn /Title (How did you ensure your solution was correct? Testing details, for instance.) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.4) cvn /Title (What did you learn?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (History) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Git Version Control Log) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (Work Log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150
0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150
0 a 668 1235 a Fg(Assignment)64 b(2:)85 b(I/O)66 b(Elev)-15
b(a)k(tors)864 1654 y Ff(CS)54 b(444:)72 b(Opera)-10
b(ting)55 b(Systems)e(I)t(I)1730 1889 y Fe(F)-9 b(all)39
b(2016)1764 2005 y Fd(Abstract)161 2223 y Fc(This)28
b(pro)5 b(ject)27 b(in)n(v)n(olv)n(es)e(researc)n(hing)h(and)h
(implemen)n(ting)h(the)g(LOOK)e(or)h(CLOOK)f(i/o)h(elev)-5
b(ators.)36 b(The)27 b(goal)214 2322 y(is)g(to)h(gaina)e(nd)i
(understanding)f(of)h(ho)n(w)f(elev)-5 b(ators)26 b(w)n(ork)g(inside)i
(of)f(an)h(op)r(erating)e(system,)i(ho)n(w)e(they)i(are)207
2422 y(implemen)n(ted,)g(and)f(ho)n(w)g(to)h(debug)f(them.)38
b(Through)26 b(w)n(ork)g(our)h(pro)r(cess)g(of)g(learning)g(and)g
(implemen)n(ting)1499 2522 y(the)h(iosc)n(heduler)f(is)g(sho)n(wn.)1501
2907 y Fb(Joshua)41 b(D.)h(Bowen)1528 3057 y(Chris)g(J.)g(Mendez)1586
5081 y Fd(Octob)s(er)32 b(24,)g(2016)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 275 83 a Fc(Assignmen)n(t)27
b(2,)g(CS444)f(Christopher)h(Mendez,)h(Josh)n(ua)e(Bo)n(w)n(en)150
224 y
SDict begin H.S end
 150 224 a 150 224 a
SDict begin 12 H.A end
 150 224 a 150 224 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 224
a 134 x Fa(1)135 b(SSTF)43 b(Design)150 539 y Fc(Our)24
b(SSTF)i(design)f(basically)f(consists)g(of)h(k)n(eeping)g(trac)n(k)f
(of)h(the)g(head)g(of)h(the)f(queue.)36 b(W)-7 b(e)26
b(consisten)n(tly)e(mo)n(v)n(e)150 639 y(do)n(wn)29 b(the)g(list)g
(from)g(one)g(item)g(to)g(the)g(next)h(un)n(til)f(it)h(reac)n(hes)d
(the)i(end.)42 b(Because)28 b(the)h(link)n(ed)g(list)g(is)g(circular)
150 739 y(in)h(nature)g(w)n(e)g(opted)g(for)f(CLOOK)g(as)g(CLOOK)g
(means)h(that)g(w)n(e)g(immediately)g(reset)f(to)h(the)h(head)e(whic)n
(h)h(a)150 838 y(circular)d(link)n(ed)h(list)g(mak)n(es)f(easy)g(as)g
(it's)i(only)e(one)h(additional)f(step)i(forw)n(ard.)36
b(As)28 b(eac)n(h)g(item)g(is)g(reac)n(hed)f(it's)150
938 y(added)k(to)g(another)f(queue)h(to)g(b)r(e)h(dispatc)n(hed.)47
b(The)31 b(dispatc)n(her)f(c)n(hec)n(ks)g(to)h(mak)n(e)f(sure)h(the)g
(io)g(requests)f(are)150 1038 y(prop)r(er)d(and)g(then)h(completes)f
(them)i(and)e(remo)n(v)n(es)f(them)i(from)f(the)h(circular)e(link)n(ed)
i(list.)150 1179 y
SDict begin H.S end
 150 1179 a 150 1179 a
SDict begin 12 H.A end
 150 1179 a 150
1179 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 1179 a 133 x Fa(2)135 b(Questions)150 1418
y
SDict begin H.S end
 150 1418 a 150 1418 a
SDict begin 12 H.A end
 150 1418 a 150 1418 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.1) cvn H.B /DEST pdfmark end
 150 1418
a 93 x Fe(2.1)112 b(What)38 b(do)f(y)m(ou)h(think)g(the)f(main)i(p)s
(oin)m(t)f(of)f(this)h(assignmen)m(t)h(is?)150 1664 y
Fc(The)25 b(main)g(p)r(oin)n(t)g(of)g(the)h(assignmen)n(t)e(w)n(as)g
(to)h(b)r(ecome)g(familiar)f(with)i(the)f(w)n(a)n(y)f(\014les,)i(in)f
(this)g(case)f(sp)r(eci\014cally)150 1763 y(io)32 b(elev)-5
b(ators,)32 b(are)g(loaded)f(and)h(pro)r(cessed)g(b)n(y)g(the)g(k)n
(ernel.)51 b(W)-7 b(e)32 b(got)g(to)g(go)g(hands)g(on)g(with)h(the)f
(actual)g(\014les)150 1863 y(as)e(part)f(of)h(the)h(k)n(ernel)e(and)h
(b)r(ecome)g(familiar)g(with)g(ho)n(w)g(they)g(are)f(structured)h(and)g
(written.)45 b(Additionally)150 1963 y(w)n(e)29 b(also)g(supp)r(osed)h
(to)f(b)r(ecome)h(familiar)f(with)h(the)h(qem)n(u)e(man)h(pages)e(and)i
(in)g(a)f(w)n(a)n(y)g(the)h(en)n(tire)g(concept)f(of)150
2062 y(referencing)d(and)i(reading)e(do)r(cumen)n(tation)i(for)f(a)g
(large)f(complicated)h(structure)g(lik)n(e)h(the)g(y)n(o)r(cto.)150
2195 y
SDict begin H.S end
 150 2195 a 150 2195 a
SDict begin 12 H.A end
 150 2195 a 150 2195 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.2) cvn H.B /DEST pdfmark end
 150
2195 a 100 x Fe(2.2)112 b(Ho)m(w)50 b(did)h(y)m(ou)g(p)s(ersonally)h
(approac)m(h)g(the)e(problem?)91 b(Design)51 b(decisions,)405
2411 y(algorithm,)39 b(etc.)150 2564 y Fc(W)-7 b(e)27
b(started)f(b)n(y)h(doing)f(researc)n(h)e(in)n(to)j(elev)-5
b(ator)26 b(algorithms)f(and)i(sp)r(eci\014cally)f(in)n(to)g(the)h
(LOOK)f(and)g(CLOOK)150 2664 y(elev)-5 b(ators.)35 b(Due)27
b(to)g(the)g(circular)e(nature)h(of)h(link)n(ed)f(lists)h(in)g(the)g(k)
n(ernel)e(w)n(e)i(decided)f(that)h(CLOOK)f(w)n(ould)g(b)r(e)150
2763 y(the)33 b(b)r(etter)g(c)n(hoice.)52 b(W)-7 b(e)33
b(decided)g(this)g(b)r(ecause)f(CLOOK)g(w)n(an)n(ts)f(y)n(ou)h(to)h
(reset)f(to)h(the)g(fron)n(t)f(of)h(the)g(queue)150 2863
y(ev)n(ery)28 b(time,)j(and)e(seeing)g(as)g(the)h(lists)f(are)g
(circular)f(in)i(nature)f(this)g(to)r(ok)h(no)f(extra)f(w)n(ork)g(b)r
(ey)n(ond)i(what)f(w)n(as)150 2963 y(already)d(happ)r(ening)i(b)n(y)f
(tra)n(v)n(ersing)e(do)n(wn)i(the)h(list.)275 3062 y(Once)f(w)n(e)h
(had)g(decided)g(that)g(this)g(w)n(as)f(the)i(v)n(ersion)d(of)i(LOOK)f
(w)n(e)g(w)n(an)n(ted)h(to)f(implemen)n(t)i(w)n(e)f(w)n(en)n(t)f(in)n
(to)150 3162 y(the)33 b(y)n(o)r(cto)f(\014les)g(and)g(found)h(no)r
(op-iosc)n(hed.c.)50 b(Using)33 b(no)r(op-iosc)n(hed.c)e(w)n(e)h
(created)g(a)g(sstf-iosc)n(hed.c.)50 b(Using)150 3262
y(no)r(op-iosc)n(hed)31 b(w)n(ere)h(familiarized)g(ourselv)n(es)e(with)
j(ho)n(w)f(an)h(elev)-5 b(ator)31 b(sc)n(heduler)h(w)n(as)g(written)g
(inside)h(of)g(the)150 3361 y(k)n(ernel.)39 b(W)-7 b(e)29
b(could)g(see)f(all)h(of)g(the)g(functions)g(that)g(w)n(ould)f(need)h
(to)f(b)r(e)i(mo)r(di\014ed.)40 b(F)-7 b(rom)29 b(there)f(w)n(e)g(lo)r
(ok)n(ed)g(at)150 3461 y(eac)n(h)j(function)i(individually)f(and)f
(assessed)g(the)h(c)n(hanges)f(that)h(w)n(ould)f(need)h(to)g(b)r(e)g
(made)g(to)g(eac)n(h)f(to)h(mak)n(e)150 3560 y(the)c(sc)n(heduler)f
(prop)r(er.)150 3693 y
SDict begin H.S end
 150 3693 a 150 3693 a
SDict begin 12 H.A end
 150 3693
a 150 3693 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.3) cvn H.B /DEST pdfmark end
 150 3693 a 100 x Fe(2.3)112 b(Ho)m(w)43
b(did)h(y)m(ou)f(ensure)h(y)m(our)f(solution)h(w)m(as)f(correct?)66
b(T)-9 b(esting)43 b(details,)j(for)405 3909 y(instance.)150
4062 y Fc(W)-7 b(e)27 b(ensured)f(our)g(solution)h(w)n(as)e(correct)h
(b)n(y)g(utilizing)h(kprin)n(t)g(and)f(dmessage.)36 b(Whenev)n(er)26
b(an)g(io)h(pro)r(cess)e(w)n(as)150 4162 y(a)34 b(read)f(w)n(e)g(w)n
(ould)h(also)f(prin)n(t)h(the)g(con)n(ten)n(t)f(to)h(the)h(terminal.)55
b(This)34 b(allo)n(w)n(ed)f(us)h(to)g(get)f(an)h(idea)g(of)g(where)150
4262 y(the)28 b(sc)n(heduler)f(w)n(as)g(in)h(the)h(list)f(and)g(let)g
(us)g(v)n(erify)f(that)h(it)g(w)n(as)f(acting)h(as)f(it)h(should)g(b)r
(e.)38 b(W)-7 b(e)28 b(v)n(erify)g(that)g(it's)150 4361
y(acting)i(as)h(it)g(should)g(b)n(y)f(seeieng)h(that)g(the)g(input)h
(is)f(getting)f(progressiv)n(ely)e(smaller)i(and)h(then)g(jumps)h(bac)n
(k)150 4461 y(to)27 b(a)h(large)e(n)n(um)n(b)r(er.)150
4593 y
SDict begin H.S end
 150 4593 a 150 4593 a
SDict begin 12 H.A end
 150 4593 a 150 4593 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.4) cvn H.B /DEST pdfmark end
 150
4593 a 100 x Fe(2.4)112 b(What)38 b(did)g(y)m(ou)f(learn?)150
4846 y Fc(W)-7 b(e)26 b(learned)e(ab)r(out)h(di\013eren)n(t)h(elev)-5
b(ator)24 b(functions)h(that)h(are)e(used)h(to)h(handle)f(io,)g(as)g(w)
n(ell)g(as)f(what)h(a)g(lot)g(of)h(the)150 4946 y(di\013eren)n(t)i(qem)
n(u)f(\015ags)g(do)g(in)h(relation)e(to)i(the)g(activ)-5
b(ating)27 b(of)h(the)g(OS.)p 0 TeXcolorgray 1929 5349
a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fa(3)135 b(History)150
188 y
SDict begin H.S end
 150 188 a 150 188 a
SDict begin 12 H.A end
 150 188 a 150 188 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 188
a 93 x Fe(3.1)112 b(Git)37 b(V)-9 b(ersion)38 b(Con)m(trol)f(Log)p
150 366 3271 4 v 148 466 4 100 v 200 436 a Fc(Commit)p
2610 466 V 2167 w(Message)p 3418 466 V 150 469 3271 4
v 148 768 4 299 v 200 539 a(commit)97 b(a64c8cf3faf3a2d401c3389)o(15)o
(d0bf20)o(49)o(06)o(64)o(867)90 b(\(HEAD,)200 638 y(master\))54
b(Author:)90 b(b)r(o)n(w)n(enjos)53 b(<b)r(o)n(w)n
(enjos@oregonstate.edu>)e(Date:)200 738 y(Mon)27 b(Oct)h(24)e(15:49:10)
f(2016)h(-0700)p 2610 768 V 2662 539 a(sstf)h(c)n(hanges)g(10/24)p
3418 768 V 150 771 3271 4 v 148 1170 4 399 v 200 841
a(commit)87 b(dc4d711475e92d7481)o(ce2b)r(c8b)r(c4)o(d4dc96)o(5b0)o(59)
o(40)80 b(Merge:)200 941 y(d924130)31 b(f28ea8a)h(Author:)50
b(Mendezc1)33 b(<mendezc@oregonstate.edu>)200 1040 y(Date:)k(Mon)27
b(Oct)h(24)e(13:36:08)f(2016)h(-0700)p 2610 1170 V 2662
841 a(Merge)236 b(branc)n(h)2662 941 y('master')349 b(of)2662
1040 y(h)n(ttps://gith)n(ub.com/b)r(o)n(w)n(enjos/cs444-)2662
1140 y(020)p 3418 1170 V 150 1173 3271 4 v 148 1472 4
299 v 200 1243 a(commit)82 b(d924130862db)r(d358a3bb15)o(6ea)o(76)o(32)
o(fcf0c26)o(b)r(ce8)76 b(Author:)200 1342 y(Mendezc1)18
b(<mendezc@oregonstate.edu>)f(Date:)33 b(Mon)19 b(Oct)g(24)f(13:36:04)
200 1442 y(2016)26 b(-0700)p 2610 1472 V 2662 1243 a(attempting)i(patc)
n(h)p 3418 1472 V 150 1475 3271 4 v 148 1874 4 399 v
200 1545 a(commit)87 b(f28ea8a473ea0b)r(ec0c156)o(de09)o(2cb)r(da9)o
(6fada)o(9f33)80 b(\(origin/-)200 1645 y(master,)40 b(origin/HEAD\))e
(Merge:)57 b(713d43c)36 b(d839fdc)h(Author:)59 b(Chris)200
1744 y(Mendez)36 b(<mendezc@oregonstate.edu>)d(Date:)53
b(Sun)37 b(Oct)e(23)g(20:53:36)200 1844 y(2016)26 b(-0700)p
2610 1874 V 2662 1545 a(Merge)236 b(branc)n(h)2662 1645
y('master')349 b(of)2662 1744 y(h)n(ttps://gith)n(ub.com/b)r(o)n(w)n
(enjos/cs444-)2662 1844 y(020)p 3418 1874 V 150 1877
3271 4 v 148 2176 4 299 v 200 1947 a(commit)98 b(713d43ca62592180)o(a2)
o(35)o(6cfcc9)o(85e)o(5f5e0)o(a4)o(14)o(d9)92 b(Author:)200
2046 y(Chris)49 b(Mendez)i(<mendezc@oregonstate.edu>)d(Date:)82
b(Sun)50 b(Oct)g(23)200 2146 y(20:53:29)25 b(2016)g(-0700)p
2610 2176 V 2662 1947 a(Adding)j(tex)f(\014le)p 3418
2176 V 150 2179 3271 4 v 148 2578 4 399 v 200 2249 a(commit)109
b(d839fdc6c6952ef7c0b)r(c53180)o(b0dfef7c4)o(89)o(25)o(97)102
b(Author:)200 2349 y(Mendezc1)26 b(<mendezc@oregonstate.edu>)f(Date:)37
b(Sat)27 b(Oct)g(22)f(11:58:31)200 2448 y(2016)g(-0700)p
2610 2578 V 2662 2249 a(attempting)57 b(to)f(im-)2662
2349 y(pro)n(v)n(e)29 b(iosc)n(hed)g(to)i(b)r(e)2662
2448 y(more)39 b(clo)r(ok)h(instead)2662 2548 y(of)27
b(no)r(op)p 3418 2578 V 150 2581 3271 4 v 148 2880 4
299 v 200 2651 a(commit)106 b(f369035454f15b7e6c84e)o(4bfee60)o(e99)o
(e6da)o(46)o(98)o(7)100 b(Author:)200 2750 y(Mendezc1)26
b(<mendezc@oregonstate.edu>)f(Date:)37 b(Sat)27 b(Oct)g(22)f(10:25:24)
200 2850 y(2016)g(-0700)p 2610 2880 V 2662 2651 a(sstf-iosc)n(hed.c)19
b(added)p 3418 2880 V 150 2883 3271 4 v 0 TeXcolorgray
1929 5349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fe(3.2)112 b(W)-9 b(ork)37
b(Log)p 150 168 2898 4 v 148 267 4 100 v 200 237 a Fc(Date)p
957 267 V 634 w(Time)p 1765 267 V 619 w(What)p 3046 267
V 150 271 2898 4 v 148 1167 4 897 v 200 340 a(10/22/2016)p
957 1167 V 388 w(10am-1pm)p 1765 1167 V 428 w(Started)85
b(assignmen)n(t,)98 b(familiar-)1816 440 y(ized)58 b(ourselv)n(es)e
(with)j(the)f(no)r(op-)1816 540 y(iosc)n(hed.c)69 b(\014le)h(as)f(w)n
(ell)h(as)f(the)1816 639 y(LOOK)47 b(and)g(CLOOK)f(functions.)1816
739 y(A)n(ttempted)65 b(to)e(load)g(the)h(qem)n(u)1816
838 y(without)22 b(virtio)f(and)g(ev)n(en)n(tually)f(got)1816
938 y(it)46 b(w)n(orking.)86 b(Ran)45 b(in)n(to)f(an)h(issue)1816
1038 y(with)29 b(y)n(o)r(cto)e(running)h(with)g(our)g(up-)1816
1137 y(dates.)p 3046 1167 V 150 1171 2898 4 v 148 2266
4 1096 v 200 1240 a(10/23/2016)p 957 2266 V 388 w(12am-10pm)p
1765 2266 V 386 w(Got)97 b(questions)e(answ)n(ered)g(b)n(y)1816
1340 y(Kevin,)68 b(w)n(e)60 b(w)n(ere)f(on)h(the)g(righ)n(t)1816
1440 y(path)54 b(ho)n(w)n(ev)n(er)d(for)i(some)f(reason)1816
1539 y(the)27 b(y)n(o)r(cto)f(w)n(as)g(con)n(tin)n(uing)g(to)g(load)
1816 1639 y(the)37 b(generic)f(v)n(ersion)f(and)i(not)f(our)1816
1738 y(v)n(ersion.)50 b(As)32 b(so)r(on)g(as)f(w)n(e)h(get)g(that)1816
1838 y(\014gured)24 b(out)h(w)n(e)f(can)g(w)n(ork)f(on)h(mak-)1816
1938 y(ing)43 b(sure)e(our)h(implemen)n(tation)h(of)1816
2037 y(sstf-iosc)n(hed)35 b(is)g(w)n(orking)e(prop)r(erly)-7
b(.)1816 2137 y(Began)34 b(w)n(orking)e(on)i(write)g(up)h(and)1816
2237 y(setting)28 b(the)g(latex)f(\014le)h(up.)p 3046
2266 V 150 2270 2898 4 v 148 3067 4 798 v 200 2339 a(10/24/2016)p
957 3067 V 388 w(3pm-4pm)p 1765 3067 V 466 w(Met)47 b(in)f(the)g
(library)f(to)h(sort)f(out)1816 2439 y(our)d(bugs.)79
b(W)-7 b(e)43 b(managed)e(to)h(get)1816 2539 y(the)f(qem)n(u)f(to)g
(use)g(our)f(v)n(ersion)g(of)1816 2638 y(the)57 b(y)n(o)r(cto)e(but)i
(w)n(ere)e(met)i(with)1816 2738 y(crashes.)35 b(W)-7
b(e)25 b(determined)f(that)h(the)1816 2838 y(crashes)35
b(w)n(ere)g(lik)n(ely)g(the)i(result)f(of)1816 2937 y(our)21
b(iosc)n(hed)f(and)i(w)n(en)n(t)f(to)g(w)n(ork)f(\014x-)1816
3037 y(ing)28 b(the)g(implemen)n(tation.)p 3046 3067
V 150 3070 2898 4 v 0 TeXcolorgray 1929 5349 a(3)p 0
TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
