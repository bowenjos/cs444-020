%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: Assignment3.dvi
%%CreationDate: Mon Nov 14 15:29:21 2016
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMCSC10 CMBX12 CMR12 CMR10 CMTI12 CMR7
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Assignment3.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.11.14:1529
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4DE3E3F6222F
7A252B780C86447859579C68CB718E5D2DF0E1ED92376BC59DF277D9AB60B5A8
3AB2E7A835A8B2EC558D2D96D8E35692C26F860B13161906754C83AD44C7EA0A
22CF295CAEE46A0374E9F38E0D22A48802ED75DFD7CD2D8A4F7956076057CDF9
0CB90724944BF28D977211693BC13BB8DA7639A7D6CB1E56A91677FBB27876EE
9177D5F9BE6EB44CAA6584686306B4FF4E3C5273F2E6E83A354A8982FBC485B2
1EBA602DCCAB73D83141CB78E89FFD743ACD5969A0F940C1552AFCE6E31E8531
21C849D9D666C3CD407895B24ADAFD6746C096C0457BF07183D510CA3646C110
1D68B66D1E8708E869F226D00D39B858F6212047F35AB6A2DA36D1B6F663E272
48BD97E9D2807ADEE358FAD801DB994350171602AC8C1324581C7DB07B0AB40F
2F50E77B1227C6A2BBFF5C4B32CAF37DC23EA8B8E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 81 /Q put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
326BC603CD28B9A6E511975D39BF5957AC2D66DFB93989913E88B4CD7B6E9829
4E768247CE0FB59108082CF84BC4CB173B255A3F93489229227F3D4DBBBF2381
F1EE9CD1BCFE1D9E8CE40524EC8055F66429560AFD4DEA853EB731B57773182A
90822DF5F3F6CB5D9A068156450E510BA83D20C46C1C0893349A63801721A89D
B303C047A92E7F41ABBCD15BAB6E7789EAF54BC58F274B5968FD2FEAD28F7E36
F5C1BA873CDCAA1001BA07020B218D764B3B64C814D89824E41C6E6B720FC4F9
194C39CF3CD79E77514754DBB852C6EB8723F604B06999E8E090A72613722208
0AA0A2E0A143533B39B152806EC54A08C4F92B1AAFE03B8DD1DBD63908CB00B2
00860A257D22575590248BBB320FFFC0ABB8490BB86A64D44BA435DDF4B50D5E
38579DF7980B424C20496760B3DF0FDF3080711416524D9FCA856F1BB23A1ADE
867D50B5657E7B297B7ECD826D97C47218471DF2828CBD2FA38321E735625125
01EAF627539E77B27036A4B9BF8E6CF0EF1CA6E53DAC0BA865E9DB038CB873B0
81EFF0133B36764D9A0FEF0D3FFB7D689EB4C371707CC80B1E84561F5B70130E
F266792158AB9C1766B1D692E0921505EA658D6CF91E565FED2E0E52442DB374
E5D3548DEC2AB24D08793C86B69D50A0A99499CF47BFE502BE8F5E4FA7C777F1
E713F6FCDA920BDF908DA885FEA7DB82522BB37D0D9B81D9340269829100C458
41BCD77035BEB3024B813E40FC6D6DF2E475097987709EE2E812C17E582778DB
BBA05343DBFDFE0BC3CE1823592F3620DD2D2B64F921A2066116374D4D488C6A
9051D5F6145F5404AAB488E70457CF205325E0AD66C5439DC9862902C442BA71
055F331CC605ACB15A66A66C8CB64668BBE32D82120A136DEE497500C6829C5B
79A152149B69EFA98D8CDAEBBA05BB7EF05DCF674865399726FA84AAA733E0A3
820393ABA30531C0C09E17C437C80CC08F119780F653CBA37FACB1314C24A486
BC8DF40E1221DF3CE1F3C5908D5B418A8118B43A7B6638DCA47B13FDA1D9C6CB
A4BFB0FC2B1640CB66A8A0BF1D34C654FD6D9121ED26E4233190F43AAC6A2F2E
9A16FF346D88D63708E4571E1B4974A954C4EE98C878B3184792E72CCB54E4AB
10DDCA089E012D5580D9725E3CFBE12E1A06DAF09223897511CA5C2C1E3179AB
F0F2CF69AF674F26CBA893DEC266355B2F45DEAE10DBB5649CE5DB0A3FA5C348
E69260DFC4BDE6C1112311A877F4ECF4CC58F53A51AAD83718026F86C58BFB91
C1B8DACE149C06D70E4DD0FED968E7709A4E747374DFBC4EB2B080F8A623B1B0
379CEAA3981F8BD034B833FB5F0090EA509DF801ED4CBD98FB8134EECC7D2C14
A0C154FABD6AA9DCC38EB554D3CE3D75D6ED1AC07DB5E2251B30C3913A3C43E6
DEC900649F514E74960C826D93C4A255C7976EE6D664628FBC9EE136BC0B79B3
E7FFD353942E1BBFF5BDAA1228E289F3430852D6DA4AF7E0ADC8908B4C6575E8
CBB00D180AE4807DD13B7B74A5A935F32A9177A19BEE8F68A3DC779F9A38708D
8E664CC3D483C48438DFF691902AAC68330CD6F5A3A84BDD20224F7E8AA6929D
137E7F8F16EC23B4E022233D07D5B2C05B82478D5DB5ECCA153862023F0B71AC
3C8B509A6488438D56A2DDD5571A3898481F64418D592CDCBF359FE138638EEE
6FB67047C87401787D80704471E6C25ADEF7EA06F47252CAB632829D3FD3FAB9
70475B86B7C166B1EC892AC426CD5219525CFA4FD232FF3EBE95C0D8B1907E1F
F193353E253613F1B0ACE837B7F02292A35617DCEC193356A770DF39FCBEC967
C0EFEDBFDB8F0D54716408EE96E5EB123071944AB23AB9F3357C2CB6B12D4208
60F5F873C37BF2E7337A00F92D2517050AA2EC2A1A8F8A4504F5BCBD79D0E0FB
60E9B39A93152BCC45D61731E4BAA17920D735513209F09FFF9C1651FD598A62
BE1F98A756E58B65EC33414C64C95247754F606727AECC891B2A6CE7CD21E3DA
EEB3406A2F098738CDDD75BE27F91FF92A9D351271F2C98BC73F02A0F6FFDA4F
555ED269A4D5FC131B61D636C370320B5701EC3D0F308C9C3491D3643981AD05
9463B6782031156EB5CDEA991F8BD329FA69172ECCFE1B28CF33B4EFBADFAC2D
1B4520AD43F828793A60DE15FC8B40208FA671C8BD0AF5601474AAFBFBC14215
4584F22A4DD8B7D70A33F689F23C5C7F00A1B10BCACE90D839CACA685209C44D
21E6DCA859D741594454AE7A5BDBF53D829711AFDA9E67747740A5079C576862
B91D2A0CB51DC45D8A0E3C1EDC47F2A709638062B665CA0A583FC74B1F51A758
5A5EB6CEF0D3AAA851F8E244567F1152A0A3E261D83F00F186029E5D69BB225A
A56512FF9D53358068B80CE9EE865EC39D26059104B18260D0B7A984B94B0564
4BF82ECDD8C19C96F24B5A2689A6411ECC18F0A7F79B77EBEFF1BE3A2AB9891E
DEB79AD7B8C803B104FFC8CD6FF6A56DE29A63DA98D54904259A4BD85EF870E4
00E7B1DFB78BD4DFDB895DCAEE9EC3F35094CA2133DB32400EB8B21FA21BFF59
BE1B13722E8DE2C3CDCB608A418AF08E825D1DE405B4024685FC5F890D4397B1
E473B17B334EF29ACE09BF6095DECDF85F76B3DC2739B3861AF2BA715BB97799
038882BB5167EFF53594AF9FFC94F82D3A2CC8DBFF040499EF37465B16DFF670
3D74A6842B2DB9FB715EAFAA46F6E119F397CBF82B7CE76F0BC9BFD2EE86ED55
2D96827923044008B62C891B61AA1544CDE00BA974614BEBF2D8FC9CD5B12167
E6F2D3DB0F555E972F4B2E11F4A9B8187862EC251D15F1001A10C25D199A3340
9496EEB33D5FC7554A5FE75093E6EE4262FB1CC381FE2CC2C7D6549D2E6481BD
B7151BF8766AC12798DDA24E881B626588B8B3201BBF4E03A87474DBB8E4E02D
AF09F58CD111066EF07825EB5316E58E7E4EE1E1CA888FF571699697595BE5D2
E17B7C43685ADE67DE3DAC9A51D445DFC0F64CD62A44D14E2374EBCA681B8ED6
5E3DD551472A836A8A15AA1FE6011D91BD4A2FD304FA981A9E9D15C1B6DD469B
803A06E8A074A7235595D888CC4AF067D6547079A54235F50DB1EB5F35372E2D
3AEB931F6CC1C6FBE4441ED9D70D0CBEF6656F42832EBE942421ABFF31C81958
083522D8517753432F6D274B95F47FDD21E52C6C30F95C62BD59D642613FF4D3
B86312741F464AA951C4464CF7BBED56289C14AE21D124318FEFD9DE7AB38536
30CA096C0E1B5FCDD8293F2A8677F9F65AD55B89C989CE095FCD1364F342041B
7195ED605D3C194253D6C43B866D1F4709E70BDD96FCB8F1C05B234FE98A0281
C0477CB6DF00970ADC77E0ED2573C8F65E632C8006610B308E769290A82B35DE
6E731F6D4907CF34F4301FBFA40A498F67971EC12042186D6FA2050B66F7871B
49CEC23103A11EA0A679595D3A8FE69E20A79DEEC1BC7A7FAC1AEEF239806BBF
01B199117C46513789F0E127BD4336733BE854B98928E9B55BE514DF32FBB5E7
8AD1757EFF01800DAB41A5D66B1CD32F76DEA7789CA4B40C4D69AF03CA4CDFF2
C4A2AD85C458FF435D24DF6BF0678E43CC33F2B3A2B2F5144EB0160EEAE6FAB2
A17B51D2D06C04633B0A79E2D7982F91E719485F0C4B3EBFC4339CD1A97E2588
4562E31241C5F8D17DDD27D15D01062EF4A831B048ED96394090A3BEB3A61DD7
83E9F661BAA7935F2780EFF9C11CDD37E8B550F8FE4D9053496F17B9A4CB74BB
B14120C9C2E35ABE3CFA264917403AEBF7F9112DABFBD441640C040076638C44
4B433A0C973E9824EB2E4D9284F0EDA516F884B123301BE3BB2EB6E399732418
AC822A8B247DFFB65E4E2755E738F59B668D8733AE053DDA9D004AC0B896C438
A0C5BFE8254459AC456D7847231096714F141418863327E2E6AFE3D5EA34CEC8
3C4E8FED909C45C5366B52F27A7F0F75EC2F7BB872AEA34D16837A1C3D9A7FA3
2F758BDBBF674DA3602D0CA141832FCCB6AFE038777A4581FBA8489C902EF17D
782ACA078AE3AABF18AB99C73FD6D5CB1BBB74BAC4457E02B46BFE1FF66EE608
2AF3B517136234F2B4C35B2A3001D98EAE4CE5E5497050A2088887E8483A1D26
FC1AB4763C11C6A64274AF693972DDDFC4FFDCC0B7DD5B26D0A09BD6ABF87595
12561B6410B83D1B22C024F5F17A089C35337DD8C4EC377B03795577E57AF7A2
5A1F56385CDE54FFE5D97FA1B6C14A460D0B9C9E157BE582C16D62429FA578E2
F27D529F72E53FD6E861B9033E7315797768304B41B7D4B5040F622313558C27
0E59E0D2E273A7560AAFC565BCAC76E6425BC56D87D563B50EFC678AA224FADD
3DAE8EE581C38FD45AD73EC59F0AAD2ED75BBCA250F8249672623B2A4D3B4FF2
C6848C4F689852049DE74C47D42573F93F03B5E41623EF48D70AB7872AD6F4EE
C32978AC8B397DDDD5C7F8756AF8BC352168F4F9321FB2D541C2B715E6E75A54
CED2976EBC21F0D37FA7B66B12CE081A358C76D1C1C48A3406F4F7F2F5C2D94C
60EF826AF8B78C4750BB144ED9ED52013D17A9B524F67194B25C1926B7B4BD64
214FF246518F3BCCA794E5A0B49F35FE9AF72C41E340EBA557BC84782B10A475
E2B0587816551FD97ECB2AE4FF992B0FAD78A1BEA6CBB9E7229B76DAE452644B
5C44DD1563A292A37CE03344364EAC63811160B8DA7B9E6AF592B64A236A9611
65228BE4475FAFB7968F3CC8128A76DAD6CCBD10B115B4C8BFE5003ED7B25BCC
7B6F9C821CC0805326F76451558CBA21DADCC12DEB61220685AF3055292F5C48
D7030A5CDDB4BCF34D3455179205B57D065EBC121EFE779AC6E9CE00464D8F6B
46CAD49389A83F16FC9A8B119DF36C8FEC2E3F08531356577D44D2ED01022BAD
ABEF1AFC8BE4FAC159381A380D3A21B9E0A5AAD3CC400DCCE8745019488FDFF7
F598B384C0C99FC3E5B7C3EA2F48B45DC7B20DEC720683E9B64B0EA9818575F5
77294C123D7D49AFBF649A111694B8DB8E793F961C0B6C090D12B6D35A0E2C9C
C23F4C0C93669B2A016A3EAB37CEFB5410E73BAFAB537D6DC79387518BEE6482
481EF6A6E9DAAB607DAE89EA05C9EB3AE703EF2F9CA0C94B7B18717339C37D51
74BDC98A43E0C766C37812479C570EC9287D0369E52C907CE9A5D124E58705AA
E02FC2BD2981B646E09250EE018C9CEDFC8F5A815D33AEA6C0AFB6E821F5E6CC
4B552A76332341091E6B53FC5F95DCF5822AA01A725278E2D139348634545CC8
BC96875424E23635B697C60F36F93AD99848837316A8BCCB83A65B1FA8201427
283D461D18E3AD798DA1CF3169895442FE4EEE37FC0EE290D1F4B104E1FB8F0D
925F5F9EB0F7369F57674A234921E7D45933BB6FD2C1B4871243E8FD22F4C3D9
5ED6095B25324B5AF86674370B22F8BDD20BCC690E8C136DC33823BEF7BADCC7
735A08DE1B5AE0C59A0F2C5F976AD5D4758DD625747854E69093F5F8D3B3C632
DDE77C8A2EA48964967435304982D0BA7265820D74C94172A2621073D02F308D
77B9316ABCEAD8661C25A6D8CEBBB22A1CC97DB02E5646FB7A6E7D6FAFBDA208
1CAF3A079AB733F9696657FD7FD14D1B6CF2C585B982D53DC460ACFD93BD0150
FC2DD3096837A0E2D14D44858AE6580B61EC1532824974DD0FF87720E052D7AF
C4B3A6266DB70F1F00078B31B2F788DCD7CD95EE8550991EC9B0D453351550F3
2F1E95131178A0CA7AB59508A23284F3AEA49FB2826B56311595F03E6F00D914
83307933F7550C669879CF0CB7818565154C82D1A4993229097D9ED29AE3DB72
A075BFD8C06CC75994882E88E0C396F5BBCD23FB968D7BFCDF502804C37CACAB
C38E0DED1AE4F985FAC00B956AF6C63CA6762147B72B2B3D882BC5F300587DBB
34FA2C1EB5177E5883E74FC985766679BDDBD5E72E46829448A7814A602A1CA3
5DBF7DF7212DD21965444FDB9DE824D87B6FFAA57CD5D55E671A6BA47DCB3749
E19BA05BB13A0B6F7A8065D5D2FF89DAC66A8BF4FFE0C6475DDA4864466394DA
22D1C3117C0F2554CA3E0F7CD7A92E1336D01F7A76B84751F2319B979F74FC48
7A7B70E6A22010A69819838A39B3BF05E197DFF2E1968B29CA5DA0BCAE625E23
180D9BA0D880627B7681A0658DEC5A805FDD93680F1D32E1F5FF96CA5D8E6CC7
610EC383E2E0FD7806DF2F6BD70B873DA6E06B40A5E5FBD63CD3631DA9D8D9A4
41707D52E82A5F3632FA92B4CA1E015F28C4A5D110AD87A80E5E3586963A6013
D9BB8F7BBB013C9A560C386E21F2FADB4551E0CB0557113929B7A69A121BAFCF
DFF7D11C5F05215A900E5C9473404518BB2C9EA399978774F80736DB8A9FEEE3
9DB9589C19A0861D80E1A1074D6B711DA7AC25F50848365D47F607A5DF297A5D
C4626E3B632B34AA129A9D163F7D2B10B0E466241E319C8673B63A3BF3363923
D6E3A641F2126B1B521C2291441A6686DB4F3570EEA376178C179000D92547B9
002947B2F424AB8961B33E11D8E7EA48EA1D72BB86036F15C42E1F9EBC81D8E4
8E180EB7B5B92B17ECDB29BAFF7CE222256ABF45587D27BA4326B1368B90A0DA
CBF3E27FCBFD530A47275F8D655A8EF1A1C32BCA188C226E9BC243728286238C
30F2F4CC59563E0122DD1089DE869B34F1FBF84946B74673D50D29B9D8823AA0
0871A59E3A9089EC36C0719993A631F51DA3C71418859168002AF2F277936DF4
74CE4B8DE94FCA99517DE16D119E32E80C38F7E26C4F97FF64EB9EB6C1515692
5FF9BA7BE77DF43A1DDB50861F0F92793A6C76F29909C92D591268CF4D808552
9E980F9777F1C05D87CA15EC8536F7BBBD521739D18CB00FDC2FC9D8F3C911E0
B9EA10A1D508BAAB6B078A1E62291D5377043CD8BCCBE6D39870266B69DF9E8C
B2867BF13D09E342D90FBB1E43AB72992B9F5D30F5DFB3C64D00874DAF54A401
1D3BE69F7B428AA34108BDD47EA26E16BB2C68890FF02C979E73B7A93742C514
7FFC36DCA28081B4E2A8920E33A3FF94DEB7675B8AC4CBDC195E6C151457A9D3
6432E49E0CBBAD89078910967B8E1BD0D12FDF7261E5656E173B4CA18A39404E
7814F90BBFFAEC6B66C4CCDE1744145BDC0E4391BC0CEC55958C27643820861F
ED40431AAB1D2F8E653C4F35011FDA4A9E8850DC0CBEE71352792CDDB8AC67B2
B40723B64BF7A9A347A191E890759DCFBFDC9579AA1047C848ACECD9875F504D
335D30E9E82F45F9F8D3F3F8B956119A8E9BBBE76FC9E37E798C79B0805BDFFF
B359C1815E8AA070E0312C36E9A4EA3A5E8D8E31ECB1B1B11CA3D2405EC487A8
1533F39E3AC9C470B33F09C8465F0154D382690B822939B755997C39A9AC5B3B
335660026B6C3EF182625A8C8D4BF473165A1BE705CF19B30527EE664F1DB566
594BE7F24453FFF868163AC372DE0ABAC8B5A03A11653610D186629A1D3B7464
D475145470555AE607B1BFED0E4927D5A67E4517FE3722B45EB1FD00C2E37AD7
AE30C49CAF6CB7C97D70E1B13855DEFB25DA5EEBED626CB20A7799FDDC6E31BB
109CC4547D0958C11A278CCFCA9A19CA0E7E4E30D0D6127871D2046A6EECC750
E0E08CAD7E9C845CF1C3CF31BF8781473D009B938C128D0967287D531903CE22
647F502542F2AB5844AD02EEED810AF441955D1C508381B8C7A3D5A11AAB2DD1
933BC5E0A3828A2499DA9356982514FE2B600988ED820B1E0CA893924D8E4A7D
D81E628E93C845209E6BAF79C0286A966B12E5BF4CA93A0A5913495DFAA74558
DEAF95B068318B0695EB0FC2EB19675AC8ABB17B6D9688876A19112CB95122D5
B875B0E4B08EF5ADAEAE7A76D3600464AE859B1B58604957296DD68021217AF4
DF62EC628EF80C50AA9BD7840E4F45FFC328A85843431CD97924CBD18099F1AC
7232E26B11861CA17C4DDDF97426C0B6EAA082BF6C34CF78E3467ABF73872850
D930288E15F6044B85372E39FF5B170CFA898580DEDA25E3C8F0087E510C9EFA
5E1889190D7E86C8B78116EB8AA184114CDED632F0AAD49A7B5FC5FB1E8964D6
FC34A894EC93C4C0966DCB7A815AF0F846D0634A94DDB48769A53F481AC5761C
3BEF9C5BAFF3CED36B12BB93A3EC4EB8146A4CF06542ED433C4F05C6FAFB5C69
707BC5EAFEB286F7DF17E8DA9EE9D99FE005DA35A67BAF1ABEBD29D2DF123AC6
52C26AAFDCD46C61846A1D24DED2759ACFEFFCF0B4E52A0BEFE3DB52B2909986
2042A42E580A4045BEBB39C6F1F8B189D4AE1113DBAB0D0824D32409C331C7DB
070F0B2891F199D8FEB00E8EB5EB5B8DBFBFA705DEA786ACD05BBB7F0B8053CA
F798B331C70CB4E519EA32E4F10C8EB50C998FD71823ADB642A5F84B5D10357A
CF08CDE65647EA964C583E62FBD1F57669309CD21B5DAFA361BE96EF090B8F81
204B8318B9C5FEE7AA7ABB7CCD7F3E5D730B309C8FE59C39D2FC7D6A552BC62B
0D38FBEB6CCEF37FE0302CA3C8CDA15AB79A464BAA05EDA29AABE9B47FBA322C
264EEDB08AB1307006A8423E448C0B630D4F2B898BB8978162543703A3ED6F6F
EB29AFFF1F3644AE1AFDCDB19A6C55C5B6C73E90A17B97BF9AA78A493667A06A
32B6D446C2593B11F3D733C39824F831D984F5EC0D90DB7C3764700608B263C6
E534424F345682CE86EB4FC5F6ACE694ADBD476D36A26550BA4C037169655B6F
507A243A4F8BAA6F180C11ACDBA29F2A35B58F169272517D2EA9F3A2A53D5742
1E0E98A912F715E268DE26D52F73036FAC62D9DBDAF519837FEDAD1426095CE2
B494AC5DB84CB2F54B9596389B9EC02EA81C95A5EAAE9D5C5F6994304A0FCF41
9F5E034B98DE04DE6F0F155314A8237B40C42BB11FB916E0E30D3D46ED513740
5607A8B7B4523FE8BE3E8BF8C30213FC72BBEBBC3B565E96CE789E0FDFFC7E59
0EF83CBFEAE1626FEFB420C65672D551E0D54C2C9271C12844560C2278DEFADE
7CF6E60F296DB519E77A2735DB3B3022B3184B99494A32FA9C085E47325D42D1
D913D1C41A0AD5CC6F1E249D2E3A86FF3C8C9455C8CDF1F40D0C698AA0842BE3
01F39246EECF61FB522546F3FDC71BB08E8329DE37028A5D7CA3651A9F4949B3
B48C45019DC9A0AAFEF53A8AD415CDD687B65FB408EFC0F961235D96E6A5871F
AB32B3F2D0B9B21258EF2D5ADA91E5735C0D977DB9EB2C3796C162951FB8F436
AADDE48E3D2C814F02D68B51C1E592D16BC65FBE4401BA601B14CB6621A84551
6453CBD49A3DCF8C1AAF85561B31EC8BFF1032B8BDB29F697C87959E2B523B36
394826DFD91A6858AE7C2F7974FA0A498C6D0648ADA0AEEC151191D892085E6C
5BE3C566AD3336EE71A200712B45CF8B124D1EBB0E970CAA5A52BC7ABCC77D25
08B17AFB6B66E3A1BFC8EE586A32E779140B76C901C60A39BCCF8775D9BEC59A
C5DA4E84D34BA53F6ADFD004504FEB2577A02D0564CE4AC3C476F53003CA1BF5
06C3D0EDE07B5D8CA702FC39536DD7C023DD46F6A200B74A2D81A950C3437FED
A34424022FBD1E2D70F3B6231EC33C1E50E1EE2374CEA3C3406496F163D007D0
9B67ACE16F535C41087F64C4EC397A16F0AAFB097DA242000470FA4451FC1992
0FA84A8AAF0672668ECE9BA63DF67349251948B7626ABD23C355B7B68CD7F651
AC571AA14F235DAEB8B8D8D2BBB28E1F8BACFAFCE42B72C7D5999F0F312177F4
E32D5FF5225C4B9348
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 74 /J put
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
dup 122 /z put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
650616505E0FCD67CF5E89EDE5BF4076A2B61157BA3026222D87F25ABD7EEE6B
C063552F1E1DA55C6D0BE4CCA40B2166279BE26A494057184362EA5B25010B92
BD2B75AA25231695E03B804D1857C4DC377DD996A282AEDF8E58F906EB641B17
9BC5F8E8C853FECEA001C2EB6CF903C38A1ABA094BFFFD3DF4B07DA07CD877CD
81F5BCBE6D27F6BBA8F037E0D1A98F70AC1B2AD9BCC01FB61726E24A491ECCAF
88EE09BBD7CA442FD5B009ED5C6FB44AC315EE52F0DC915E5C16B65A57C4D901
B306AE75EB1CBD214F6DA15279353883B8E3DCDDD0657E9179FD2E27BC1CE545
7331B7DC09BE87F776AFBEC83D0DDCA760851AF5D54E00E4B01F2089C78AEDEA
3AD3DBCCEDE1824586C73ECCFC7EBCDE8B0D7CE99DEDC7ACDC88DE7DE274D5F4
679F6E56BA0A6144D7699E76FE0F3B6F7AA2BA31AA7BB5A18B3E2367CF44F883
1D1694A9E27F62A1A0860945A281C8082D9569160AA04522FBD6D0A632C79165
48C710B52CC247CE38B041B5D271233BDB60460A01EFCE87B4D417E8CC0D74CE
7C0FEEDB81C146A3E2F7F66CB8A08FE0BBF2D785C6E998EC2D68ECEF8D8F7158
A8F9536F33C4F39B0D6318C13CC53C0202ADF7925849BD821C5248562D5B0024
32C259353C93155F023F461AD322B4448CDF9522419450E2988D1C37F1A08C47
5C990A19601DE2786D657D5B0395D5CB1C7CDBD1C394EFD5553AA05D74FAD0BB
41AA1B7E43EF7F8F821B6F6F2DB14B1CEA1537749FF851553115D4CB551F4E43
24AF65AB584855A40BB4187449242B30FE9B07B10B06BBE106A8166A2278A7DC
FC0D2EF1EEC090718BFF892CA7156A23FC511AAF79CA37FD0F25F1A76134E35D
B4998ACB3B6915258372AD1D715202A5F45B127048B86E37C8F3275C80FB75FF
5355DEBC31183A1A22228ECF6BCABE61FCE6FA0FD74A89544825F7E919A6C371
6872B4BFBCD7C3D302CD4DE77DB74163440ECFD29C4296D3FC22931B3DC80610
AE29A3EA1F2D4073D60720A20AF90CE5521D776CA821A25704D64F4D6B09B7CA
59E8E7A1D9316EF92ACA4CA2FCDF8B15A9BD1E4B2DDC2763AB8CE529599DD861
085530F73028B71FF0A7FEB1AC9DD3BC11653AB78D2DD22E0AF45AAC54B26C44
8E5C7743F45FFCDCECC88946A3F4B2CC47802A2D6810D9B9EAA2E58482902D25
9CBDFD8F9E174061EAD82512ED20AB94E5B2DD6FDF518A708931A5DD1F5BBE40
48BE3E7207E109419E83FE224F90668C540C4C187D81BA58A8721746664B0B01
36AB0ACD6EC925D7656DBB093849CFF735BCDF50DD4FC7FF423B0438CC92F17D
274167308DCDDEDD9A983A3CCF65F280C3AF08E58927B8A4CEF029A8BC49C58C
A69A488BCC5B11B7DC0D7BB495AA034C6099F230C411C29B2F116D60317D6F85
31A174626CFFB84B0FB86BBFDF5E7558207B41198F8B79BEA4CD9681675BB910
32986E2172A2BDC2B84C631F4E1D12934FF9780F12760EF76C6E67DC17AC5B2B
9083F80772317F5243DABB35E9664CFDA559630ADAC2EEC5C8E9B14D73822EA6
746B23EF1335D34DFA1A8D62F0F54778589F68CF3D4140BF3818FE34B4BBCDCF
04D379342BD9773586A2C60739E3E7D667EC60EDD7F5236B0AF71C5B95975B3E
9F1820BB23D823E67A676017EDFCBE1A512D291D912B11292F29960446AEA663
D8EEFAD0806C69C8C63A1742EE2CEFFAB013D5BAF02057AE3A6418A470362AC9
D24D36E015F57FC9FDFBB977A3D975AD24B8D3C84CA4C2A6A57FE28CFAEA7B18
9B03B47A18947D6D8A3413D6EE85D9C150410BB6F2725D9B862AB2DAE4B9EED8
EC4F0F59A475B10CA7F0F52D37418CE9F2E6F0262B2005985D8348F9441ED719
912AC1A5E9EAC60B96F3F4698B1C3CDCF4A5DE15A757914893132B7D626A2B56
AEFED59D0D5792870751C4507BDE1C30A0CAAA6CE352DFF0BFFA1D72CD173117
F9BF1E6BD84A15796C18541A0D65FF7B825A6B1D7B183A78D224F6FBFB77C5EA
EB5B9F1B994C672E6EE516489101D898057680EB4CC62462FF0E92EF0E489656
18EFCEE4CB55418A4457EF6B37FAFFB9BAF699E631227306BE9BF56CCE4500B5
10C9DCC4F2E1DF974C1114359BE3136A6BD252D6DC4AB059878412526A4A1584
55AE7D6CFB31D19BF2FE9B680EAC56A395C59B872EF9C964E7427DA359D1B5F3
3E39D087BF4D215C03B7FFBB8A3692624966410AEB8AE3CC186E4D9F8C256E3C
1B885D72F2937C4D4FF2CF3FEFB8864413A4179C3C1262F0870495A1E00E9D47
AE7CB3422C7CFDD926957E589294E06BE4A6925ABD757C0A3FDC75915F61C223
066C23CB594F0D0DE40E793EA191AD6B6AEB7325D6264ACEC083D1B70560929D
8BA33631DB63D1B82E271A2A3EE175223F24F3D335A200A3AC7483971506761C
4939953416399722FF9BCE80059A58D867E442ABBDC3F1D9AF2F6ADB41A63301
C66B82BE4181C236AC31DC0A47A5FD61F9B43CFF76968D65BE4CC774413D31F1
BB0A2DDE8D22C2BA3A9E8241492E154B7A7905327F7F23020318DE5F98474465
C77614941C2C8677CCB3E7DFCA16BE4925E31BE4B57EFBC5C96C430B0ED3481B
64B7AFCD030A4B598BE6AF970FB9ABB787B75F7B2CC59D245449BAD5887FE643
3CCA61A9A0C09EA4437B4337AE9AE54D9616AE3075B9842EADB73EFA9DDE4CCC
228F5992957C9ABF9AE9B87499DDB01B7FA23C4E197C5812C057B411B23E2EE3
DCF3728E0391C76BF320A29884B8DB4D744868F2144F851430E43A884725472F
2D3BD6F28DF64A9776E817CCDB7EA74481C9752E2A2D58276E472F5E74083314
E70987BEA407ACD25E210BF26D80876075431B72D1D46753A3FD11C36784FD98
196C2596433A7964F27EF1C41CF7BBFEC129AAE1BD24E0156D5AFC744B56B7D5
D89D58D3C135EB50A559B5D788C761B6A55DF8B1F6B757FC1BE72F796063A1DB
ABF5AC744BCA4A4ED58807718C9D88AD28E078FB39AC2344A2E0959339BA7E5F
550F8354FA57A4A15E052F15C13B694F1FB3AEA29B0C13CC9D71DA60337C1B24
9EE3E7A615D555BEE44629F04FF90F2547C5ECBDC04D83495FF03FA0FB107FCC
9E56AC8A53DA2B284AABF573DA680593281033081541B7B16B2AED12F109AA90
46443C2A48E2CA26231C5F5696FF9172E55D21D9A99D5BE52016C0A64FCD65B8
BD06AB74BED3C546D8C22D59290FFE14CD280E78A0C7750D23003A196B024AFA
504E004247BD05773A1F0B9CE7977E237C4AFE1F613324AE10CDBB06E6F329BA
9A3A33B4F7F24AE8E6019B58E303143BE1EECA3CAA878E7F0D0D4DD90865801D
4AEA5BCB708A01EDDFC4C9749A0B06E3ED1F131F9AF6622A7D1D5998BAE82793
D7D15DDAE032579B4506374E4DCD2388F2648B9F17ED0115F225FFBD744D20C1
CC0EC537D7FBC4ED110188C271D75F442F2AD22FFBB1CE3CF72C85940C27E5CE
C0F369F6FF7CC02F060987808C2F55C93EBA15F405158A47010F8144966BD19A
AC88E515A506FA5E889B293D6320DE713CC711EC2977B4DE9860BE39B04C7B10
EC2A65FD152061D535A1F977D9CE07491A7CEE1046B5A586989118BFD7157DDE
8182860741D82083F86021A62A60EF9B4370B2763BD5C429430453AD622BBE40
BF0725D218FA4AB2C6880467082B50AECF22DF6B5F3F4D3F74C535E057EC0874
871BE604BC4341BD4F2C28E48742C3099DE8941DB0AA59CC4C198A9BF371CB78
BD25851EDBFC9DB04AE4D4EE2FAB597A4B3D742378B77ED2F8B812D315D4F8A1
8A2FE69FE6124536BF01C180ED59DA00524818BE42B89DE91F79705CA45D67E2
B5FD708F99F79051769FB242D7DC75CEE399B4602428099C32AA2D89E32D747D
75DF602BE229600E7E9FFB5DD706F180710E5F8717EF1E6887242C8C923E8FD8
9B0176F5070888C52270CC09D2DC954567CC82FDAE0638923D6A196DC6685F9B
6158A3F87B252D413187EBD366CF23E66642D95E7482B872A1F7F4C97A63DE6A
8E291AACFFB2528FDC522A68D6D2D7A0B91AFABFCC562DBC52D598613E20ABD1
8B7E1BC9D350DEDD5C2C9761828D0D113EA917C2DD86E186ED17910E8A0833F5
3A9FBBDCD29B30D213F2F1DDD75783DF44F9E09E48981D3378AE2E4E79EAA16C
8228077462CCAEDF5E5E911044FC644268D260491358F833E3F498E867119273
DDBA1C2B1358D3EC34CBD55BEF987D73955D02090E97905CBE60CAA581DE2710
C266BE4E5F6F340DC62732822E6847CD863D917115B173817A11EC430EB39BC3
787AC2A419B62AB244FF0D8BAE81C58FF94F71F66FABEB6175F85FE1BA78EE3D
A857F6F211DF6CE588E0B513F9C1C8074F5B6EA04B6C1E37B60CAD0901EFEEC9
80856C60D9E611FC67A302B86C3BD033D15B4D6CDD4F657021EBB800A07303F8
262AF97F9D538AD948705EBA14A9195E63DD0CCEB2D5E91977C450C49F4AD38D
1346417D1B1DE37A5147F8EF822F55A1803400583D9970C2A7908344CC958231
67CEDBFE850D67B24038720A4622E6A373F30DA31E58A542863A9A25E586BCFE
A8B07BCD42DDA0599D1F3B70F8B32FBA87487BBA6DBE4B5230F2535C1007A417
B7784D7FB75D2AD8A5F0274853F6CCB348EB63293F5F0C716FC7E5992F748E35
5255C3AF2712CA17532EF32005BFC13E8E61A60F463474F3B2050C00C2E51807
B34817C5CF1B58EFAC36F3F1EAAC05F25DDBBE662B48855D713F8E6FD8DA6384
EED714FF62E641A4632D5F07B6525204C8E9EB00A6BFBDBDE9F82A05FB047D7E
F0F7E0C6A6761EC9927B81E141F63DB4A794D56E41AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 62 /questiondown put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BA8B194E613047BF469C7B4261CACC1DF1648E8A86E926F8702B5ACA
6CEB4E3E85EF23EF5C9C53097F3BF17243B8D4BF0E6B0C5982FD14E4E916D363
E265322DF0823E9990F966A842ED69BADFAC2CD1754FC84C0FF6750D2373F997
362DDA16A0D73B178FB7B67307204AF174AB871C254B8E7CD77058113B702B2C
13F341A972B67756D65C6A9F553C365E20F0BA59F8537C88E0C13F87CEC69C9E
0775F760C4EE10819388782A2CC2E9C000DCBA76E4EFC7B390E50611F3D4F6A9
CE60FC3B742F046E84B4A302F5DB51092CD59F103DEE2910757696C3F131517C
416687E6DF671911BFEFE08D1C5D0B16F9302960E29760EE101C5BDFBA4176A0
260ED46500F88BD388506DA361B0E9FD796196E66B332C82CFFEB7974F9E4428
B82C64ACBDF865B4356C4E2C8E6ED840AD5579B7E08BFA3BD81AB1FAE47901EA
E298F60FFB651A0ADDD1C312033C9D1FD4D0FEE44FAC4B0288339260EA0072DD
0AA168900C492640EB652F4ACF14A4F84878F5EAE4169AF39131695A11CC691C
FCA75087938B15ED1B742607D839E542C965383D5E6718EA6C25512F1532D0D8
545EE6AF47BF5B6F6AD0D9E4429A2C2DB0A08F27ABCFCF35A8FE443907C13797
8759A7C6447E79C614480152107AE498E53B76AEA5549B61C5475A0EB482F403
62CEC29A918CCB798C30DA069C1E3F3150D278FF7E28A719E53D811618CFC182
B66AB0DE0164CA5165A71B5913619B632E5C132EF0798C46F3FB399D621E90E7
A0F10941DE0F2AC2D901074A7C80C77489B345CC06AFC0D5F5939E6991809271
C088D4C896D0CDA9F22BD7FBDBF0BFAD379D69AB612F12ADBAB51061CE1791E3
B18B7FA50FDB3B336EE09D6342DB8CDD7E19A25C92AEC05FC6CE231015DFD5EC
09EC261F0CAF96E4A2D413FD12A55E8EB16D0D1F5678EED879318794F1433AD1
E9DF12472CC1F207CAA1D795932EB50E74FE0C7563864CB0A919CA5A752E981E
3EACBCCA7793C481F27E445A2A42404EA144611BC1DE3A670F204D9C9D229FE0
3EAE3793BE7F237632F1BFEBEC6B43FECFD46BD463AD5C1991F7977C9EAA3B70
2C69BFD71341668F4A0BBFC11598FC47059C22AE48E07E1CFFFE4ADF6E1698A7
94E1E96AA5F1C7D8579E221ACD441D4F7B409EE9F25516E6D302D2847E77C952
BB964CEEB25FEAE68EE79FAB1ADD72AE418B0B56746649419BC319F9B160036C
E9F1382963F6A680E30AAD380266A9003FD01AEF70E88571AC7D8A5D07EC7500
4C2C2D5D8D7407D5A2BDD1484FFC5DD373D734657A17EB980B221F4A5093EA63
B5427AD6CFAE7B4B7E6C10C3BAA417971292A0A3B2867965A6A368F9B1795361
4354E1D423DDB7254249F9EB8BF50A3BD4E4E96B0932394692B6DACF01E8351A
0AAFF76E7145DB79C0255C80F2EB7F492BC58C366F903F717C1A9A37719070DB
1E340A4F760C3A897740E41B4287AF5E8E786725FA386C909ABDB49F63EE68BF
F32DF5977ED67263B15FFC1D64C36E1EBDB557ABB9EACDD7BE57652732D97127
31D2B1AF4BA063CE6B3339DA6049D97725D105724B993EC0E4F11817D7413CA2
2D5BBE296E7051FAAC01B0E7D23D5A052C9C40B96D3E1DC401925D2F39759CC4
32D387D60C55918F2CD55A66AED05ED0CD59629B66BFF0C000C3080868AFD6AD
9E3D9CD3419E465BA5BFD8677EE2143F2C678A2AC41124392B1A9C9C8EC02108
7573897B62A468C6CB3B74A37B34629E7A4F4B69024F0646AD39A5B5D0EAD9E3
D46E6A81BE18F9E283D8B29C8B0D92D540489D35EC51860A0AF6DE672DEEE4A4
338D24D15E81444B0ED246F0983C2B5E384CD9979B1ACC6727A39BB76FB1C8E8
B4EC7E3C000E7481C6A0610BD406D2F6906C8E4A49EEFBAD243FBA2FB2B0CB3E
925826E168D236B17443EAC1A7DCDD25DD70DA7A6DED43AA94EF008800FDBD32
8C626A761D80CB36119ABA43CC8F5AE1D2D71A04F7566DCC496E2F21D2D5C194
6E9BF32B9C4F07FBBA36FE64027E699B85BC0884729612A6F83CB094E490828B
21BEF9AEB94DC3CD8C73953278AD067C1F6636B3F1590FC3B48339D697B02188
1C5572963D2289487E5A490906E4B230413B6B0C528F4186712F8CAAA047FF83
F6A66F7CBC6799534FE6EEB24E68A098CD0A96C67195664CD7DCFEAD1A36B066
8E8D79963AF1847BCA56CBACF81E1B872571E211FDA17B26EF4A34566E2B4E8E
AF61CC3C898B90BD8719CCA8417C490570EFF39D8F74D08BB7E89B1D12058BD9
77ED89D4214B8BBF9BA547B25B7EDF80ECED4913C88C9E00380308E8548CD3B8
01833368A40C5682AFF9F89EFF841D180D8B4FBE3C249FEB32057E98D561619C
570E2D0016E377B0941FF7D80980E0B363461A197E05DC112A7EC0F0B412EE4D
0FFC44AF49EB42F0543516531A84D20CAE0CABA5D6187768CE27904D57F14354
AE385403AAC67A76688DAA89B8AB929143F17B42221F0EFCC4ED7C282AA01196
EF37D7FDD0FB8575AC0CD55632300584ED7D6BA280F95FF6DAB6DC7149B713C3
B2C5A160CF8934D5CDB07CEF6189A843421BFEE60A5BD8613B5CB88CB47667F1
350616DF3D9AC1079C0B3A891B1DF95238A2931CF82E93B3C2DEFFEFCF8C55E3
FB3E6A046F1097EAB80CEA440FCFBA6D5C00A0C8C8AAB62C740E56CB97816A3F
323C59D57D33C0F55B3791A0C1A08E36739A7A5566DC1F0A063FEC1E20697802
E81EB7CC7121FADBC79C4FFEFF4F241BBC8E0979A03948EFCC05D6BCCE0D2F08
36DD8FF166547CEC1C0BB0A092EE96C1AEC8DC539AFEF791F09746B6C74549D5
3C48897794FB724FB6CC02A4AECAF2C2D8C5A6FE1E37B7557FC87E5D4E38A85D
03F3E8D6E63C51C49131FA594C7DB0373B75F9184259AA3455D92423B14AA030
7FC92B6B1DB8C5199224A5835D0645FD49DD903351EDBDF7EA8D98C371F591A3
132EB9E06B5D42B05340B912E2BCFA4E560AB43153FAABA49F5825AA468A1404
1C12A46C85F3997B515C340500EA2442D66A85B8401FD335F408D6AB498D8F95
1CDB829C30B5EFA11C9C70A3B1D8D02ADAF1D61732DF89E8BCE846D641A6B135
BE578079CC17F71D0A5B661222EB930FA85870C4B04F564A352AD6B35D328998
A40AEE64012CCD6887190490F105434ACF39F047D66E3F55EBDA135484799654
CE6725BAE13CA3A0B85EC07750F706D31C17395839318143B2927ABEBD2A3651
B658385855D425FB9B835DB9BDFD2C6E5E88E07C9D92FFA9AF3A3A6703675C69
D67E72E3641D4777CD1B92A145111808A6EBF00705B6B620173D09D6EE77C4A2
8C830DBC2471DC183B75BFF5A61A45D922A87A127341A23F2E7EBBD58D7D2337
0AA2AA186AA3C35E99219F754B14C6DDA266458A9BEA0202D05D08D9A98D87D5
04D397971A595CF0A5D16D7866560A5D07F0E7DAAF4C41C8750A4AA785E27389
4A3F321753B6495F59918E32DFC22213B269328C73F1E4C9E8507F79AD8B4D15
E6CA3D5A18862D306E6EC7CEC26C03CEA73E36696E399DA3E135DEDF05218488
9D7B793EFEB2819DD0548B9B2B9FF3519C888DB9957AA27F0C70524EA935DB39
F894AB4790B015533211F1A5ABEEDEEC942B429A2D251CA6FB2B4D9F395EDB76
F395ECB90ACC30C96F8658FB6B597319F3AF3420D9276CD8455103B9ECCD0375
680487E2953F0ECE909BB0BBD00396E25CBA1C2A9C68B7EBEDF036C744B90AAA
6B9CAFAAB81D3897121C52F191B7248C80C58E12CF564748E8827A07C7D0257E
BA217A190A96414EFD01D56405936EC13BD68120CB8DB607048BF7DB517BEE0E
1A190F360FF3AFE1FE4455A8D91CCD8204688861F731259DEE24C1E2328F1130
536CD46FF2E9C6B0BF4F19F3E88402D036E8F1CC43FF23C1B833E5E844617ED3
26352CA9739453E0CA428036DF34FC79B9176FA7CD3B3DB70DF18091F5C7A09D
6CB3E642CD0AA249F09EAC4CC10274AE138FED62AF954291853AE651F21D73E1
E8A6B5A3F5AB698A69F96B602F3A6F0ABF252669F89A13515F6FB9C62C69344B
8DD5AE4FD65B64E41AC83E246BF661FF9D5378DB5F906C9517807ED47703883E
5F47CEDF1188A885C81430713BFDB77EB0968C996D0DFFC03D120B039078E3C7
F133EC44F6E4FF0AE035B72BC3C80CB92247ABB411145E1DABE582E1F993751B
31F7D4B73DD34C34698F7070B37FA616831CA8E221CA9D535DF2673058C63EBA
A4825B6B22D7BC637C7B3A2EC106654BE19370DBD9CAFC5F8102FC4E09574B66
51AF92A886FD8E072D91FB4E72764E24C7617D7CB0070FF3D8E6DADA892F3216
317EBE1CB3D9D26E72076DE011B5759A27C4E06E3AAF563B385A48E34D7CC894
2722EF622B68B7700AC0598643D0EBE0EB4431ED3DDF27F9EDC828768BA7E94A
331B42481B94C940F826C88052E7A2120B2B830DD50F82430B2A08EB3B78FE9E
2BEDA29853B4E7A1701364EAAF0B2BA63E7E925368CDF51951002AA9C4C8258C
744826C7105CE522AF3F6222170512674EB5BBA63715ABA2A3DCF74D32AD4622
17D61A3E4387F61609E145706AA4534F7F6AA6BC7704288E3C6B2084B1FB1871
88075C6EFB1CC573FB1E22A28A25D9E14F091B66902BB201A3D9ECA3D2736A8D
249F5BAC149020EAAA76FE47FF64756B0C29AAA29FCAD950037C664A5344420C
854DC8DDBD08DA363CD9EE01150D7672B19E24CA5B3209B571A8327C6E6DE5D9
92A71A0E0EA6776DBE3D172E40556495D1286EBEB85A54EB0A2D0FD567223ED6
35CB9112DE4459833AC67361B61AB687E829A98912E88591AC15492D23E9ADB5
40F5C10894D565EC3419340379E855563E0E553378A11DE7E103CC2F692729F6
5B65C8AF9F3DEF0FA3951E9E104D0050571343852B1FCCA5D37B1B1A4B8713BA
A90B8DD7E972A3F81C193070F004D564F811EFAA435339F848FE1F5FBB71DAA5
48AEB63EF1C8C3A65D109C2423255239FA9B48B6CB927113698A02C4E1911F87
40F9A2161D875BE14B54B80AE1AF9A15CFB024FBC4C8361C9EABFFB317847373
743CA551A55D96F2D24AF1736F3EA143EF43E14790B182A94DEA287B1CFD5020
1DB83542A9D0FBA6B22333A2E4FAF04C7EFDC15BF9ED1F2137BFA8D3658ACBC3
2E36848E2538E397ACE13C1EAB5D044497C8BAA3246B591022046E149431D8F0
094D671D1228CB52C57796EFFBC8C4CC8BF9359151865C4242D8EBA14C7B33F3
10E83DDB052D6665968FDB068F3A63EC45FEC43DD6E108115B11476DD85E46BB
547A901C39FFA4196546811A18F7A1CB0707810EAB8EB2D3E9FB4BDF4C2E4E73
EF21801BA586A248952C228985FDF685FB43E7EDF54C66410A4AB09903B0533C
C0DC6B94545E7509152CBF6326A991AA2AD20C0D5DA66375E6669323DD91094D
90DAEB549D7B41A11BBB02D554B498D94F3A7BAA64423E342691A20DCD42EAD1
A01C44D269E31CC2BAD3B16BBDEA42EB6C08AA570B6C1366936A6BFFA982896F
AD0EA98F592D29932B7573A907EA1DEA81934A56B735B9A4C66D23E04FCDFF1D
0FB04F8EDCE7F903F0B07FF8F0FA1B39A12DF3B04F174EB3D45354903B1F56F5
F856FF6287329FD747A0F0FF1348C4924B2F92D4CA08F68A198025F9B80DC8E3
DAE82319DA796A4571197C676787F1C3CCB20853F695A132674E7A1A720FFE98
B69149274C2419155A3A07346EF041536D485B7723F03BD67E0B037117920335
106E0818EBC37998444CA5560B99FAE173408D5E916B7044C7F3D8E567B9AB32
2E91E0849F6A36A6EA5D849A22340C3CA4EA428A119CB1286620C26E4F25CF52
A71CBE0ECF5BFB77345CFE8FE52F3C81D79BA30E4C071CBBE481F7BC215611E1
C3AE1749F7A22E83DE48229973C21F471728DD31C185E45974C2A539DE4E634B
6FDA742E81048823ABE9D2A6EC5906A72F8356A1C7E8CF3E00236A4D7D36E6F1
AC81814EBF616956DBC2DA5A90898D060C51D58E3F670854D9F6007CF719EB99
391DFEA0CE394EC77F618399A6E444EAC79AA7BA06187AF423C1F350CA845332
D318978BA4AED7F7F13C13162F78429051A0050F2250C42E4184F82CB6ADC8C3
2E28349C6368EAF54A90F81F2FCFED602AEB789C9EDBD6B795CE73CB9A021153
BE2B82786C608DF641FC0FF220B81814AC33DA0E896641F88E789119525616C2
A4A47B66E081B140BB7510B6C0BB89562DBA340D7D71FC5136E4BF1C2735DA8A
428C4AC394F09AFBA8ABF264471ACC91C144887F9535E4865FDA6682E7F694BC
3DCF41CED755E3F58D091CF8DFB1BA26EAEB3CDC1F30FDBC05EC3E3E78F7AC88
A83F8432E749426F8C7F0F8DF2B9160CF674DF3C86A2D91716F3045E3775B9B4
A53026BE7DBD7B0BDB46F744FF1FC7510779847FADB7328BDD15B5F8DAB075DA
796808FBB8583794F95F5CCA2A5E96D0B4AB1AB1A32E3AF24DD6691FED4BA749
593DEF4DC4283E5B1B294427EBA5ABCFD18ED78D649E70AAFA07F5D54C838BD9
28BCB8AB6C208A75AE368DD948BE343755B778A0DA48DBF60C2259CEC7B1CA24
50CA18EA021F1CD11873F4230BB9B7C5F39A404D1A94D825FF665C78525BF598
83B3DC3D9D2A4BF4B8DD369492E9FB33018879F2E35C79CC62D4407120E5B982
70726E5EF335413AF2E7BBEFCB9EEF2605756C533643DA76CB9D9B8D06B32388
4193E18CF607D795211C4FF3109991E7D760902FDE5218E163988836F8FB47C2
7DDAC64D3EB8765EFADE909975F5C098469D0944C91A48F10702EC659364F04C
504E11F3F108684C7CB204FD13B86D16B980DEDD9E32CBEC9EE76537CFADAFE8
EB29B6C95AAF989764D2C1A3ACF0BBE631B4953E73C954B9029668DE3F14BA47
8F0BE5D22AC890476FCD1DA42738BF5E948BC954172F21031CDCA59E7F5D878D
3E0AAAEE5D2D914504A02FBBBBA5A90471C5122E62639C6557CEDF394AB6E9A8
2E326D448D09C14E2161AEDE9229BB23A5F7E2EC67B629504A41BDFD42270B95
B6E3F68F18AB020801220C4975CA79C09A0E39B6C5642935570A8E956A562907
8AA73100A353ECA9C1E86834A6CDDC74F677CEC867B7EE9C6DBFB5713FB97230
F31AD8ABCF4C5FF4A60816D74523DB13F229821720CD8E011AF26122C26390D9
8C562141682EA941D380EEDF8A0CBD0684CCAF9965B1D725EF5EECED32493106
F1DAED4FA8381A2C9A42DE819FE47BDB764993F1EDDC417FC568C48999591AA7
5A7AB73AE87F47CE43682C3BBFF66F4BC9C813D946B8074039AA701D2F6D7B08
52674A2F297AF73FF90B30B128CF3BB3C885060BDA154766DABA674265D47B35
233A52ADC678F7873C5B33C7A65E85C63D330C7C42205EA9B9C5920538217853
6AFB122CE3F800A8ACB87900CD870AE760CE06C7E4E4821FC1D3328F7B2A2F4B
B52DC8CBAB2BC1088C2B2934C254118E2F26F52E9F8D9342443926AA6467EB87
156EF1B68ABA697DC44DBC6AE992243382DB2A2EF12B4F4503A15992922CA39C
3993E9921665B11B3243DF1CEBD13EB01BABE4250B354CE3DCB69C6FB2B86872
B1ADE2DA3AB481B33C9AF0794611E0F367B21B0C4A6F3EBB3ACD27929B1C0724
B14EC28F7DC0319B3FA8DB9AD26D80600E3EFB40B982484F4BF4D871B7B949CD
6B98704EE36B9F61E21F6EF62DE9621B44C6FC39125803ED03BA5F19619E06F7
C844DE9E27E5534831EB86CF7C36E20074996CB38F8D0A433D640E78A89F5BCA
672E14EE97F275721310A0553ABB2238E8EFD130DDDB86C50808A325D3DFBBD3
4EF99A945EC639BA59010C60A31CDD1795E036B39670978C5E9998535B2AF435
604AF1CE499CCBF3ACA22D67C363FD56874D262D9CFC61CE7765FA8A9B62BB1A
A7C53B4C0433C6C830057ADCCDC025DAFCE8BDB1D7B1E6A72979E58940025EA9
61C4E6593F8C09D7745FFC6E9A853C98E4965B09DD4D7369D9D4E4626F822332
F471FF0243F6622296C7C87243A86B25F51AF23EE850D5FF825827FE0ADAB09C
027F7B4126182E1360F1A6D5497164FC1679A766937EBDD67CE9139B3B1C72C8
D0881DF9496F445B42F14E0C5B5DB66E02C36E53B52306C0B4F55D9151AE7C63
B86E3CB5D591F5AE5ECF8CAF8E4351EAA382397459DB2EFF991FA279A644A347
FFFEB535C059F2E5CC6BE91C96F4443BE1AF346291AC24FBE8FA43232E4002BA
66955704B3CC39FA75FB5ECE58C004754C02EE60D1EA5C288FFEBD80061A55EC
936508FC96E86C79BBE5AB1AB4C14D8F26721052E4E7C0094D05FE9B7B1AAF0B
C77F39E3FD4E7F935269F22AD8D6995F51D6C3B36029F34A0155F57ABD5CB8DC
73EEBD59A01B625489CB62BE3B6717D49554F23ED039C2FB1B07E1D56DEB52CB
E8C8E53F51DA2984AC6800E4947AEB03006A42405967416C20D14D13866C53DD
67555DE0D373DF98D8F2CBADD09D7DB3E26398C3D2FA4EBED461A5BC60238329
DE102E57FA34F096FDFE25BB2E02322CAC8640459CFCAA0F226E6A023F21A779
7EDF0BE78634E924F9607152E27AA00C71328B25EF2FF030478079D74800A0A1
11E24F50A4609357BE1AFF62D3151730F1B9D583D0E7C6766E4B701C6333DB7F
E0C5B2232019268660269152F5243C4E64E62AB0D921B64235B0038C32DA155C
A2697716A60DA2892279D8EF1013B4AE1E4A50E9202A221B65EEF1407F083ECA
8647B3EF7A2A954DB8EBEC55EC0DA741170FB918DCC14AEB8E9F4FD4AD617029
5EFD3BF99588766DE8940964C1BB1162F0AA1F9C64980494A8136731EF77065F
507D0D90965B878BA4D0D6643006AF37D376ED8307D0B44B7B4504A63952EEC5
3F5E635CEDE9916DCB853797DBFF147345C1673586E84D17BC91C6CCC1EEBD8C
7BC54E5965F6ED41F553CA7E0A461EAD1D76AC832551BC46F85B8F98C9836DEE
EFAA15D671838A9263216DDFD72775843189EE3C9928BDD3CFF343FE3BACDAAF
9741E54AEDF9B4AB4D61BD226A5BC0AC45EAE250325DF6A0B9352FE375C0C3DB
6057EA993D00D2B7C70C83F9B2E87B1D6298907CAF579368B850E422FD6BEB3C
3352EBA1FCAEECC0F3C9C971C0962E4D29761EDB28900219F28DE7D1A9C0CFAA
29EE8EA631E88984BFB8C9471CC4962F92D9AC2F8BA6360B92EA70FA7762FB61
ED38C723DA84CB8801E92F1A0828FEE111DA12443EC918046ED0A50D569106F2
BA559CE32E325F6E8984C32BE295BBD75DC9F8648C84BA543C56577E1BFAC09D
A56591482A863C90335AFAB17F9AE57117379F0B04990142F262AA2B641CE559
052F64BE27B608ECDE8AC0700759AA391BF9A96C3ECF01E05B8DB29E84F446E3
C9480FB5DAFB0543C90204D27662AF40FC851EFD6E731F7D86D3B95FBF3B61DE
1704B5068FC8509D43AC8C8C6E288D3F2E823D53ADDF6BE69A2A91585DAC3F94
B4DB8C8A35D50D29F1DAE4E68BA48A08556D79533F45E087C62E07674874E9FC
EA28422DECE3A94C846D45D8F25BFEE354C103C869F3433069D5D670C2FCC198
B617A2FF9CA62243F4A563CA74353EB67A1A9405FB144442F0B6ADDB178BC100
F5CB096296EE33ACA0A41CD6AC8141610F857BDAAC9061A49DEAFE33CEBB7113
2EF47C30C6EFFDF89EB0FC7723EDE4B564BE766E8C5B6FF8A390A876F52192B0
33EFCD318C51A724B5B3AD2D1C2DAE27D317A399C30B4AD8A22E87B7F1BBB788
017C3D078740BDF2611FBB0B9A1068F2390131A3CE3564D2C9C60C9BCF63875A
9FC9C3488412147B79D2F9648A467E7B19647AE6223D166CAC0CC8D8162D3ED2
991EBE5EC532858B95E876C592DAD038095D90686381782574A3C3E069647947
330B542D359027388DF03C6506382653CCD208A6352B07EF4E26B4389E443EAC
8E15F5880904EB9B83AEAE6E915E87AE3905A8AD42D624AE7D3EA9847D5F120D
CD2E18A2D59B61C87DB72DCAE2720F0E7E72566DC3A3B2FC3C866C8224DF3B7F
5B155C09A2F9E4CC8752AD59C74082B7154C58BCCD74D997E42353644398B3C1
608CBA8B227046047DD4175EFF72196B347FA63EDE94A70EFB3D0AE28D721D40
264DAEC04B867AB818A7DEC5F83083BDA129C9C6DB894520FDBF1B50493B5660
C4147EC23386AF59375E0C68DD1C605068D3C3F527D4445872BA657B89BA7E81
B0386DF9B480AFFA8868CB9D4B16E0ACD388423D21E0C0D88524FBF3B4A82E81
3D35175A15D85C79DC8431543B7D69364226ECB24FCA30A9DB5665C2DBE7666E
7CF0CBA18AE75968E6D409E1F09633938ACFC91D8D3BD6FD25650F09E3BAD2C8
536ACBD1F0233340C0295EECBC6BBE786E16523119D0C8278F03CD9EBCFDB98F
4BDCF398C99CA82C4181A5CC2BB0A88AC654AE657B691B6BAF398A8A6CA427E5
3CE60FF67F9B086F09B3F03AE4D9B1118049E73BC4D6B6910101C963595C2BD8
C3201E34E475D694440BACB3BD3D1356BEA83D8EA176388782091CCB098BA19A
96A001F309BCE2E61D83E92DB1F01CFDF4CCAF3483BF42F9EC6EB03C7A4F461C
4EB4C8C258E08292BEC58C3816EBDF1802E389FDAEBF837104FF0B4FEF7FA971
E54D0D2B7567B0362DEB8F44497ABA756D7328D3ED74E722E869883A752CB7F1
EA9A4D6495F8419ED69EFDF1A44EBBD56B93A1EFF9E51286686E568B4DA50235
C37F8327150E5280997A29947293B8D1B19EEFB941FEAF02813641E766789AA6
A7D0AF515BE974275EF14CD9C57295305A5F9E876A8022239309F073C00A1E89
F65A08FBEA3BD907C5C0214C70DF6AB538F630DAA9981E03FAD19013CF9777C6
DFC97483D5E6703AAE399F32EEE4D9A2BB5707FA1D959AB7C724E2D1EE0B4780
07BAACF5802BDD6BD5FCB767ACE67B3F238409B246F2AC1EC046DEB28C8F09AB
9B2F4ACD7386E9008F695229CECB0767A6DABC6512FE2838BD998D838C07D070
431FC77427E6C22F43E226BADBE3C858CCFF0FF43C6AAC18D5E9C94F3A9F60F4
A124C7F071AEC904614D15887D3CEA61BFE4F97F3ADB8644A777B13B95AB65E8
EA5944F18E23BA997D2E82C2B53340162C56A8912C0C5541E9A82E93D47BACF2
D54C678DDB359CCD0879F1599610BC6B67B4473BFEBC419B9E1484FDC5DDC3A9
E74CEF21A90CCC948255F18732BE925946F7625E3F44965F6B8A08AFACA8BDE7
2ABBCAF1476DAA1008BC5FA0FDF295CF03E7A6892E18245F8B59E6B7DBDADE44
B15B8ED2E90209365C4C05B5C5923A6BD6A83E6C4CCC82561C6DD21533EF9866
21F54A444D42FF8B5657F72514932ABF3C5D81F1AB097F5F55527CA4DA00A42B
6899186CBA5DDF03F7460FB19465F3002B8F1B1D7F553F899EB36E263DAEA804
0EC6824640970B62ED51F935FECC28E65CB387E8A85C406F8558421C5BD410FC
170EAD2616BD56C1476F69AA09C99EA6D150873FD45827C2DB2189BD54DDC34D
020F0ABC7778E985C48C9733A54D04403E36693CFD4A4A30CEB1F5F13EE0281E
E4837A882E9AF1BD1178424CEE53F2A34F87AF77D5B3DB04DF3F0EDC63CB54DB
688CCCE050B685D97F811DB9F5AF8E9CE6F8301C1F4B460B442E12AD52F26C0D
02F2B46E1AE6F5CC7EE062EAE9AFBC027F64AEFDCA6F70F5580762FE1C82B7F1
961CE0470B90D0101B83A655C4EF94E495652D97F9FE8450A079D9D1E0664D28
8FBA6039E4018FF8B810C904DB0F718B71B52D4CD35F387FAE7C9835C2DDA6B0
6E4B7920F832755B5CDF136731E8056E4F75B4EA1D288A20DC32AA00E37F342B
CE410535F76128E23F15D4ED10D3DA9FA238A213EFFC7BA41FC5F68A4861E70F
EEDFE57BAD9162A8BA7A04B744DDBBF982DE287BF2DF963E30C13B5CB59FD0C9
2B4E52275C3ED41320C35A831A73B20ACFAE6F605F2F5B07EDF342877D2B4FD9
67330B0E162FD8A4C03A95C4760DF00CD4414894D4144D6AE3CA32824EB0B289
DAF179E8F96F7E98411BEA31C5914D75683C05023D1040ADA63B807DCA569085
E5448A4E85E8F6ABB8E7B5C746D708854921C822D293E2606165409C28F9ADA2
6876794D3CF90B08FDDEBD2042279A5C6585CC4C1D526FFBF5384239F13D32DC
2FD4FC38DEAF5D0B23DA99FF62F455249F0AAD5E05E5B27928DC2444979F391B
3D11F850628905C73200C115863663712C47AE4F741C069EDB6BE261787BF046
70D9349CB1925D6FB31025317DDFB99CAF14ACC39D474DE6BE5B34DD2CAE0CB3
5D01FC022D845CDFF41A0BCE59F35E30AD1A37129598BC8116710B4756880BF9
401B28F4A70C5CDF415C68F0DF60803D2329D0447AECDB508FF4CADC49F0338E
2BC508F5E833FE9860FDCD618FC53F346D33920DC30254CFDA7DD6E441CC6A2C
97DB71C33C675A1C41E7B6E0E3B9003737B4B7915D5EAD43C8C6B7DEC8A37B04
5DD33642CE88D48192C133020ACA3092B108D281A8CE418B01EA4137EC6BE8D4
C25803B7C7A1DB4C53A3E41DF6A8D22E5B38773251C671AB70DF738C1A65C4E4
D1F353DA8CEAB7F3E793960AD747709149531032257558DEF35049549D3E973B
86BC528A3674949568E00D8C02DB2D5673F69047BEE2064DA583B75E06463376
4F4CBC200F25EDF5443D201E3F0C05FCEC7D26A87D7B6FBCB60046290EF0247A
DE31759FF267947D195B5894503300EDDBC59D55B76AC43D2129682C31EE1E8D
BDE972AB468E39A30C9C65943F41050DB575EE255DEB1FB0F40E3061EE06293F
B048423466FFC0ED7DC96D69918C8862A5AE6A8D6F34EA6D12A97A3D3BB5E127
2BB7DF1FDE2D0E1B7133D3A1D5EC8A22FC4E61FDCA03CF4E1C927F741FE9E4D2
2C56B44453D79EC04BC764422D3FBE7243040910E7FA45A0EFB0D658CF7A8CCA
9013D95FF1B231DBCF31C56C0F92283DCF3226826EFE60F851381FF20C518524
0A0B39B738001D94BF6FFBB1EF927C261314288A492BD7F16633900EFF8DA004
6D8F097A0F8BBD0B5F048FB2B8040C487D05F0F2735FC7CEEBE2E7B3D92672E8
0FA8E76F97DD157C8E29CD5D26C984BBBD7371F40AA379FAA211E7760DBAAFEB
DCB1A0F768DE8FD7FCDA374CB49492E8512641D81903E9FC3FE60C133E1E673C
3139E8229682E6FD5ADF1F6D815FDC0E6E6AE6A6949F3E5ED3E99302175CF198
5AD84995470CD7B0C23486DA96848DF43CC82F250FAEB5EB81CEC439E7072934
0535542CB6F8F3D8865AE0D82E6AD4BB4F782F63E3E73DE668061E721B996F88
3F12F49571E675B26EC05C59F827BB52F0BBC702DAE6457F26A99A4D5AE5C548
430A1B4781D4C74C9783038279731D7DBF9425DE8D5713B80725D8D8A4798A6B
79994E3C29CCF4174C64BE86EE2C43854F5BB483A04B522DD380F4342CF784E3
EA81E66A1011C874331E968CCAFBBE9C01948967D1F1BA24491694F25A54B24A
54895D79969942D2B5D98409A3F47BABD0FB7DCAE8C1AC0DFC90959CB57C8FD1
42C7C82B27B55940E113EBEA265D1E65F006C8E8880D659097E228B29586ED71
27DA20B0B1F5ABD07A54ED9826D11E317BBE299965B27DA22FA5BCCFAD96A528
66F591BE23FDD2629F1122EE3C7CB7A0DCA13FD09232432107C3670245818392
6641243C359C5E5C009637FD00720B0EA02ECADC6094E26A901B877BD12D4CC4
A02611729C65E6D7485EDA0B0E1B927823DBE931E800E240C2CCC8FB6FEC0D5A
F86483A5607910E9A3FF502950B582082BC104B82243DE2CD1009922CDF25EED
F973364D61AA057042E17EE9734B878393A0A6D02C26B12F92F0C76AD12C6392
5A8B14EC6854D7E0EECFAA30D68773EF76807836920FF3158B76FEBEFCF61FB6
9C19AC0366719B6B0B7D8BFCD38C6E316B73ACA9F7D7A3454831A883BA0A2917
71C0C96BF82CAB0F8012044F3B42F849096C44F8B375B55A4DF5649AB2ECDAE5
C241B8970A68BBAC4F0B76D3A4062A4F8432C0492602040E1B1E0A4434288F39
32F1C0ADA9F300A0F0114A2E007ABAE3B27282B3F2D18FF5F0C16C3687F48C2C
51EA753DE3888B6D30D028D0EADBC38E08AE04FA993AA7978B1DC97440B8CD6C
B68BC7317D9BB6E7379490402EBA4FA499540ABE52E9702339B0D673388559D6
E1FDADEF2CAE32570934F7A13F2B4C5391E0EBF4EEA470235C0A2ECCAA5494A1
961B650873E31251B660E6A05A972B10034469B0AB017BFFF5877201B47416CB
19B91FDECB70B2F4CA514220FB0397CE4768F8C1D9DFDFEFC6AC674D3C4F5EEF
4B325DFD34270B3555BF289A35C8B752E3E465C9AC53F8E8B2868D12AB6E4087
610E14B470E82277A2F86EDF11EF497750887672F0CFBF5752691CA06ADA3BFB
680BB3F3E58AA38128430223B3B6A4ABAD8A19EBD709AA34A0F81723C4171BC1
679476E84C6353AB22831397D5D0BE1A85836BA66E3D0D0D41F1813C2DDC0D92
5CBACA9A9086F7B05DB756A18BF02900C18A2EB4CD9160323DB673FA202BED18
5522BFDDF7058BD6A33940A4749E42BDB515164E10B2075E9DA6A3ED127C03A0
9D061DE44899751575F045DAEF005A508528AC28BEA9C37AE6CEE881B52D1A81
1F53E15904732546AB867D1EE7A814F4B2576832552FCACD16C21C3EF69F2758
8B224DA2FD1F98D6DA4C801F738BB95F1A76DEB07F865EF14B316B8532B93B8B
EA73E21C7D36A7655D70166F832816D63267A791C2AECBCBB95C3B3BA5092347
ABE4C9E87BB9F070B106755F362334DEB98B2728F478830546E3FD46B99EF675
F8311369BBEF11D24B5B3DD45295D8A64BCCF74FB01B281442AA9B81E7171290
5F01CBBE64E570D54B2098AA305C8CCE6686EFEAA1011198AEEF3C8E03DF0427
DFB2CFED0FEF53965B0665E10D0127F73C34EF4ADC0C3298CC2878BCCD6B10EF
5E56BF4BDF0FD0CA3055D18CF39B8C817F57B5439B5C97F1763E7685E1D79636
50A2EB525BDBE364B517B774DA3CE1DBB6F91F316D2B02E98ADB9A0AFB33CAE2
8F05E8FA1095B33B256F6D970B576381FCBC38B9CA5AEBCDE128A456113D7C8D
50E75DC33B92E9584FBEF7BEBAAC3588AD2CA6C4BBF43E840FE4B279C12DE924
DDFF9A6AA510662CD046F8553009B4C2A7A7C04235D6CDF2B1FF98D96C68CA95
C98ADD7141321CF94179916645C486B54C126D99EA2778A4D1AA2CB7D01ACF64
8B0D7D194C2FEF08757FC51E7C3A2F89BCC7FD0B3E306571023F514EB441FB6A
F3D53F4992E01C404D067E38FD0AF944816A61F36F673B0949D92780BB289EC4
281A419BB7481A833E3158C1DC15B5938A7A0958A3D19BF3FE41B06B77B43681
2776E87BDE951A93319A03255F4429DAD3CBD72AA5C8EAEAA888B45974E26EE4
E21DDE210EE0EABDC705A58BB1009F0EA8400F0EA3B9B023B9A11C21A1BC2C36
32D71AC22A8EDB35B02DD0F8DE5FB7F529B327B8A5E03FC229B0DC673B87C292
B17FB3E1A36326E549DFD45D9C8833353251C3F0A11AC693869735C66A001BC9
300E68040AFA02F3E45E2461AECD44BD13B7E82F78AA1C6B58559FE41F0B70F0
022F90DCED21EB4B2C6F5E24D338D866D9153218FBD64B7B21F21C9ACFC92964
BD3DD23696E4C5BAEBE1ED68003CEAC3E0366E563B73D0F41B9E6FDD241BE054
9590ED845FD685D9FF37BFE3AB0BE53E6B83A71377B61C2960C517BFFD26A238
8BA8B8FA73301B4CF1DB4CACD1166A7146C587070A879508B544FDA921FD841B
534DA616BEBE3DBF56ED74502202FA6E62D28973E2E9C23289CE21990E37062A
9B4F99EDB1AD0A39C3FBCDFA972FC74F42EE96C70F0823D3158490A7DB5D8827
C240EEF55D24315E382A6C4BB5F00EBBD77563B1355458BF64EC9BEEB10D73E9
5663205AC67C4625D623C366577972A4A7CD4E5A878623E58719BA6D3A43C130
EB7FCF95A4793968CE99B106A964967EB13A36DB079D1263E05C48B6DA6EAE2D
908A0CB37692F06DC402EF3FBCD31D8EFE7EA00C4E1ED5779F4942BD0F7EED4E
B77CE207B0F127E214197C4BAF54DA02D7E4CB70AFA5B65108855A30B53729EA
20340324DF5175D4D9C67EA0C935B275DA4A628E8BCA1CB691B5EE89043A1ACD
9CE7B8278396D304B49194EBB77D981F8B6A8C77DB1091EE98E71BD2AA4824C0
C2608A252099ECE027680AC4BD7724D4BF67FAE60D20C5B6D85492DDE9482E74
F409E0097C2A5E7B015D4DC178795998AC11CDC2677F0E0B2D8500891D847692
2B1FB49F2F28399351FCE99B14D9AD764474D3B57037E6BB16DE18534A034BA1
61E86D77FD02AA3AC69F8BEC9A231ABCC0EA9461F2E74A6E52CFD8FE3CDF04C7
D37071A1A976E6325E4AD75A33DC9ABF15C3BEDE0450ABDC22BF421CE805B62A
AC9FEE6EBB3B0BCA4B7EFB74D730BC308A01153D49E8543FADD0E4F2505C81AE
7B6AA349E7D3DCAF5B5BBF688D42BC2AA2620CF0DDFAD39BEC26164BB287E538
AF70A16FB46E4C948031DCE53510E2B7A843DF3ACFC64921DB9B62EEF6F7094B
4EA5DA46AF81A15B0E8DB6BEE113CA5FDF20C72983662F70778B56122ED4BD3E
686F3211D935235CACF30727955DEF85245484B3BDB431402EBCAEC38D5F7FF5
2F1805210052AD6A7E5115426F5FE89D9B5A8491391B06C9E26F8FE970EC22F0
A7125369080142277ECCAEE58378837290270234B0F568C0E35E877482FBCC53
670C41BEC5733F9E52FE1A53358F4520FB085D2C6CF62A7180DCBDA6E3503FB2
5FF852B610C27A6D2745C459BAD72D271E9121EB6F5801224D481B430B78C36A
14C677F406DD695C6FE129A849058C5CC5994121B0366E72CB3EA4A1DCDB39FF
EAB08A7DCF3507B2BC207072A58E90A07573E4DB4F002A1B46BB65084D91C14C
86F3A02FA4A2EE1DA32A7184C18A761A2C89F09DAF5C466A1FE60C98965D11E5
6D4F3A3A7135A125079E40D58769BEA0425F5EF686128324874274B0B8E6C387
A2429FC53F45CA2FBBC78723BDD01E986F79A61AFD994CFF688AAB46A655AE09
B371C9EB770AF9BE87EA840768581B5ED4D370AEDCBBDA729550BFD335467882
040DFB1B87A2D538E1BBD58BB7691F564B20D73DFE33DC61C2197A9237F39FA3
103B242542061D55EDC1585C5853F63DF43C4B214E79D905266FF49A2229AC5C
8EED6F966A759FE544C59009CB3AFC5D9BF714054F668D09CC24F816E03F6195
A43D5508CB3D5CA1247D59B4A51E9E9D60726DD96A078A618645A81A1E79B249
8CFDF4D4D5215606334C2474B9D57B9AD7F698F7ACC6BD675E30157660C7467F
1DE63D880D388C960E36F0C8EE4B56FDD17252722443DFE18F6A225734F53B81
17C31F01A750B84550929079FBFF610BFC6B1CE550CFE578D7B72448468F0BFD
3CEE4D7F207E9DD559BED08C966ADB7C484D0C84AF58C5BD3414BA687737C48E
899D09428FFD9385BA3AC9C2B74D8482D8B15051EBFF9C0D824AAB0016018A64
8E61D730695F09AC9AB738B95B04967A6359E45AAA70E0520749DF39777FECBC
9E3370F464AF0254169C173656133D7294C1A5858EF1254ACDABCD0FDC0B4686
9326E043B362F8D3B7CA258488409BF6DF2F4747272BDF1467B490CDBE62E8E6
526DE1F429C791126F8D2DE433BBC914D11FD04BAF999F6A9A590F1EE674F17E
BBCE3DDA5DE0971B42F2BD7534842A4D16B65FFAA0176EE0E0687DB42CEE36F7
7F2CB87E70770C766D50D754282776940C8FFFF1A682146109AF3B82E3BB0C63
08985F41F7EB0A1405E500238201E9CF309685F67C1F889DCBADFBE2510C0663
41C8642038BB52028CBFFBCF2B09D62033D518F4946977E19FD9F30F1B2B0927
0A906C3CCCFA4B8ECFA473A77D91665D1488B692F0531CEE66DB92B3496F61EA
6E4B9C9879273C7A22BEEE5C4E7E0AA146F670E4713B964DAD7CC24E961AE74A
9C998769F4B71AF838733B95864852C8699C42AEF320AD42018D7365436F6F72
6AA52676AF41C67ADDE394B02A6AD2A8CC0DE83798A93FB926778DDD9E3905AF
B4EC6EA6755684B216F7004E5EE5D75F23393CFB7E0E1BFAA9BE966AAF3F9BAA
C4ABF0344E4C110CA35F2D7D0891BDAA9182FF5799C920D14EBBB70F7E98AB38
1881A1DD7CC51FDEF902A9308CDEC893795FA0E9235AD429D4484A31AB29AB42
C7A03DFF7BC256CB6BE5FA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEB0F7F496AD
7A919E031AC74FE7BEBA9DAFC46254DE60784DF1D94A38291CD3A3C40D42983C
C4B3DB3E68AA0D416F09F228BFC42E1B20AC89DB7E913E866D5EEB0AA34A35EC
79D3ADB6E26D9114D507252085BBB8CE9F90383D61F396FF96162350D4A20302
B9316E6F87AACE47E2669BC0FEBAB95BBDB21CA8C5B0E8B4913B6FFCD0FA8CF6
D4027524775DAD9B1E302E7F156A37518C89A6E326158DC778BEA985828FD177
643CB53BBECD949873A3261D450EDDE286EC6DFB7B4FAFFC0BF0235EE3AD8629
2130289F8BD7DBB939850654AE2063ADF45BADCAF261221181176C4E8C7343D7
64FAF776D574EF28CE5F8D0C6FAE2EFB40363F64CD2AB5F31AC1AFE5E4607937
7432C185342894F00D3C24D65E7B2C33363B03C00208AA2E0D566EB778120276
97446E907E18D580F26B79757E89916B0CF1BBC3A0B39ECE47167E3FD68A9F5B
A2F205E371A208EE5C113854508D91FFF390AF6D946F8AE6688D5B063EF2ED03
629128D6D34F90FA5B09E8CD66D7F926236D3C839501965942DCDAD91A52DDD3
0FDA4E188B0A3ECCC89A3CF375F25E89755A3F74E4ED8F5766FA3DBAAB4C49C4
BB105B22D4CB2440A6AFABAF329CE01BF69D0F5FFDB596BD641D3C64F0BB4178
29009DF506D9C1616F81479D96F5922D27BDD8AB496E78D1595C40F1DFF3F27B
6E77B66DFEC1D8E2ABF4C2D506921D89A55C53CF1299E62363BA9A2C114F8E5B
34DC67E486057837090E394A913B1F6255EF9DB9AB61A29D27AD45EA30BE97F2
9439CA845B86ECE49BEFE44719DC97BDF4A1AEA1024AB7C19C1B853DF9E6DE53
C3FFBD720A6E86CC2784EDCE8B348982253BF7E674B4C909BD654C987FD93E73
CE81FDB876348735F6D0508C2C98E655A249C09349D6E4FAF1B9C6E43CF73CC7
A71CBCE866FD462DC77A764ECDD2E512F01EE5B93B2C705156B92D805B21529A
3E417A300CC3FBB6DC1A1CBD3F489F689BED966ABF31AF05E753975D19BBD5AD
E1C701B0D1058A700C6D042399424832B062C8E1193CA92485ECE5872559A95A
AE6BD530F7C2EC1F0BA5434760B71851B2E6AEEE6E58A169D5A30A25B0A3F9C8
AC2243E1467DF12CB309BA6771631BB4B3272292246D0EC75BA627EA0EF60F15
92F5ACCA398F1BCA78BFB09D27D1FF326A9AAF1AAACED21EE3784191C0D4ED47
F1EE13E984EF91E4477DF8720B8EAE2EDEB39127E1E041F9C597C66902DA3F00
1D605B208C3E596C10CD5B8BB991294D465CE68C7BC01B831ED70D5874B323AF
FF150C41A5C045DCC0D7F0F03B87D8403C6C203A7B81D93EF36B8729F3E075F9
6F4E493270F38CAB7A2A24073DCAF78B50EE0602B63A015FEDEB4EE784241FBC
214C7CCDC6E09DA17ED6CEF838E40875D9846D43F9A75477C574CBA607B223F8
56DBA7DBF580586A79FEFC42161B587DD3358263A51302A625DFF262A9144D00
8EE01852918AEBFB76FD38ADF1BEA294C126519B21693C132C3C5CF481579D29
2892C81C414790A00C8336A7346B3E055669F7142247B295F0360E9A8CF405D4
3EE8E8375CC964B0DC3B23C42CE7AE54854E203BB3021443F310DDFC0C15502D
08D9BAA8E224F515479964D86B1C33F53C274806D866754C5FDB0F84900624E3
F7B7DC0D41A675ED9460567B1E35F14115AF32C017E2EB734215B576BF9F3134
6219C5E019116DCAC6748D88EB15F55150121AC8DC5C445587F2702D545190DA
C721C071D1FB2E7E19DF27A5FA9735AFBBBC47EA86521600940983FC7254E101
CCCA8D6CD29F31409CD9D31C4CD48B2075BFFC41ECF0080CBB80B1518E96DF66
F6135B71B955FDCD7B440C2244DBB040B7386123570141CE34AC4672B3CE1D8B
69FAAD8AA760F15CE84D8B402ECE2025A4E30C2F64B82851148F71D33C377189
43C7D4EB02E329878A6C70228B932B6230A5A8E854B8165A8E4E65885FAD4315
6287383FC67B87068C9B0A809234E37929AFFC5DC36B4C532C8B435729D7293F
47366CC13017CECFE014CC94AEB36FA7A197B57FDA651778D2856D21B0385CEE
2608C1C9FA4CCF7CA0FDDC473F2D3F9989BBB7B4A22112FB4B66D2BD3CC8C4F3
C6D44CA08C8B7623B9B9350BB0E866B6F5DE9EEF3BF4037FEE048AC94DA7F3F0
6B1567E3C5ED85B86CBF8E99FC131B228A2FD8991AF6A4B45035F0206441823E
52D2B6E4AC0AD97E303B6EB8E2F491A6E0E10B53F866AD376A1C6CC759A09BDF
C32EF44445DF95B8C53DB84C9610DCD0DC37680ED52D24E34B3A45B5A49E858C
0914C32636B260A06E3FF1532CAF98A26481A7E66FF17B74F65E105E93CD85D4
B804A62C3356DDBC1ED046F72B261D49BEEE8B4BC1FFFA91864B6A4130EACB1D
5248A0324625F5FAC9AAB3B6748FD6F2D392C445F681A8C19E5A5884108D9681
E26D40A3BF68ADC55AD864E1803623BF62758496C765DB1716C7234808E5112F
99AE9B139207377281C1BA03E714CE375B49D2B721BEFBC2591C9EC6079700D3
7A18D1865CB306DF42B5D8CA1E2AFECFA0B10284C3D5F0167496B0ECF038B218
193B02B47F41E2317C0F625BCDC33E9993DB1A5A8B09C18EB2FABC7752D30B36
4A0A00DE07427245E164D2576DF37B64DABD849322091A4A3E51F63994970371
3F2C8FF18809CAEF9E78A77C0CE341C6161FC905E354E58BB051F7F46391C1A5
E080F810156FBDD02658EBC9810F335ACFCCFD08D95AB020103A3039599ED7FD
F5F1ACAB384F7920F8FA84EC1A446E7725ACACCB47A8F44AC4B2748D966ADCC7
C146C8B4769B9AED42A92BB3076CBD92838910F8B2C7F05179825042CF87207F
492E36D0BFBCF164A79E5490A0F2EA94519FE9BD1E9DD70DD37A853F8E01528A
A09CF0078EBAEF00C97C4531253B9438F174088DE048A533AC6681F4271DCCA0
91E1A59C6CFD5639598ACA53CF55D47A3D921E0935EA38EEE7DEEA1B900EE0BE
879FC32B11B6C54FAB00A2DFC6B2C93929184CAC8DC4E5B71FE500F2869D5E61
17AE24413AFB7D701F5C6F9F09084D3D2CCBC36F52001919B695167ED75A93C0
FEF3453E61A249982D3CCD054DB6985EACE51ED7450E68DDC512B12914B46897
54917AC8DC2E9F5E4B8E8EC3B215752D863B65B149D622C459867F414C51B2B9
F7D20FFA35F03F9061463A0A97909638B04873BA5F157FD58B346C00122454A8
DCAB0992D33A4B08996396F20EFBF8D9FA15A6663254BFF960970EBBCF15F18B
5157E1A691365784057E48D5576C1B32A18CF7479AD8ABA09E2BB7EC1F381124
1B2437BB94DAA71A81E41AF4B88C75C199DD4C8E72317901B3F7F15F07B6D24B
91874180BA673DD634BADE7F2B3F9B3052DE5531810FEC5B1D364C9C68E1425C
A7F573D387624C5BAE217DF295408A76EF449595C5606C28F5974FF30D3C1570
6037D59EC3844A268831130714DF7856A0FE157772B223082413CAE3FA6C9E71
98BBAFC2AFEACFEC0F5CA426930EF26B2AE691A2F224D61098F902B5490AF3E2
0A773639B489080BF56EE0C30CA9BD564E89F33DA453351AB3DD989190CD20A8
F68CBD056F93814AD7C4AC14C0DFE8924F60D450C72DC988FBC23B66458E3702
1B44771F102C333E83DD0AE4EE2A69F020D2ACFC5C95B757EC66189E57A9AEAA
873882E274214F0EE1C98219219DDC6CDD32618DEC82D0E6D98D6456979F868E
76532AFF5C393EADCABC84D2EB7B1F5890A6A882042BB73C43B7754299D1EA86
726B500FD28C08D6E44BD4CD7AD1D0EE54D2905A3067F514597E38EA041F19BE
04BACD0394915604A53DD6781AF66FD5FD315C8C84C43C8A652824EE3BED6DD4
D6DAB871756560BA7820D74B99894CBEF86E7562E5D9D5326E540B7A8CB0A6EC
211C62403E8C986F332779C609C4CF671709F34EBAD83E13110498239A91A001
A3F13D010E62E842A1DC14BF8448C211FB76ABFAF19964A0AC35AF77B9BF6A0C
1BF405F9F66E39D123B62AB2F8CE7304B67FF6D968877B254B35C37EEB525DC1
99E99955F052A6AE28884E014854C6D71FC6CF74BD96ADEBE83F04AF79B7C9B1
846CD6A12D95270ACC332837E4606568523463DBB55C15AF04C0E889511BACD6
7B28E6AA57A26749E525973FEC4098F45AFCED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 73 /I put
dup 75 /K put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
/FontBBox{14 -250 1077 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EFB5D9396D9D50F
5DE902195DE29ACA7AA4A9E53578596A58C41C52EA690CF237BF3D82209B64FA
3E956BC48877665AFED4BB1474CBC71A390D09F95E8DE834DEFE7257E965F03A
802F0A36930EEE1319B04971DA5BAAA785F4CF8A368825DB6AAA021326EC2B59
6CC6347409FFC9ADBA5FAEFDA891E050E4E2262116E55B32FD4D00447C901DAF
C0AF9AEA488E6E9A3EB13A6D7511F5D0744EABCB320C54D73E189E1B202B165D
21BFF9F07C0F343FCBCED7DEC9D73D6DD017CC0B02737C075CF7CC780CBFB664
5435B8D5FC4A5ACA6CFEC1F5D14AC8966BADFEAB0557EEFDD553E5FD320D6657
EEEF1D3D55C60CAD318162F1F5B6703C2741F0FF648966F4F29EB9F3D4B17FD5
4EEE4D1421E5A3317923951AD1CF51836444C73973F9D59D07DAAC51957E74A7
597C342F299D61BF7493E4AD1CD724E1A2110A5FEDD2A86C52BFA7EBF588F31B
B59007C9B41925640690E5F72DB06ABB9EBC86FF3947179BB0BFAB3D4A37CC86
84B2716667451EA82A96C167A35E0CF957047BEA373C7E54D9A7CA5C57153A30
DF94390B566599B04E3BA3C1951D6A1582A2DBE21EA3DBDC01CE05FC70454616
B578F47DB5FD19BB2B46720F165CB95A2FFBA2BB2F6B3DD03C83660AED1E1164
9F3F517357D19DCCF54332F8E4CD5D5FC421311AF164913BBB60A262C9231CA4
B56E1E685E7E2B59277249FF8D3F822AC279F191354939B5516A6A71747F721B
2E06605DC629A905181209D36B0CEDCD02DF52440E9FE322A9590430166CB7E2
36698A775673EB7229D2F87D7BE23C73C42BDFC395923582362032D262C92F1E
C16A8C778C1616B05064544DEE1C223916FB8A4960F18F6710FB6E4E1453EE34
248288009353E152A8FB498912A545BE87C7C990045DF6A32D9A81383AED8223
EA8EADA5F2F1F79B24D733F16EDA924123EC6D306172A233ACD4111591DE54FD
CA81041B99FFD2296B482BAB7BBD77009895CAC93B92509031741D3438FC92C6
543CFE0C8128113DBA7AB6CF5AB16AE185A9F0C4A56DF51EF0164162EB3AFDBB
A281FC86EA3869B75DACA01F7DD193F0989C843F78A22372D33B447D39C6D6DF
10A915C28C3D9D8627C23283466EBE6378EFE5DC86C9F5575B28A03664E81833
F8249A522F7D25ADE71BA3780BD08390CF7F293B44A3649D1A5731ACB6F33CE1
B89A3A465B5E5F2ED011875A24BCE693568354A2710004EAA0C5361768A3638C
07AAADB1E7E51F3CF294194822856996E5775BE4EA4B842C8F771FE95570CE7C
B8ED2A3D897122700CEC260673360B0AE972515FAB92D177451829ADC55D853D
0A6717AACFD4C0ABD4E087A29FFCA132D2D50E0117D0BCE897C90D7943BC1A95
D97250919732970F6B4B07E1C1B549D3AC5E93507F9D40E352583D5E69B25669
74EA9A675A58FE3E1941AD36F97AD97390D757E8A48B49CEBE7FB47749C1CC8C
EC2604394903D9D763F93D5AE590EF7D8CC7E40A5FC3E8CB8E06B551CAF52277
051303FCE565581567670FD32371D3C001215DE75BFD2CE7BF95E398363D527F
8B357D9A59D93183246A0C107447358063CC27D48DC4AAA24F9515C9598015C5
7D18C0A2BBCD9E49E1BCCAA1E107C2A843DD833902E49DD6FB556E3B61495788
5A739F59DDF8D7A11DC518D449AED9D7B5AA1647C8E97B6440EEBA3954FB6BCC
88224BBACBF3DD275DE87B1FD0FA0C859DCF57A6489882695B5DDC2BD499C9CA
51E44D0A9DDC2383AF23EF09034C0DAE82390B8FF750E789137669CDD52A4ED9
D8789ECA9ED5DBF8935745430FE5C82B407D9ABF7B11203EFC0017FEB73AEEA6
726A95B12BED1DE888C94F5C1F7CA43DD233F3BE5EB00DFEA58C635C8B88FB4E
36C8FEA8E3C2FF17D6E69C8153113DEB09F556B70F6F44A954FE6AC212D24243
01E24127EF7FD88AFE128F479F12A0136B85697273D7CF198D12A2C3CA8ECC98
660AD31A04B6765162595AE0A380691616712577A4002343F42CC74FFC7DE11A
1BDBE3D41C19D4AF7CBB92BF8C915F1819A77673B9C1906F45E926B8F581A176
37150BC7FE96CF53F9DD116F7700B4F25D0C8180F2B6025283A931A86A75074A
6C9546235E409AA50A474E1FC6E534B25AC72B9A43BE3B9CF9B068085FB2515C
18B1183DC60A6A70D7F350725817C225AFD2DC4568E112892E13744A8BCF0C19
DC8791C72C708E20C8A32E3E206A2285EAF28EDC1D256A0ADB2843399EEE8D31
99F82DC6E1BAC44B0A4FA529BC06E691416FDC6B008B9C0DDBEC638331DFAADA
2CA7D0DBBBDE8CD15731DF0CBEF6A526DA1895EB1C2DA6E0461C572CE4E50A14
E8B2322762AE62D0B966A9F86F7150EC24951F14AA440B1CFF46B02DAB5606C7
192F7B5B17735E2D8D64061D5050AC58846DAF78DE77F678E72B7471A3470CF4
7A42D95132BFDDF214F47CF6111A03B6BB0C7D2FF22237CB6D5A2156E56A2097
70A363821B07C0113A8917803868ED7B6103E355288012148F73903FBB83C1C6
6148301672C419073F4F679974487B0470027E6879F29CE74A1E214FB348264C
020D6094D8AC449FCC2A1A10EF735F9398AB9616FDFE4EA4EB5D267963717D3A
63A5CF37CD8E3D7A0691EEB114CAFFB710598F669F9E9DCE4B3C9B8E7D620946
763A0BC6BFC673723D7300A8292B911048B47BA88643556860805D3CBCE252A1
C900F18E3D06BE515034F943419E108921E7DC545CDA0F5AC328F50A269B695E
E97D26E2D26B4CBC01E7043CE3F7B0B5651DF5BFDF67C3A12D4192359C634053
2B51B2D5775088FF02009029A47EA99D9AA803FB026738E43D560A6DF62BB166
35AC88ADC316C961D525D54D9A7CB01CAC835A715D3F679E8ADCDB1F9C51049D
34E9EFD747C5EA7805296EAB762DC881315737019CB0CB7C1F856BB1CB3378A6
6349BA0AFD0AA37609A190BD529CB31659EAD2C24F9A3E2D447733E0C503A12C
3ED62EFA6691A7C89D53A22CC10BDC35F8FDE1A3B10CD745384BEEAF39639402
5715FD8067E0F9916A4B8A580395C570F423D93EAE5B3E005D168B8D3938092E
70AE9A9621CC994A7E81077354343D5910F4CDFBA084D23A8A8589302C0727AD
7E3A5377854993A1B78BC61551D2A1AF8F7B0C0289A1D2CCD22CC4C07D543310
455632D4B155E5594AC38C3BFDC0C7B2E0E24A4205BC871D72652DE096D7B804
592FC85FF1CFE9BDC57779B8303E8F1ECD01B991752B113CA7D41F8AC719ED01
38133482F0495C04C59CB094B91FF089BD7F5780A508D12EE443E11F2BA6E029
E1CC43E503562168E2C6536632551382531A3BF99028285DF485E2EC70E221D2
C2A50673144092C32E000F6EAED3C18A97047374BFDCE9F1B7E9EBE89807DA04
3037D5B616734A148696A829D1471F081B83FFBB37AE4965C0A9285FF170BEA1
4BAEE3AE3A24BF469231BB73F93B89544BD8E5FB4DD9516BF422F7335FDDE415
F692214C6C7EF54E680EB536001F8EC27ADF2CDE9A20392F4142225B1833929E
17359FF25B839CD389D662A72808FA9A5B5B8B295241EDF4316F721F85C4ABEC
9467550CB847A767F9C8249D16175CE973C784C3424A0B1A1F0C804E5670BEB9
E1F823378D0F0E055A16EB5202A0B434A1ED0CC4AE6BF019F4632FF80FEE89AC
E19E6532394E1A6900C292F2605F56E9B54DBCAE1A3ADA8F9BA47101FE7B8A18
7B244B96328EFD4534D522F90BA103DFB028B7C6ABD8950B9B6836E9BC072211
583C9E8673BB5A048E7E840832C542FCD3647164752FE18D05559B1B9EC3F0CA
5115D1FB7055AD7C8450164770E50E22B4DCAE2E8A5731F95B0D009EE3BD81FC
66B12F57B043627C9EB1C3F4A5833BCEC2345D10AF90E1DD386C01C3BA5FE254
F50F39E913313B76B6F9BD3D6654CA28448E322CC85DF439262BF04231F2811E
58B9A78CC872A007031EB00BDA78781FA93B99EA9CF4A7BD9EF3D4BC07F48545
1A499AFF23579AB0A69D276E0A0D62B2CE25D5E4E70F9B22AC738BF348D1BC47
C523846E62E0ECEE559875BFCC42503B704EB6AFF819B7ABA448A3CE257FCCBA
6DBC059FD64A70B99FD721AA64154AA4BC2C38FB4A424B094FA1F66C7D5D20FB
EB3B3BFF72EE733B2D9B9DA1A5625126B619C51A1932809600C42D70B07875BB
33C2EA22777F68FDB912FE4D04FE025F783876EE0F8E695CC89FA933A0D5B0F4
8B1D229D6A88118D71312CC814B587354A5C9752B13BEF0B4BC1EB8A28C34C3E
B445BB83A112757CDC1DDD8A8E0ACD6B8BCB389087DCD607752BC2EB52422494
EF4F1674A66E43B69730BC007E9886535FF016437949278F0AF5674EAC1C1947
799C0E74320652710A5204E612C1056F6C5137A13A2DCDB133696251DFBFAFB8
9F30A3B8FC52FA48D91BE2C6212066E4753AB0B11BA24F4EEB23705C29FB01F6
30CBF92E4F34BA0063314F280196546AF58251B319938979B612819663E2DEFA
A89C9E69827494D409E25307CEFF327534C3576EE50E65AC4E3CE9A8492A5D1F
6D8C07D5A32D3AEBF6E3591B3BAA45D685318AD6CEDF58CD9FA0CE80D6AC91F9
CB2813CA2F5BDBA6C8CD9D59A3F0581BADC72C07910EBC03ECA124480A2B99A1
896ADB07C4B1C5E6AAA9B9CC37D9CFF8E287C84A0F45440C0DEB044F6B4F8165
720796068E47FC4E55B77A45AF80EDCB9599DEF39CF66CEA6648E5CE8DE6E247
E89695B7A47BFD7DB9C06E87159A6154391D5F16BE160738C3146C3D3A0B5ACF
149ADEF30FE4A91062CA7167FEA66C685ECD59EC2AFAE63E334F7A1D28F0B632
1D190988B7ECE658780B9618AC909938B77989A88FC46A57E06E9C2978F9B3BC
AAE70A9B60BAFA39660BCEFB21D1E15E83A69861DDE60555E4E0747403E50B49
1B5807600F2DF01F83B7AC515FE76179D2C43EECBBD19DFD5309FF13CA1786DD
1852346054DD67ABF2C26415EEC42BE88D948F3696EEE7764207835F3954D49C
43D328DB58CC9B595293CA38565881ABBF39FDF2924470ABB12270C8736D9B5E
EF73831EDA22A8102AEF3ECEA0AD816E878D9BFC1D557F7C945B7E8C80F11073
33CBA1A719B26697125796987F9D37DA496B22D10A6AF671483363E58080FC36
B25A0F70E73AAC981258ED2C61D3BE247E035F8FD7253472FE8DEF4C9B5AD6F0
B1CDC1F74095BE0CB6129E5315C952610A3BE572AA37C1091873A6C101417DCF
C29C17523EBCF98596EB9A1E1455B56052F6A7D17FACF2152EAF75090C314E10
399DEEDFD64B0A34F5B8563E8428BD6047FFF75DEEB70FF87078376CE465CF93
6D23C7EF3911D08111805B1E7EAC4DBABEC04D90AD3347940753B1A5094C08F7
EBDF2DF6F2B0C08525F5CC20C7F9F5A76DA1ADCCCD41355BDE699C646513CA59
16BD67ADC2D14E87AC57C016A5BB247E0DE7A0993FCFBC675BAEFC321041A45F
7ADFC6F5DBED8F712B9A2ECEABA1286F926CE260332DE93BBA04C078C84F92FD
85CAC9944F90E6DCF86201EEDCF17A7DE7CF801E9DA404C603D71DD01DB9ACF9
E024C8CCE582018ED598009974F992C99EFB558E7C775EC7CBE9183838D25F30
FD158EF45B9B08E7654BE57FBA02E17D83299A9FDD164D600A08CEE66B11E472
1133F3B78E5374A6A20C36822B5E51EF27DC9028647330103AD6CA2839BEFD94
3EBBBE9BC8BF3AD14C40E25CA2C44B6DCCA42ABBBC195D2B04B2F2B6CB9029FA
229CC92740B9834D4D57E3CA1856B6299ADE4F8E3422A509B98CEBED100D6C3F
7AE079CACEE961B49D0EA6EB14F456BE69DBC26BF0BBEF87
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (Assignment3.dvi)
@start /Fa 190[49 65[{}1 58.1154 /CMR7 rf /Fb 134[71
2[71 75 52 53 55 2[67 75 4[37 1[67 1[61 18[100 101 3[128
4[105 3[103 2[102 13[67 67 67 49[{}20 119.552 /CMBX12
rf /Fc 133[48 2[78 1[63 1[48 49 2[60 66 4[36 60 2[54
60 2[60 19[105 2[61 5[88 84 82 19[36 46[{}18 119.552
/CMTI12 rf /Fd 133[37 44 44 60 44 46 32 33 33 1[46 42
46 69 23 44 25 23 46 42 25 37 46 37 46 42 8[62 85 1[62
60 46 61 1[57 65 62 76 52 65 43 30 2[54 57 63 60 59 62
65 1[39 1[23 23 23 42 42 42 42 42 42 42 42 42 42 42 23
28 23 65 1[32 32 23 24[69 1[46 48 11[{}71 83.022 /CMR10
rf /Fe 137[51 1[38 38 38 2[49 1[81 7[43 1[43 54 49 18[73
12[73 10[49 1[49 1[49 49 49 3[27 44[{}18 99.6264 /CMR12
rf /Ff 134[59 1[81 1[62 44 44 46 1[62 56 62 93 31 59
1[31 62 56 34 51 62 50 62 54 9[116 85 1[78 7[67 3[88
88 70 1[86 81 3[53 8[56 1[56 56 56 56 56 1[31 1[31 44[{}39
99.6264 /CMBX12 rf /Fg 134[88 4[85 66 86 1[80 1[88 107
3[43 1[92 1[80 3[88 13[88 3[121 5[58 5[113 8[46 5[79
52[{}17 143.462 /CMCSC10 rf /Fh 134[106 4[102 79 104
1[96 109 106 129 88 2[52 106 110 1[96 16[135 3[128 4[145
1[70 5[135 1[140 6[55 6[95 51[{}21 172.188 /CMCSC10 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Project 3: The Kernel Crypto API) /Subject (CS 444 Project 3) /Creator (LaTeX with hyperref package) /Author (Christopher Mendez, Joshua Bowen) /Keywords (cs444 ) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (RAM Driver Design) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -4 /Dest (section.2) cvn /Title (Questions) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.1) cvn /Title (What do you think the main point of this assignment is?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.2) cvn /Title (How did you personally approach the problem? Design decisions, algorithm, etc.) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.2.3) cvn /Title (How did you ensure your solution was correct? Testing details, for instance.) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.4) cvn /Title (What did you learn?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (History) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Git Version Control Log) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (Work Log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150
0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150
0 a 228 1235 a Fh(Assignment)64 b(3:)85 b(The)66 b(Kernel)f(Cr)-11
b(ypto)64 b(API)864 1654 y Fg(CS)54 b(444:)72 b(Opera)-10
b(ting)55 b(Systems)e(I)t(I)1730 1889 y Ff(F)-9 b(all)39
b(2016)1764 2005 y Fe(Abstract)228 2223 y Fd(This)28
b(pro)5 b(ject)27 b(in)n(v)n(olv)n(es)f(researc)n(hing)f(and)i
(implemen)n(ting)h(a)f(RAM)i(Disk)e(Device)h(driv)n(er)e(whic)n(h)i
(allo)r(cates)150 2322 y(memory)e(that)h(is)g(encrypted)f(on)h(write)g
(and)f(unencrypted)h(on)g(read.)35 b(The)27 b(goal)f(is)g(to)h(gain)f
(an)h(understanding)248 2422 y(of)g(ho)n(w)g(RAM)h(Driv)n(ers)f(and)g
(Encryption)g(w)n(orks)f(inside)h(of)h(an)f(op)r(erating)g(system.)36
b(Through)27 b(w)n(ork)f(our)779 2522 y(pro)r(cess)h(of)g(learning)g
(and)g(implemen)n(ting)h(the)g(RAM)g(Driv)n(er)f(is)g(sho)n(wn.)1501
2907 y Fc(Joshua)41 b(D.)h(Bowen)1528 3057 y(Chris)g(J.)g(Mendez)1544
5081 y Fe(No)m(v)m(em)m(b)s(er)34 b(14,)e(2016)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 275 83 a Fd(Assignmen)n(t)27
b(3,)g(CS444)f(Christopher)h(Mendez,)h(Josh)n(ua)e(Bo)n(w)n(en)150
224 y
SDict begin H.S end
 150 224 a 150 224 a
SDict begin 12 H.A end
 150 224 a 150 224 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 224
a 134 x Fb(1)135 b(RAM)44 b(Driv)l(er)i(Design)150 539
y Fd(After)40 b(reading)e(some)g(of)h(the)h(LDD3)f(do)r(cumen)n(t)h
(link)n(ed)f(to)g(from)g(the)g(assignmen)n(t,)i(w)n(e)e(w)n(en)n(t)g
(online)g(and)150 639 y(found)c(a)f(v)n(ersion)f(of)i(the)g(sbull)f
(ram)g(disk)h(driv)n(er.)56 b(The)35 b(plan)f(from)h(there)f(w)n(as)f
(to)i(mo)r(dify)g(it)g(and)f(encrypt)150 739 y(it)e(accordingly)-7
b(.)47 b(The)31 b(ma)5 b(jorit)n(y)30 b(of)i(the)f(c)n(hanges)f(to)i
(the)g(driv)n(er)e(o)r(ccurred)g(in)i(the)g(transfer)e(function,)j
(whic)n(h)150 838 y(tak)n(es)d(care)g(of)g(reading)g(and)h(writing)f
(to)h(and)g(from)f(the)h(ram)f(disk.)47 b(The)31 b(original)e(write)i
(used)g(memcp)n(y)f(and)150 938 y(w)n(e)d(o)n(v)n(erwrote)e(with:)275
1038 y(memset\(dev->data)i(+)g(o\013set)h(+)f(i,)h(0,)f(cryptoi)p
1799 1038 25 4 v 29 w(cipher)p 2050 1038 V 30 w(blo)r(c)n
(ksize\(tfm\)\);)275 1137 y(crypto)p 514 1137 V 29 w(cipher)p
765 1137 V 29 w(encrypt)p 1069 1137 V 30 w(one\(tfm,)h(dev->data)f(+)g
(o\013set)h(+)f(i,)h(bu\013er)f(+)h(i\);)275 1237 y(Where)i(tfm)i
(\(whic)n(h)f(stands)f(for)h(transformation\))e(is)i(the)g(cipher)g(w)n
(e)f(de\014ned)h(using)g(our)f(k)n(ey)-7 b(.)46 b(Similarly)150
1336 y(the)28 b(read)f(originally)f(used)h(a)g(memcp)n(y)h(to)f(read)g
(the)h(data,)f(and)h(w)n(e)f(replaced)g(that)g(with:)275
1436 y(crypto)p 514 1436 V 29 w(cipher)p 765 1436 V 29
w(decrypt)p 1069 1436 V 30 w(one\(tfm,)h(bu\013er)g(+)f(i,)h(dev->data)
f(+)g(o\013set)g(+)h(i\);)150 1582 y
SDict begin H.S end
 150 1582 a 150 1582
a
SDict begin 12 H.A end
 150 1582 a 150 1582 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 1582 a 129 x Fb(2)135 b(Questions)150
1816 y
SDict begin H.S end
 150 1816 a 150 1816 a
SDict begin 12 H.A end
 150 1816 a 150 1816 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.1) cvn H.B /DEST pdfmark end
 150
1816 a 93 x Ff(2.1)112 b(What)38 b(do)f(y)m(ou)h(think)g(the)f(main)i
(p)s(oin)m(t)f(of)f(this)h(assignmen)m(t)h(is?)150 2062
y Fd(The)h(main)g(p)r(oin)n(t)f(of)h(this)g(assignmen)n(t)f(w)n(as)g
(to)g(teac)n(h)h(us)f(more)g(ab)r(out)h(di\013eren)n(t)g(asp)r(ects)f
(of)h(the)g(k)n(ernel.)150 2162 y(Sp)r(eci\014cally)29
b(p)r(ertaining)f(to)g(mo)r(dules.)40 b(Additionally)29
b(due)g(to)f(the)h(lac)n(k)f(of)h(our)f(access)f(to)i(SUDO)g(w)n(e)f
(learned)150 2262 y(ho)n(w)g(to)h(problem)f(solv)n(e)g(and)h(w)n(ork)e
(our)h(w)n(a)n(y)g(around)g(a)g(problem)h(to)f(still)i(arriv)n(e)d(at)h
(the)i(solution.)40 b(In)29 b(a)f(v)n(ery)150 2361 y(literal)f(sense)g
(w)n(e)g(did)h(the)g(problem)f(solving)g(asso)r(ciated)f(with)i
(engineering.)150 2493 y
SDict begin H.S end
 150 2493 a 150 2493 a
SDict begin 12 H.A end
 150 2493
a 150 2493 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.2) cvn H.B /DEST pdfmark end
 150 2493 a 101 x Ff(2.2)112 b(Ho)m(w)50
b(did)h(y)m(ou)g(p)s(ersonally)h(approac)m(h)g(the)e(problem?)91
b(Design)51 b(decisions,)405 2710 y(algorithm,)39 b(etc.)150
2863 y Fd(Before)33 b(w)n(e)g(jump)r(ed)i(in)n(to)e(the)h(problem)f(it)
h(w)n(as)f(incredibly)g(imp)r(ortan)n(t)h(that)f(w)n(e)h(familiarized)f
(ourself)g(with)150 2963 y(I/O.)22 b(W)-7 b(e)23 b(b)r(egan)f(b)n(y)g
(researc)n(hing)e(this)j(topic)g(and)f(reviewing)g(what)g(w)n(e)g
(already)f(knew.)35 b(F)-7 b(rom)23 b(there)f(w)n(e)g(mo)n(v)n(ed)150
3062 y(in)n(to)j(the)h(crypto)e(library)g(to)h(familiarze)g(ourself)f
(with)i(that)g(piece)f(of)g(soft)n(w)n(are.)35 b(W)-7
b(e)25 b(w)n(an)n(ted)g(to)g(mak)n(e)g(sure)f(w)n(e)150
3162 y(had)g(an)g(understanding)f(of)h(ev)n(erything)f(b)r(efore)h(w)n
(e)g(jump)r(ed)h(in)n(tt)g(it.)36 b(After)25 b(this)f(w)n(e)g(lo)r(ok)n
(ed)f(in)n(to)h(stu\013)h(already)150 3262 y(existen)n(t)i(within)i
(the)f(Kernel.)275 3361 y(Once)j(w)n(e)h(had)g(found)h(what)f(w)n(e)g
(need)g(w)n(e)g(made)g(the)h(mo)r(di\014cations)f(that)g(suited)h(our)e
(needs.)51 b(After)32 b(w)n(e)150 3461 y(had)e(exactly)f(what)g(w)n(e)h
(needed)g(the)g(testing)f(phase)h(b)r(egins.)43 b(Our)29
b(goal)f(of)i(course)e(is)i(to)g(mak)n(e)f(sure)g(that)h(the)150
3560 y(program)22 b(is)h(doing)g(eactly)g(what)h(w)n(e)f(think)h(it)g
(should)g(b)r(e)g(doing)f(exactly)g(when)h(it)g(should)f(b)r(e)h(doing)
f(it)h(withour)150 3660 y(fail.)36 b(Once)23 b(the)g(program)f(w)n(as)g
(w)n(orking)g(prop)r(erly)g(then)i(w)n(e)f(w)n(ould)g(kno)n(w)g(it)h(w)
n(as)e(done.)35 b(If)24 b(it)g(w)n(as)e(not)i(w)n(orking)150
3760 y(prop)r(erly)31 b(then)i(w)n(e)f(w)n(ould)g(further)g(debug)g
(and)g(if)h(neccessary)d(revist)i(our)g(implem)n(tnation)g(or)f
(solution)h(and)150 3859 y(start)27 b(again.)150 3992
y
SDict begin H.S end
 150 3992 a 150 3992 a
SDict begin 12 H.A end
 150 3992 a 150 3992 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.3) cvn H.B /DEST pdfmark end
 150 3992
a 100 x Ff(2.3)112 b(Ho)m(w)43 b(did)h(y)m(ou)f(ensure)h(y)m(our)f
(solution)h(w)m(as)f(correct?)66 b(T)-9 b(esting)43 b(details,)j(for)
405 4208 y(instance.)150 4361 y Fd(T)-7 b(o)34 b(test)g(our)g
(solution,)h(w)n(e)f(w)n(ould)g(output)h(the)f(data)g(from)g(the)g
(bu\013er)h(three)f(times.)57 b(First,)36 b(b)r(efore)d(it)i(w)n(as)150
4461 y(encrypted,)28 b(second)g(after)f(it)i(w)n(as)e(encrypted)h(and)g
(third)g(after)g(it)g(had)g(b)r(een)h(decrypted.)38 b(If)28
b(the)h(output)f(from)150 4560 y(b)r(efore)37 b(encryption)h(and)f
(after)h(decryption)f(w)n(as)g(the)h(same)f(and)h(after)f(b)r(eing)h
(encrypted)g(the)g(output)g(w)n(as)150 4660 y(gibb)r(erish,)27
b(w)n(e)g(knew)h(our)f(k)n(ey)g(w)n(as)f(w)n(orking.)p
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.4) cvn H.B /DEST pdfmark end
 150 0 a 83 x Ff(2.4)112 b(What)38 b(did)g(y)m(ou)f
(learn?)150 236 y Fd(I)27 b(learned)f(some)h(of)g(the)g(lin)n
(ux/crypto.h)f(api,)h(as)g(w)n(ell)g(as)f(the)h(basics)g(of)g(a)f(mo)r
(dule)i(in)f(lin)n(ux.)37 b(P)n(articularly)24 b(w)n(e)150
336 y(had)32 b(to)f(pass)g(our)g(k)n(ey)g(as)g(a)h(mo)r(dule)g
(parameter,)f(whic)n(h)h(caused)f(some)g(issues)h(in)g(\014guring)e
(that)j(out.)49 b(More)150 436 y(broadly)32 b(I)h(feel)g(lik)n(e)g(w)n
(ere)f(b)r(eginning)h(to)g(grasp)f(I/O)g(to)h(a)g(greater)e(degree)h
(and)h(what)g(go)r(es)f(in)n(to)h(making)g(it)150 535
y(w)n(ork)26 b(in)i(the)g(k)n(ernel)f(after)g(doing)g(t)n(w)n(o)g
(assignmen)n(ts)f(in)n(v)n(olving)g(I/O.)150 681 y
SDict begin H.S end
 150
681 a 150 681 a
SDict begin 12 H.A end
 150 681 a 150 681 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 681 a 129 x Fb(3)135
b(History)150 915 y
SDict begin H.S end
 150 915 a 150 915 a
SDict begin 12 H.A end
 150 915 a 150
915 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 915 a 93 x Ff(3.1)112 b(Git)37 b(V)-9 b(ersion)38
b(Con)m(trol)f(Log)p 150 1093 3271 4 v 148 1192 4 100
v 200 1162 a Fd(Commit)p 2610 1192 V 2167 w(Message)p
3418 1192 V 150 1196 3271 4 v 148 1594 4 399 v 200 1265
a(commit)121 b(475cc829ba05ad1c736)o(07)o(\013434)o(ec9c2)o(ef6dd8b8)o
(1)115 b(Merge:)200 1365 y(3e0482b)30 b(1b77c30)h(Author:)47
b(b)r(o)n(w)n(enjos)32 b(<b)r(o)n(w)n(enjos@oregonstate.edu>)200
1465 y(Date:)37 b(Mon)27 b(No)n(v)g(14)g(13:01:28)e(2016)h(-0800)p
2610 1594 V 2662 1265 a(Merge)236 b(branc)n(h)2662 1365
y('master')349 b(of)2662 1465 y(h)n(ttps://gith)n(ub.com/b)r(o)n(w)n
(enjos/cs444-)2662 1564 y(020)p 3418 1594 V 150 1598
3271 4 v 148 1896 4 299 v 200 1667 a(commit)84 b(3e0482b935f3c650912)o
(42)o(45)o(76)o(c36)o(87)o(9b2)o(fd76b6b)78 b(Author:)200
1767 y(b)r(o)n(w)n(enjos)18 b(<b)r(o)n(w)n(enjos@oregonstate.edu>)d
(Date:)33 b(Mon)19 b(No)n(v)f(14)g(13:00:53)200 1867
y(2016)26 b(-0800)p 2610 1896 V 2662 1667 a(Assignmen)n(t3)g(Files)p
3418 1896 V 150 1900 3271 4 v 150 2016 a
SDict begin H.S end
 150 2016 a 150
2016 a
SDict begin 12 H.A end
 150 2016 a 150 2016 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150 2016 a 77 x Ff(3.2)112
b(W)-9 b(ork)37 b(Log)p 150 2178 2898 4 v 148 2278 4
100 v 200 2248 a Fd(Date)p 957 2278 V 634 w(Time)p 1765
2278 V 619 w(What)p 3046 2278 V 150 2281 2898 4 v 148
2978 4 698 v 200 2351 a(11/08/2016)p 957 2978 V 388 w(3pm-5pm)p
1765 2978 V 466 w(Started)108 b(assignmen)n(t,)127 b(started)1816
2450 y(lo)r(oking)75 b(in)n(to)h(LDD3)g(and)g(lin-)1816
2550 y(ux/crypto.h)61 b(library)g(to)h(try)g(to)1816
2650 y(understand)e(the)g(api)g(w)n(e)f(w)n(ould)1816
2749 y(b)r(e)37 b(using.)64 b(F)-7 b(ound)37 b(out)g(ab)r(out)f(the)
1816 2849 y(sbull)51 b(driv)n(er)d(and)i(found)h(a)e(cop)n(y)1816
2948 y(online.)p 3046 2978 V 150 2982 2898 4 v 148 3281
4 299 v 200 3051 a(11/10/2016)p 957 3281 V 388 w(10am-12am)p
1765 3281 V 390 w(Began)d(programming,)i(created)e(a)1816
3151 y(k)n(ey)35 b(and)f(a)h(cipher)f(and)h(o)n(v)n(erwrote)1816
3251 y(the)28 b(transfer)f(function.)p 3046 3281 V 150
3284 2898 4 v 148 3383 4 100 v 200 3354 a(11/11/2016)p
957 3383 V 388 w(12am-2pm)p 1765 3383 V 428 w(Began)g(write)g(up.)p
3046 3383 V 150 3387 2898 4 v 148 3785 4 399 v 200 3457
a(11/12/2016)p 957 3785 V 388 w(2pm-5pm)p 1765 3785 V
466 w(W)-7 b(ork)n(ed)36 b(on)g(debugging)f(the)i(co)r(de,)1816
3556 y(realized)h(that)g(the)h(k)n(ey)e(needed)i(to)1816
3656 y(b)r(e)e(passed)f(as)g(a)g(mo)r(dule)h(parame-)1816
3755 y(ter.)p 3046 3785 V 150 3789 2898 4 v 148 4287
4 499 v 200 3858 a(11/13/2016)p 957 4287 V 388 w(8am-10am)p
1765 4287 V 432 w(Con)n(tin)n(ued)51 b(writeup)g(and)f(debug-)1816
3958 y(ging,)k(understo)r(o)r(d)48 b(the)h(program-)1816
4058 y(ming)j(but)h(am)e(ha)n(ving)g(di\016cult)n(y)1816
4157 y(getting)22 b(the)h(assignmen)n(t)e(to)i(load)e(as)1816
4257 y(a)28 b(mo)r(dule)f(in)h(a)g(running)f(vm.)p 3046
4287 V 150 4290 2898 4 v 148 4589 4 299 v 200 4360 a(11/13/2016)p
957 4589 V 388 w(6pm-7pm)p 1765 4589 V 466 w(Con)n(tin)n(ued)75
b(write)g(up,)87 b(format-)1816 4459 y(ted)81 b(written)f(material)f
(in)n(to)h(a)1816 4559 y(L)1838 4542 y Fa(A)1875 4559
y Fd(T)1921 4577 y(E)1967 4559 y(Xdo)r(cumen)n(t.)p 3046
4589 V 150 4592 2898 4 v 148 4692 4 100 v 200 4662 a(11/14/2016)p
957 4692 V 388 w(1pm-4pm)p 1765 4692 V 466 w(Finished)28
b(write)g(up.)p 3046 4692 V 150 4695 2898 4 v 0 TeXcolorgray
1929 5349 a(2)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
