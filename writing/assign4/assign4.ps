%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: assign4.dvi
%%CreationDate: Sun Nov 27 21:37:41 2016
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMCSC10 CMBX12 CMR12 CMR10 CMTI12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips assign4.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.11.27:2137
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 63 /question put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 81 /Q put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E064C03
13C2E5064E4FB036548B136509EAD0CB7D81A544C9CCACD5FBF1E5B843BE04B5
D49B504546C8926FF8114AF1322EC6D07157028EEC2B7C3B63C3FFD6D3F060BB
C6208E28AE9F65BFE505FE1A6DB35ABEA84E07CDEF514265C893407B9DFCE704
A1D38346270CDE05064C51966ED154ADBB60EA5FA84EEE10ED45BEB4049BC1AB
5E790DD8654E2D85B8C125018DA13B5B9564E40B8A511F99F99BA1513F2A7FC2
AE7BFC1861BCEAB748D0053FA36492F0CFD6756DBB262C6DD7C9EFB2CC566F10
A9884DC8C37FA76D87942D0DA67FCB8A0D740A49543098F5B7D3EADAC4F5F08B
BB26DBB05C3A65442778653A925B5B47A8942151F917DA17E80E9365A5567B4F
5FA894599CA910F742F0A713FF0CA107FE3E96AAB271ADC793512E946840D4DE
587DFAD751BA41E9790A4F57105E1DB8D01C1448B5F5B929CAFF3576FFC8625D
C77F7364DE40BBF962E1D62610C86077EFA6F2FC195F522DFDE57A5D601A53CE
A1E44EA8EE98D95928C63DE9FF30D095CA74660B69823940A5B3A3DFD392AAC0
B8FE05DB2B7761D4D30676888FD3D06C61AC29BA7062871329DE76D956EEE449
03F1EACE733B9D0547FA5406E379F60E06F70760F2CCD61B27A855D48A34C0E9
29EF8B9C3686308C137F50764A83014DDADA1CA7033FD29164C1AE1CAE845B0F
F19A258663F117E279F6D60C823E593FE568990567B1AA2008D70E98C6295472
95BCA734589E4230830151B7C550286F5DCCA2B0808D54DF5D90B3792B7AFE69
A652D36B48CCCA2234AE7C3722420F63632908F8ADEDECC16D5CE96091DC3462
A9BB78836E9754F67981B2224BD4E7F068C9972BD1E1E8ADD624B18D04BC1A0F
7115903315D9C86EEF9D664A875D3FF504709BA2F8625FF25228EBF137097FB8
9317B3CA87BF43ADFF0D01BCC85A60B096FD790FD7A0A9A1F3714C31B3A16186
F08D0E51FAB2582AA0EEF738500BFED4FE861A4B89CBE00F8C2C6745C977C45B
6F73A22FA1073C18F746FE4D3C2F08F4DFADAA1E97B4C81A054526E7C2AE5D3C
8004EA9350035D2033158B0B33CDE07883FEEB505B24EF8A485EFD3CEC819906
29E72BD0A579D37351FD9D62AEE537FB59EFE7CC71816568A07950D59E6B06BC
B546519F25D9E6042DAC67BBAA68FB2417E82BC35C2CF9ABBB5FA243F72CBC8E
67165316123DE8268951392FC5F41C13B02A62BF411BAAC812D78D250973A06D
408520B71FAC1BBDDD2CB372C7D002BD52C7740309D4C83E801F7141ED9DE3FE
6828A5A467EB1AF7C09804E2892463CF6F83999ECF230F1E30089C4975DCA43D
787DFFA61937B22033D53ECA1241C65C9470E4710CABA0D11D76EDE752A7DB87
1089283C745161405D2868671F14C9BEB45B602C2D649F8F47D01CDD451CB11F
BCA51F70867E994327D40E1ABA727C86AF1A2B725081E18533DDF35C0EA01589
995FDBBEEE32D59ADC40057AD3BB841823C9D003D0E8F3B7BB25D9A8B2C9F599
1163CB81A19F683F774D10018A0B87BD49376AC34A6A35695CEEBACACD65B07C
D307E7ACA047382A619A3D7985FBBE60FAEFFCC491DCB29557AF0F5E5C3C4191
3A7A52FAA0A6C2213B133ED2AEEECDFE9002731C2D7D77BE8CA23044C6000146
2B1E8C6AABB8743DFE6113B1AB6323F1743F9921EA690D7C100ACE4E6718925B
542236B060B0AAC34458AD59C046ADD335F4372CCE4C73AAEAF581B37468EC29
16C288CAD82BE0D97B771E52F28F0C32AF97031CDB1E07C7024221D6FF2C723D
49D23771DB95306CDAD91E535F2C8F94A3C703785FA365110815DE9ECE884137
CD063E9628F67C7B4C809A26DC16D94DE384315DB696682D9F18740C122D7FF0
2A30676C13C1263B571AFAC57BEE8167C5A4C90E0EFAFCEEDDEAE6D27431A708
583946A6B8AD4194F1ECB4E282796AF23DCA2BF0C28FDAE7D3D5ED6FCB28E043
EB01B1B7E5A088D264A1C145D21344CAC2D4B396DF0C6EEA819236359A915F56
5D3A806178DB67F13448B90A88245F730F8CD50943A290A567FEFB96E931D86B
AF7EAA83DCBC74B93D31ECF88B95E6563F5EDAEFDFE9500488B9552CA8696F56
638B8E4DFF610FEF1FA38F9C1E057E7C44021FA23C43475D56EE79822D13719A
E8D058EDE7C1FD6CF7C8D7372A181AA9451FF56D29481F6EFA0969A3AC617815
00D9B8619C0363886FC314A23361C0DD744F32555E8D859420EA55A0E97171CD
5AD5B79D9440127D9A99BE01DC34BBD0DB91A01E9163C1D92B1440819BF07400
372BDEF0470B2791DABFC073224E66ADE2679417BDC013CCF0AD195DB15F9C2F
CD08B0CFDB3F16838060A0CDA18653293421C1F69E9A3D7A1F39C738FF576BDF
C44767F5EA68F966BD774F11078F78DACE3F6788E3B1E016663B0EA305CCB1CD
46D364E0CAB2FF77CD32AD28E7869CBCD31643B76F7DC9E133A9F940242638B5
4A2C8E28D39D9BF303B483014A9F0894F9A19C5940347EC32D050816197FA368
C95743C20441E4E65FE9A232149F454868BBC82BCE0C875FC1C7B70468B9E256
327473162A716FE9B80220ADB13076576C088D9CC854F1CA60D148D142A071A2
A9CECE2A55A84CB5C6B19A22AF9B074649D80D06F3103C9CFEEB04C78DA4C874
F234158CAA889862CB45E1982CAC66AB4295124E6A54765B490A23E7C90FCD16
33F79E4A635AE36C3845F111B80B2F5D1AB36013A52946AE95B9700E6E9150BA
4C3B9AEBDD0A6081406183C21514D22E8B5D5AD82C9BB208309E310FC4B91A9F
4C33985824ED05AC6D4C7D8BE0E1EFFC3C52F236322A20E95581955C3A8E4E11
D6CFDA0DE4E11BA9035943748456F4CF79732DE15DBEF9400D393895CD0918B5
02A0AB57ADB9C9FCB02EED6B595A172B5720E6DBC3BDF8FC86409061F854C80F
A3422781590552EAC1F6121074FF6029EB41C4233CDBE3A6DF21DFB368BE5B46
7D841D746B9D882C93D380195F832D6F7BDD97799368CD7DBAFEE4CCD089377F
1C14E5C81085BA502FC88BE53FD95781406C66BA605EB6C4C167592F19B60E05
CE88E6283E2B297FCF261A1E43DF4E5A0696817AADEDE46DCCFD5CE5E2307C8F
7113AE1AE8D66828CAB55040E32383A14AEEAA7E8F268F3FD1E4979B448F7B35
660215575D849A54A76709E667193FBDBC71F06BE0A5BA4F759C1A4F2CC08B16
3F98EF0A844795B64E341B363A63BB5B0CC5D14B794360AC560AAF72ACBEA055
2ABE955E5EA32B4B46B137E590D9957BD5C11C84D90F466D3AF44D478CF16231
5FFDDF2B180B834F53C5B8179B8EDC2FB0CF176275C78A415E972AAE28812CF0
5EC56F11222BE737A00198F9E91B40C347A0C47CFAD152C04DCF507D6F539190
9B286C1D3ECDA08AEA482E1B5920F9E686A321574DA19D6200DF6E390B76690C
5AC825A8B058C134C9A1D35E299E6DA2ED398369EDB6DE1C9639D1604B700889
7FA6E6D47E57332082E25B4E7EA25C402F8F6ACE06615799D4B88A67C474CC28
3D4A2E57FC2F3F24832DC111786E94C4B4CEA281DA3FF8DBFF3C2B89C02E34D6
34C52AA6C130509695C78E7C4D14F855A8CE1E9EDD210E1969BE20C4682223A3
845400126137521BB8DF1181071A122BB826002AFD467EE9FE45A25BE7986FA2
C78506BE5CE0F53691D8FA944E207FAE74B8F98060EBCC1D6639F796ED5BA91E
917ED8BD79FFDB4897C0A5EDF561BEA93A3AAB4718401FF058E3FF6506E2A8A6
7C7B29B4F28A68C04358217A503637465BDFC8380D3D4B3B1AB877CE07057411
ED699788821D182E3C753D2DC92E0E3F47299DB2984B08CC0491CC2C44BA14C6
7D4FA9F0BE3EFC1469DA3A6695CF02AFB0909CEF2AF42A50E6FC952F3B675CE8
CFF5AE4428D881E4B7E16BB4FC1196E5D4DD3BEB24E92C2D2C44372E58F37DD6
744644B7DD29F4F6857D9E545409548073E2FB5F72335DF6D83DFFEC86E86AE4
30EBD03B05F7FF68646FF023AED81FAACE2222F7D565F0DAF692657BCA310F6A
D8E6BC7839A3BDC253E3E92B1DB0C980869BEB244A3FAEB93F307C99268D758B
DB1B9B67513DE72DE46414A8EFEE6733F511E1105DBAE51B6202DC2697060955
17A361678FCCB0E979C42B54AA1D25BAD70B0A9938FB2FF35AFC3DD13E32F31F
A51137964A0E489978627369FC9F3B50E5C292F26646BD84B892352686095E38
5F79AC2F5546F822B4D8FB818A1FC2D51A24BFA7DB61DB0DE599A009F2845D22
2DFBFE530DC1E43D4795F3836AB5DCA57AE210370A7A275464C80C3CA260A347
1A0B83B7C29D818F3877F425F7506BEBC5E38C00243F00B7959D40BC2E3FF190
E19E38C30B2808FA8A6465E17168841B5F07E9BF8CB8E1C6BC81A56E94CD2F5D
5D06D6042ED159856928CE3BEC0641844F7993683CF2EA5353ADA506987E1C5B
D64637E1CB4D50236BABEF1407D2153B14EF7E8B9770C12F1E7B5409533DAD86
B8FACA2308C62375D9BCC6E44254FC48BDD32355CA447AD4F02CC9A9747D88F3
B616128DE2203085318BDB069E2448ABF3A54B235A4A916006BDACCC07D4F85D
1863256E1AC1B1134DFF3A2513B5D2862FA44D46502A0640AA24DDD1A6F21A3B
0273A1D1DC74923AFCEC6173EF2C0D55B67D99520B3D35942B8890A3EB864F39
2CFC2027FB828D4CA27FA3E0A246C387A6437E65E52EACF792BD787738BF1A27
5EB65F995CC67859C44D1A19B4FF453E2A9E343B6EE7CF851A593CF8A8A3AD0B
746E13784E89673D7D2CF6D6BE1743E971987C6B458F275821F4FA89D95CCB17
952D0ECC1FDEFFD294D9585BAE66D36FB3FBCDCC6236E88D9DA26275DC770A42
C3578B775556410488F23121157B736595AC9CBBC2321CA4056858B31ED05EC1
C1168B12A2F0923E9C13696C88A0553808BFD3E0558C96E5C6BD4013EAAD3C23
356BC6E4D88AB94155F623749E6A66C8222C4ACD4FC6CA87ABD3C555AA2EF996
1F6B95F34BCAC40655E0FDE2A06510FEE10194906B12B87816DCD11639D6D88D
12F7ACE421E7B28086D07168DB3FF92F0C5D76170D479586098CEF251C2F4C85
4CD5BA17CCC59B7FF974CBE0F2EF51FB61FF6DF085B01499DD3316D8C09280EC
DDEF3DB0B8EB1F545CF6CDAF106CC7B40151B684E94964AEEA646B1087889B84
F397FF7188747553A4C3392D9D1BBB16EB4132D1C275AC27F3BFB9674ACD3361
4BE6CC6A9F89FB9FCB7DF6C8E3A452A4A574E8DC6C2BF811DB483B6F27DCE088
2850B67556B5D89EA10CE28FC02BA03C862AF579459048EBF51F877978045C6E
9ABD3E827CD02A20FE50A178A7B9432A122E35242E698B8E51F7EB25B2FF4628
1BEEF86A6BC244AAC8913618534F72F58B129E0708081FF67C202DC100871A1F
B3F63503B911F7631713369EDF7D580D28D96A52F6C4A6E75552B872EB9C0D3E
34648495A9882F68647692A6399E40B229419CC2A2A4DBE54CC05C2859209EBC
5AF813FCDEDB2353DFFC54AC2B39E4DB2A7DFAEB694D04D41418ABA5951992A2
A1C7CD47DD98DB8B77DA294DE2EAD15ADEBFB75C481019CDBFC93E13B61ABAE7
8E77451655D36A83856B560A5F7E89AE3AF3F4CC1085A260C55642FB38072753
23320F96777764959489C710FE76CB0333A125CBB6ACE36929A81375723ADF22
D0D3A8DD50EA157AFE58A193AD83EC410A190E5039CE3DBC5EE658C7E53B0D14
114FDC1314318645B1033C22A72F509E98A033969A260DAA9E5BD42CDF5C6715
D410E466FCEA2952F103E1785928BB72FF43571CDBD49148BD4332F1E6D60C73
998198D981876BF05D2E36BBFDEF86C2BE1B34BDE3F21178D07FF330F944E3C5
6366276E196D9014FC543799680E0394D714A5F44DE15B83F9600D9AF79986F0
56AFDB71BA9781F9DED09836CDA0CA2E97AFFE81C0482A7120B764BBA0A1504B
8FFB8E02FD3D08D2379524B8BAD7A67C37126EA2EA4030BFD61FF16C0DE05DBD
2CE1EFD1A8D82F936E684753FFE213D6325F67111279E55E42D563494BA9B05E
6FFCC3A3DAC63EAC7ECE89C87DFBCE00A66CA2B61D2C8D121B39C20B20AE804D
582204B2DE90F96641F2DE3DED7EDA898C3503BB9F31D5A37D691DEAC21A4E57
6EA87C8237BB32E02C06AD7CC18FC8EF42A89B483B389CF2C57B54DD70EE750B
A52F38F94DFADEAAF8D2EE1F02F703B8C55A8D21B7198439F81401F258132E38
A8FC1D04E14E14B73F48FBF3FF10DE85627E4139EE99D04955EA51FD80B73433
4024EE17DCCBFF22F403E9F4B1C83199AA34CA9DA2A00A848FE9B128C1348B2A
CFAEF7E65E4D448E6F3C478B715B7F64FD35017874F03E53DD532845175B2C7E
2B94C0C4721B4D62075ABA3C723FFB1F3BC832D1EF6BB1354BCB33FA4EBDE73C
3B5A24784BF2AB273E20B987171698AA45F0CB16CE1EF2E72CCC4808F07BA180
A660FE2555186C9C6E1060046C0A5ED55123B84F675F39A1BE0051BDAC35AF01
350E999AD135F559B38CBA53D9227E76A8E64788DAE0738B24F31D9120EF9889
4766306C2E2900AD92931F3D8F8B3AC8A918A475928709BF44CEE3FDAAFD7E39
F8A38C758DD320E1222AAFDA2B4F6BC9951178E86369F103B2EA77BC277853ED
03B7F9057791D8EE8818EC0ACF2F231AA94F0BB385C9BA609224FDA34B051A40
4124E73895971BE09EED52CEDD8345ECE4DB2DCABAE7E81A8779F0427F3E679C
CD899A3428288A1873ADE3320CD99285913F4E5623A52ABA7E2D776F3477B4FD
BADF632D9177C39C274A696856D4142656C05515920647BD7A2C23DC70BEE991
F31BF90E9B949A0D44DF8C8D0517B45D0D6283C384687D5126A4A793A8AEC037
242164D2660AC1C35DE6596711DDE77E238B2E043C635793EB8C24007391A3CE
84779B97ADFD44228E4C541B1DBC0B4547C9FA8701EBBA25CBC2535FEFA9FA00
BE8DC02AC1132FB74F4FDC7D6A49865E2994BE78DD2474383743E62959698A5C
415544A09019F2CA7FE8ACEC03860303BB0869DB2A9ABE15A3962BE69908A2B0
2A0CE8E6C5BCCF9032D494ED5E676CE525210AA10D23627D6828E28260F861CE
B034CBBC956EEB36023C67B57617443F4B34B1334FFBA48BD639EBA6B761FE68
3DF0409B38BA08074FD3C4748FDE6189FC947E7308519D2922C1C4AD90BF5527
B75CB8C4C611298C61F2C31E1E788170726176D0B3B763505439A8010922436D
B5C4B995217B21722BDA5135CEEA62A55F6540D49D37B1BCD585B7DD701C4271
5C2387159DCE2CE4C4EB0D128A8041FEAEABE62DE77A70CA2B3BF27C1AFDEB81
5EC6009F5CA482B7DCC200BCCF0F313DE5574CA4E1A747F5DE6A4CE1436104BF
6084E2FAB5E884EE359707375038D13142CA7B8FBE88C4AC8E09DA3AC596D32B
170483C8E81D4A02507B6A2C81A0FE673668F6968C2FD12A845A0A9F7F9A38B5
B5A212097E16E165C6B2C1A5794F8E912991C8F3905E93BC6937E30194ABE248
2F1142EEA7E4F8AF287E889C05060C821B34D634086522C3CFB29B2DBCE9D283
20C22F4E23BEA5CAA5F66E3DB2CF06BF8967136D3A8B178DC9F09BCE968DF021
7A0F2B7F4A8B9BB05CF08994F1211C71FB50F5E00EB34F86FAB514EE72BD1984
E15BFB0499CE94BF4867AF00FF04817D3B6503C388D148998167B6F299405626
BDBE0C3C2A7583808C457FB890C7762BD2E1C98FC3A87C2AEB1F8D5A8F81E18E
63BCE1BEF8CBCD70A0E502AD3F7626C1D4FA0793BB3C142872C076CA7E42EF75
FAF89C97040EFABFB729BE126E375E6B845DA394796856A05B0B07960FD43080
0CBA38259F86F44B8DEFFEDBBDB2A6AACB4A41F226DCC700CA90103CEED7498A
13363F46B38D939CDB4315D7688BD65FF806CF217BE360B67F13AFB088D8882D
F8578BFFAD5F581200F83A30E5812AD0F7EAFE0146DB948874FFAA3C38D2D54D
1AAB04474A76E9DFF7F34BA34FAC92C3636CC2EB54092137D19D5F75A90BCEE5
C4A62AC785A0067E0577801A0DAD2592EA216ED2661C803465D1C0602BC20939
510AC533D0FC1428CB7A38D62ED69C24ADFB9FCDFCE6234AE1DD1D7DB66F9930
30E05CD0B01CDDCFCCAF7BB7092353FED3AEA57A82DEC6BCA66C03ACDDF8FD3F
EB1D0132675F71D9C787B951CD1EEB7FD4B2D11BD00970E75B412D57B97AF58C
53F4D1B63F1401304C1C46DF906C1747932E4D61399F65159710E0F7CE3A1114
2C79ED7D66CBC377722ED352343C430EA61C89361CCDCC704F49FB9152EC4A91
F94CB0CF4942E53259234F73F75B4D963A8EFCD36E31843E8BF29F3DA79A1785
A1BFA0804ED49E805A3F7E0A71AF14FF93F6651EEFC5007E1272A6998D86AD78
973FFFD65E34F378EC8F9D421E024D162BE934817B2900DB3B0FD399531C8BFB
9CCBBA7547C2105C7CFCA2E55AFE0FBC7418081431C9ADCBB47C2AC0773CBB16
34497810BEF8AE75F5CFB93768D48D9376291A6A9B9DA5FCFE996F2ADEAE187E
B8E0430649799D1E55971E7C3D3771CAE27B4DD4E97CCC678F03B4065EA7719D
623DC1D422446E3D30BC7A2F53E4EC414FED8D1825CBBE13DB9D663BC0D3C0B1
578A7CC70AB2B3CD7EC85AB185C334F67ADAFFCBAB915944AF84F3D2CADDDD0B
32D42C8A5B50ABE3E548590B3B8E127AFB615A9DC8CCEEF3F3A2954FC9723A4A
0DEE678774FFE294F3F5EB97A78217C0D2021EA142925915B827DA091E7D5084
35BE23B1C9540D624F2913E6EA41D24B4977F8604C5A93F006DC66995FCDC4ED
1141BC6F5BC872FDBE52E71D3D92B7DCA5E60CF24041CC5991C1689965D124E8
44F7C555B3CE78C27CEB1974DBB63A385869396BF5D2B8CB02E43797489F398E
FCDBDF3C02C453342A8C809E3D0A7BC37D5F9B12431FCEC85524978E914A625D
247DF33E52A204D25B437B580D5FB6A46B1FC3868DDD4AD9A7FC1BD5B0862BAA
1A329A7DBCEDCA1D5A4E897C7F7647BB8AD36F87645D0F2E99BBBB9CFD279177
FFE580B20CE221332D4A35B2B819A930B648D123D8730D55990469A83AFD2ACB
C8F5B95CFDEC0270951B4BFB420EB07CCF411D75BD51B0990B48B8F4E9798410
20AD6D9FCD75E83D2A083754E1FA2128E97BEEB8BC879343FB462E4A74901E03
C4934C15525BE9920DC67D984B573D41DF877EB3FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 74 /J put
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
dup 122 /z put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
650616505E0FCD67CF5E89EDE5BF4076A2B61157BA3026222D87F25ABD7EEE6B
C063552F1E1DA55C6D0BE4CCA40B2166279BE26A494057184362EA5B25010B92
BD2B75AA25231695E03B804D1857C4DC377DD996A282AEDF8E58F906EB641B17
9BC5F8E8C853FECEA001C2EB6CF903C38A1ABA094BFFFD3DF4B07DA07CD877CD
81F5BCBE6D27F6BBA8F037E0D1A98F70AC1B2AD9BCC01FB61726E24A491ECCAF
88EE09BBD7CA442FD5B009ED5C6FB44AC315EE52F0DC915E5C16B65A57C4D901
B306AE75EB1CBD214F6DA15279353883B8E3DCDDD0657E9179FD2E27BC1CE545
7331B7DC09BE87F776AFBEC83D0DDCA760851AF5D54E00E4B01F2089C78AEDEA
3AD3DBCCEDE1824586C73ECCFC7EBCDE8B0D7CE99DEDC7ACDC88DE7DE274D5F4
679F6E56BA0A6144D7699E76FE0F3B6F7AA2BA31AA7BB5A18B3E2367CF44F883
1D1694A9E27F62A1A0860945A281C8082D9569160AA04522FBD6D0A632C79165
48C710B52CC247CE38B041B5D271233BDB60460A01EFCE87B4D417E8CC0D74CE
7C0FEEDB81C146A3E2F7F66CB8A08FE0BBF2D785C6E998EC2D68ECEF8D8F7158
A8F9536F33C4F39B0D6318C13CC53C0202ADF7925849BD821C5248562D5B0024
32C259353C93155F023F461AD322B4448CDF9522419450E2988D1C37F1A08C47
5C990A19601DE2786D657D5B0395D5CB1C7CDBD1C394EFD5553AA05D74FAD0BB
41AA1B7E43EF7F8F821B6F6F2DB14B1CEA1537749FF851553115D4CB551F4E43
24AF65AB584855A40BB4187449242B30FE9B07B10B06BBE106A8166A2278A7DC
FC0D2EF1EEC090718BFF892CA7156A23FC511AAF79CA37FD0F25F1A76134E35D
B4998ACB3B6915258372AD1D715202A5F45B127048B86E37C8F3275C80FB75FF
5355DEBC31183A1A22228ECF6BCABE61FCE6FA0FD74A89544825F7E919A6C371
6872B4BFBCD7C3D302CD4DE77DB74163440ECFD29C4296D3FC22931B3DC80610
AE29A3EA1F2D4073D60720A20AF90CE5521D776CA821A25704D64F4D6B09B7CA
59E8E7A1D9316EF92ACA4CA2FCDF8B15A9BD1E4B2DDC2763AB8CE529599DD861
085530F73028B71FF0A7FEB1AC9DD3BC11653AB78D2DD22E0AF45AAC54B26C44
8E5C7743F45FFCDCECC88946A3F4B2CC47802A2D6810D9B9EAA2E58482902D25
9CBDFD8F9E174061EAD82512ED20AB94E5B2DD6FDF518A708931A5DD1F5BBE40
48BE3E7207E109419E83FE224F90668C540C4C187D81BA58A8721746664B0B01
36AB0ACD6EC925D7656DBB093849CFF735BCDF50DD4FC7FF423B0438CC92F17D
274167308DCDDEDD9A983A3CCF65F280C3AF08E58927B8A4CEF029A8BC49C58C
A69A488BCC5B11B7DC0D7BB495AA034C6099F230C411C29B2F116D60317D6F85
31A174626CFFB84B0FB86BBFDF5E7558207B41198F8B79BEA4CD9681675BB910
32986E2172A2BDC2B84C631F4E1D12934FF9780F12760EF76C6E67DC17AC5B2B
9083F80772317F5243DABB35E9664CFDA559630ADAC2EEC5C8E9B14D73822EA6
746B23EF1335D34DFA1A8D62F0F54778589F68CF3D4140BF3818FE34B4BBCDCF
04D379342BD9773586A2C60739E3E7D667EC60EDD7F5236B0AF71C5B95975B3E
9F1820BB23D823E67A676017EDFCBE1A512D291D912B11292F29960446AEA663
D8EEFAD0806C69C8C63A1742EE2CEFFAB013D5BAF02057AE3A6418A470362AC9
D24D36E015F57FC9FDFBB977A3D975AD24B8D3C84CA4C2A6A57FE28CFAEA7B18
9B03B47A18947D6D8A3413D6EE85D9C150410BB6F2725D9B862AB2DAE4B9EED8
EC4F0F59A475B10CA7F0F52D37418CE9F2E6F0262B2005985D8348F9441ED719
912AC1A5E9EAC60B96F3F4698B1C3CDCF4A5DE15A757914893132B7D626A2B56
AEFED59D0D5792870751C4507BDE1C30A0CAAA6CE352DFF0BFFA1D72CD173117
F9BF1E6BD84A15796C18541A0D65FF7B825A6B1D7B183A78D224F6FBFB77C5EA
EB5B9F1B994C672E6EE516489101D898057680EB4CC62462FF0E92EF0E489656
18EFCEE4CB55418A4457EF6B37FAFFB9BAF699E631227306BE9BF56CCE4500B5
10C9DCC4F2E1DF974C1114359BE3136A6BD252D6DC4AB059878412526A4A1584
55AE7D6CFB31D19BF2FE9B680EAC56A395C59B872EF9C964E7427DA359D1B5F3
3E39D087BF4D215C03B7FFBB8A3692624966410AEB8AE3CC186E4D9F8C256E3C
1B885D72F2937C4D4FF2CF3FEFB8864413A4179C3C1262F0870495A1E00E9D47
AE7CB3422C7CFDD926957E589294E06BE4A6925ABD757C0A3FDC75915F61C223
066C23CB594F0D0DE40E793EA191AD6B6AEB7325D6264ACEC083D1B70560929D
8BA33631DB63D1B82E271A2A3EE175223F24F3D335A200A3AC7483971506761C
4939953416399722FF9BCE80059A58D867E442ABBDC3F1D9AF2F6ADB41A63301
C66B82BE4181C236AC31DC0A47A5FD61F9B43CFF76968D65BE4CC774413D31F1
BB0A2DDE8D22C2BA3A9E8241492E154B7A7905327F7F23020318DE5F98474465
C77614941C2C8677CCB3E7DFCA16BE4925E31BE4B57EFBC5C96C430B0ED3481B
64B7AFCD030A4B598BE6AF970FB9ABB787B75F7B2CC59D245449BAD5887FE643
3CCA61A9A0C09EA4437B4337AE9AE54D9616AE3075B9842EADB73EFA9DDE4CCC
228F5992957C9ABF9AE9B87499DDB01B7FA23C4E197C5812C057B411B23E2EE3
DCF3728E0391C76BF320A29884B8DB4D744868F2144F851430E43A884725472F
2D3BD6F28DF64A9776E817CCDB7EA74481C9752E2A2D58276E472F5E74083314
E70987BEA407ACD25E210BF26D80876075431B72D1D46753A3FD11C36784FD98
196C2596433A7964F27EF1C41CF7BBFEC129AAE1BD24E0156D5AFC744B56B7D5
D89D58D3C135EB50A559B5D788C761B6A55DF8B1F6B757FC1BE72F796063A1DB
ABF5AC744BCA4A4ED58807718C9D88AD28E078FB39AC2344A2E0959339BA7E5F
550F8354FA57A4A15E052F15C13B694F1FB3AEA29B0C13CC9D71DA60337C1B24
9EE3E7A615D555BEE44629F04FF90F2547C5ECBDC04D83495FF03FA0FB107FCC
9E56AC8A53DA2B284AABF573DA680593281033081541B7B16B2AED12F109AA90
46443C2A48E2CA26231C5F5696FF9172E55D21D9A99D5BE52016C0A64FCD65B8
BD06AB74BED3C546D8C22D59290FFE14CD280E78A0C7750D23003A196B024AFA
504E004247BD05773A1F0B9CE7977E237C4AFE1F613324AE10CDBB06E6F329BA
9A3A33B4F7F24AE8E6019B58E303143BE1EECA3CAA878E7F0D0D4DD90865801D
4AEA5BCB708A01EDDFC4C9749A0B06E3ED1F131F9AF6622A7D1D5998BAE82793
D7D15DDAE032579B4506374E4DCD2388F2648B9F17ED0115F225FFBD744D20C1
CC0EC537D7FBC4ED110188C271D75F442F2AD22FFBB1CE3CF72C85940C27E5CE
C0F369F6FF7CC02F060987808C2F55C93EBA15F405158A47010F8144966BD19A
AC88E515A506FA5E889B293D6320DE713CC711EC2977B4DE9860BE39B04C7B10
EC2A65FD152061D535A1F977D9CE07491A7CEE1046B5A586989118BFD7157DDE
8182860741D82083F86021A62A60EF9B4370B2763BD5C429430453AD622BBE40
BF0725D218FA4AB2C6880467082B50AECF22DF6B5F3F4D3F74C535E057EC0874
871BE604BC4341BD4F2C28E48742C3099DE8941DB0AA59CC4C198A9BF371CB78
BD25851EDBFC9DB04AE4D4EE2FAB597A4B3D742378B77ED2F8B812D315D4F8A1
8A2FE69FE6124536BF01C180ED59DA00524818BE42B89DE91F79705CA45D67E2
B5FD708F99F79051769FB242D7DC75CEE399B4602428099C32AA2D89E32D747D
75DF602BE229600E7E9FFB5DD706F180710E5F8717EF1E6887242C8C923E8FD8
9B0176F5070888C52270CC09D2DC954567CC82FDAE0638923D6A196DC6685F9B
6158A3F87B252D413187EBD366CF23E66642D95E7482B872A1F7F4C97A63DE6A
8E291AACFFB2528FDC522A68D6D2D7A0B91AFABFCC562DBC52D598613E20ABD1
8B7E1BC9D350DEDD5C2C9761828D0D113EA917C2DD86E186ED17910E8A0833F5
3A9FBBDCD29B30D213F2F1DDD75783DF44F9E09E48981D3378AE2E4E79EAA16C
8228077462CCAEDF5E5E911044FC644268D260491358F833E3F498E867119273
DDBA1C2B1358D3EC34CBD55BEF987D73955D02090E97905CBE60CAA581DE2710
C266BE4E5F6F340DC62732822E6847CD863D917115B173817A11EC430EB39BC3
787AC2A419B62AB244FF0D8BAE81C58FF94F71F66FABEB6175F85FE1BA78EE3D
A857F6F211DF6CE588E0B513F9C1C8074F5B6EA04B6C1E37B60CAD0901EFEEC9
80856C60D9E611FC67A302B86C3BD033D15B4D6CDD4F657021EBB800A07303F8
262AF97F9D538AD948705EBA14A9195E63DD0CCEB2D5E91977C450C49F4AD38D
1346417D1B1DE37A5147F8EF822F55A1803400583D9970C2A7908344CC958231
67CEDBFE850D67B24038720A4622E6A373F30DA31E58A542863A9A25E586BCFE
A8B07BCD42DDA0599D1F3B70F8B32FBA87487BBA6DBE4B5230F2535C1007A417
B7784D7FB75D2AD8A5F0274853F6CCB348EB63293F5F0C716FC7E5992F748E35
5255C3AF2712CA17532EF32005BFC13E8E61A60F463474F3B2050C00C2E51807
B34817C5CF1B58EFAC36F3F1EAAC05F25DDBBE662B48855D713F8E6FD8DA6384
EED714FF62E641A4632D5F07B6525204C8E9EB00A6BFBDBDE9F82A05FB047D7E
F0F7E0C6A6761EC9927B81E141F63DB4A794D56E41AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 60 /exclamdown put
dup 62 /questiondown put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636178FA377DB2DDE5FEF41
9E91F3BEBCFBD3B4EBB510A0DF7F4D19C6552BC98F10E25612B1396020D7836F
A3D3C865661DB276E428F09F048A916B4F07D8FD01AC1942A3CA342B0E531BF2
3E9A7AF265AA160510B81B7113D8A21A7B80B3643831C06298CE64490D1BD442
655AFB3E59D4BEA803F2C6887185FBECFB8364BC8C72DE13BF53666948ED6D06
A26DA57159B87DF039230D9FF4F1599A02E34AB75EC70EC145615A3EC1DE130A
E25CFAFBCC2745E480901393FE87AC239F56CC3D3CC3A173A7346B4A33C99BBA
62EE86C30D09AE6C761AEDE8AA97262EC0173560C8F5722743E02E194BAF973E
069B85CA9172B32A8719386ED3F9202CD274745301F062E5F9BB623801E55000
6ADF911D83972DE63FDBF9E75C20F0120BA535643C7509FC9AE8D7698A1CA8C5
B83D861F4A077BA4D04393E7A43B5481865C55DE7C661EB0C2858DB4C488B5B1
430E8275EB9377B15D57EAFDA5A585BB0E87DFD0B90AC11B7470452B543C8762
944C79E9BAF67DE0D7471175C9081B19F2BE62A07DF357113BCD97515C002AAD
8D266B882CFC5737DBA3CE2995BAE80DCD6CAFD1300F57CBA772557724FD78AF
555AB65B0C07BB7FE129E62A43FC71F9FBEA97B445C6F927A6800E1E0A10888A
425EB6E4E3E282A8F0D6A9A658BC17C09EA3CB718F554CCEF1543F3F9A68C98E
A2B040145F2EDE875B1DE4A3B9D64D9AFC52EB95590E4999A373A0AF2C563EC0
7027D8A3A34FEBC1F160C8C21DEEF86410F31E56CA9C7CDD1B47C1AE97E95FF9
D6AC6EEABBC256D3429287BDD34AC8DAD8B6D0BA59B1787C124CE94511447833
AA1E9B8ED51EAF8775ED45BCBC8CDB83575C489717795995B3D39065FE8C5988
9D4F685C65BFF16DED024D6F0F00ED5DF6F2D3C824E9AC7E5AE07C6D546AB360
1C5D6C4DF2048CE485C1619D899983A9EBCDDF1610B2DBC991AE71E7676E434A
29587F688CFD7BF09729673CFF4F47E5CA6F9C945126847769D6DFEC75725999
6B79C287A93D9EF0B99705BC96FD3B174C3FAF8004FD4B2D86CA89B74F5235AF
F70B1C05135EF24568AF8E45C302984E0B0AD73696FB46A0A6AB08BFBD040F92
B2BC18C95E0C28D4CDA4F4099E4216110AAF4EBA8839A2B59F4B167F65E07EB2
16D22A9A8820E59E3F9C9B2CC43FABA1BA4C17DB6B0EFF333AC3700D95324532
655E75D2765234631E78D7DA28D647F0925037AE057371F0E5E3B599B52B58BF
C92A578FF7243AF8EA52842A44E7E5DA7D0C57702FBDC80F27B7A1E56A6D26FF
55B13ED8D611AA2C186E5E7AC7157C8366974B52BF2EE9A915F535EAA0400089
B202FD5F63944646FE79F547558A5518E706CD02414C36AE9B57E3610FAE8B32
C54E502A80DB53A217C618E1BFE98CDCDF9DA6487991F5AE3E215EDBFAF5F63A
F954320FB9C049FB31B6B90FA78AB0F4DF84DAA6D062716D6ECA28A9B7DEB647
83155E406A5A2BCD52255A8EB6016FF2B58FC10027926B4C256E17EE434B12E4
A3738096C548A2EEF7395814F06AD0A56B959425476CAD02DB9FD906A7CBC94A
EA8DC7B21146D49A9717E30CE5ADE676709F811BD0E2A55903ABC07562C94DFA
A1FECFF2C5624C06EF3756E2F6D30EED73E595CC36787DFB242C36682B28D209
FAD1C7310067D7F21EDBC1C183D2C6502CF967CA6D91CE75116628CFC2B90FBA
981C9A7A6582137A5331B7F739632D9D15E5DCF3E5BC354C43E83F7A6F9D8BEE
726B436E186944DD7BD1ECECE7592D3610E263AB0642A33879CA6D9A58AA0A31
824029F6D82F9C4F3FC1F4944DFC1A43842A85E5A6F7B5326402F752B3B4A9BB
72F1CA8E368B0B9FC65578455BFD8B1C67CD0F9937A4EFDB1357C98352AF710F
BFBA8ADE216EFC3B90FE1C0CE005960F41DF2EDD24E858C82D703BDE8F306894
AA9A05C76EE63794DC0A60CBD31B5F031B58BF110BD1C197138D02570D72DC6C
EAF0663E205AF88F00685FCBC4B44D19482531BDCB929D785F12234915F1043D
1AD85DD0351DEDA85772C710A1A29329A5A812EC0FF02CD517FF64EE4EAF73F7
D5B9362C9331C7160852E59E8797831EDF64679320448F0C209A4431A73C3BD3
C3BFE5487DC23974BE3003AB68D337325C867BE2C7A98ED07A21F39B7E42F18F
983A8FD0BE64E2EF767C768D93819E1866357139B419EA160C3C5A72567090D7
27B45082B7FC9191D42E787A3E392596731EA6A4229B21B612B8B6328B8BB6BB
1775F4B2F370ABB4CB23CF9E31D349F3F4EF45AD2C6DA0EF79BA41CB554B4E43
473D9D0E4BD92D0C31544775AE8D562BD56B92DDEF8C3AA7A1F53FDE295AE871
9CBB373223E01F21C6C443AEF82EC44599C0E2160460BA1398D13A59705CE244
5C16D229FA4D5F3DE2E1AE8E318452CFD2DAF43830C7D59B4F8E007FCB314DED
9FF7FACF67D20F45DEBEC4392A0979A29C5C1C9FC75FB8B27300E8F818972A82
516C6F9445CEF2CEE63BD8CC2081DFB38351067493885BEC959953790B64A40F
A0C1A56BB1212852C120DA8F9648725AFA05349866C3978E99DF8FC509A74B77
96AB774A5EB11F8FA8F9737CC42B364B5B2D73738B3BBB4F33E372CCAC75CA2E
C673114E6408EA7D4ED81EFA741564F826DD129EE4EB7BDB983C397F04FE4B20
68C3DE4FF2BF381A9717D9AA54B1483CAC043C4DBF01A8B2FD3D308C4B162F18
A1768FFC510B7B1BE63296F27A05EED29A7AEE127E91235E33A41216ECC03553
D81D44F75EACF05E9669EBF25E1DD971E8A9801BB4447055505FF7E037A62B11
AB9AD644E55504D9DF64B4B9BFF5149AFEF051D60A9228CCD1452A7090872AAF
6F94D9D22914EFFD071E73861A973ED5ECAE7B27B22EE8629F01382FECC991CD
9585A49181CDC22BF1E64BD4EF05FCBD323FD58B4E02BBB5F595BB52C4A6B8DF
4800E207A7F9D4B9956F924DCE93FED1A44A9DBFA8B36326949864991812B2C5
419A25BCF466319FAEC8124134CFC97B2FB0091FDF7987D7AB5D5068BE05A352
037623D7F380469F675007152ECB27D9A84926F5BD98075B9C297CBE6AFA7555
3DB115FE5FB0F1B6B36DD3BD04A9768441AA49564C47BBDF4901A18CBED4EB74
54C82C72DC22D3B67F5E84CD807FFA0C096284BA3C0B1517AC9019B118AAF26E
795A647D6E6931A2A3E3101187BB9C3CC15110A628D24F47FB22BCF6BA0B40A4
3ED6CDBDC2613A747BCAD8300ECB2AE820F1139F8B513B4C340868BA627D975F
D7260B3A319BE045C532C209D606CD8AB3174F0B829040B572E9ABA6D77AE0EF
6E885B8D2EB14DA3E41B8B3C48529DB644E5D336B39A05A3E99D4789FBFD2663
721683159E6BB9FAD5412CB5DD693CDF64BB3F92CC6602CA7BA56AFFF08BE310
4326338885670A0F4E358E148B8BF65C8B52177122ED45AD11349C697B74B24A
50F2F853A14E2985CD2E935EAE0FFC3CE951F3A57D124B7E453B52B919A8E2D2
B5A1B02DABDE7BD7FAD82F25FA2F9102BB45D37C7DC3191A6A8A8F01FD217712
C02CACA94079C12C1A64E1EF098EFFF133659005616124B7D91DF5E0CB14AA02
1E491E9F7C79922DF687C64369ADDD8B8707B4641EBEEDEAA0324DB0CEB8D1DF
3F448F25E1E7CCEB029485E92D38F17A6BAA9C1C1AFCB9BAF598595FD7C68707
23D8965E6839F8E979E88B605BCDF578A0CF6A14715B0D7851BEFD79B66D57DA
B5E2DECA89B9878403C212BE8C2502372409B2E80E937A997232FE63EDAC6199
2913BD330527BDD55153210A5E81D3DC4C562CFC05243BDE6040CACAB2B946AA
5F6FFE19CB155310351AADA097A7988B378C142D8977EF3E2A1351933F1A087C
7CBE9AA9B4511AB2CF1732C184E9A708361A431041FE77D2D429418E24A216CC
2D6BAC50F4FED1B98185C261938E85452E61159C25555DCD41AB30A28F894820
8AF5759748C1E300113B570C82A886E451F6ECEA55E62F3B9A29B938993D2062
38DE4A851A4F43BE485C85D6D0805A2B72562358EA44B24E766E29CFD12D4792
4B45F8B096DE8BB798EA399632E08653599EC159FAE723BB46856E9D3262C0C2
D32E9188384D09FBA3D44B46B389B7FC20396C6AA75289D042D13BDABC35BEC0
065690DAC74546B1CD678D087FB27508B6692C267E46BEEC5CF27B874AA1BFBA
A68EE4EF1AA62428B423C87550ECABC7E3ADD91173347B87EFE83FB72AE459AF
FF030C58F9665B23DF1D08FE73A79FDE712847BFDE36E365205FBA5D35C4E7C5
5BA6FA86A49CEE668D17C98CBD148ED5F3ABCB1EEC7C190D558F8E6089263CA2
D7AC67C26972055E3D427818CB6DC998FD074462290C4D3CF86041711952CB04
8A8AE34CB0240879731B0E4BDEDD91EB77C96FD56A3D3FCD5BDFF7EEC36D62B3
080336890471227AFA1C4BB4C991F5DB9149CF6BE63E013FEBBC1D4D263F7761
0AA6011BDF14882AC3CAF64BBFDEDF836EC44B9A3BF423B6722DF51F13553720
2D857F4D4F9375A23CE5B997A3B6884B394CF0D144E4531A6B85E3C29A0E6E62
02720897DBC7561A98A52D2F4D2125924D759A0A75316462C6DDD9077C7F88E3
9F9C531B10B021DF57296B286A4FA6D8F0523857D89A4EB172F4212F7EAD6E7F
1E4C4A3646FF040ED75B0C770CD2A2B061A4007F020F0E20D2266A33A512640D
8ACC389979D6DD648EB11A2E59583FAE794B370A0F4A931049B34DF69E79661C
1CA56ED5132687CCD66064325E8CB5167DF4281C6B54DF03EE016147A4205B96
67F028763475731C0672BFD44BAE1481DFDCAAF87F4E3C43934C028EAF0D7145
6EADB4F2B6A30FA501BE1BC9449FFB6BF92B318BF9757E14A43B671AC76CC704
7DE5B33F81B53F561C4721B01C59F51F9A97E3F5432CD5E5EBA34132607C19EB
F177A4D88C941E30064903D895603EBEF4A9C7EA8B326785F586CA13229F189B
4DB163A76F4B43D492B1491662712EA83E0CE80D99359C5EA9537135DE9951DB
54A6847A57F5CF3BFD8AAAB6BE2667672E6390C55A953BB51BEB21436720D6B4
E9480CEAE154D8284B42588CCC7BB8ABF7332BECE0726E35DCDD2D5B27488283
9DC514FA9B8A40FE0D4C6BA8C7997313CD7B1B715497E13F9A536C943BE4CF09
A0E49EB2E438A501694C014E300C8449FCE6AB37C539703369EDA7E3E676272B
0824609EDAB22FA6B316BD6FC266214B0B651CC6AB66BD2C46A5528A3774F959
DBCB5974E221A0B31599F6B5941B960AE1E3EDB0E254993B6D45DEA8B2EF06EF
3859DD377B4389BF545C1FAC5C71680DDE1D7D633DFC15B49AB6B57ABF383A7E
7731242E1516535F42856A31953952726A2819B6B22B58BC098604D88130683D
05BA1AF6B23F2ACE2E5C4E718B51C2A9067DD35470EFB6C7246AAA8C6659D7D5
DAB04D353205DECD9D0F91ED37401FD6FF3FFF224AEA09D523189103D6E54F79
1ECAB56BFDE6927BA10AE770D08D446B7284A249AD2EBE03313377BAB97F7BD0
9B6004B67A132D13F1F0BA52564DEBBFC34BFB4BF6BDDB7CA7087DA7A4C07AD4
2BB261EE4FD82E7BF29B63878D722276E2739D02CCD2864AE613C29781D22C3A
A94C24B605273A7D4A7C03FE14C8E8B9FF119E401A00161472846BE70D58A750
A7E492265559A1BE322E78DCE26088AD9C4AC0BFE8EEFCFCFD294C1240E952F3
0D7784C00CBE24A8D321B03017087A67E001B88B64559B5A864D668EC5C4C2BB
771443B89DC7BE1F7FA47AF9131AE7CB5C4FF222A5DC0FC1000662D5A95A7512
8EA43AB4EC2ECDE4F5DBD7DC529150327D2F6CACCC1747DA2A53A49BD7514951
993581A5F8E9B3F7B12AF01945F5A9C214EC5744429B2A4398443FECED01003C
A4B26DAF0E87DB2E119D84B77915926B1D3F2618B2F20EE6EB668E1AC7AA7AC6
1263DD56E654EF3157C3A874B1088D2F47E9803F5047FA031CB7A204C729478A
508AC8005A89725DA70F4AA706BA8C258BAE764F778764500A632FB86159CADC
DBA180F2337F0CEA14047114BCA1C9579820453F24513A0F4DCAFCAA9502049B
E4FD6F5447B0A92FC343A0610A56864B3E4EF636F2E4A8B830692BFAF723F2B1
EF6B951DFEF80E06AD1130042C99402FE7C969AC64E23523E6EE1D6FE1B18CBA
DDCD89F6763220E46F764E16CC73C5F2CA763A8CEF09799D69F06251B5F131E1
B1D4F06805655FE9580828AB8DE9723623427608435D7EE387A2E30D1A886702
7BF1523A0836D92FFE70E2A178072CB934DDC1A1E8E5D6B7E7FF2591634817E4
1D6721EF89A5159061CC0D59221922FD4C29B2F6C1E80C095484236116B30540
F73E682EEE6A849CB1F2E1E98B678ED1B34D320302FF61FFA5E5A4843C41BB59
0B0DD7F22E6C9D630CDB59ABC4C3C5CE877992F04C02A44B330C38E3D523C631
8122EBECF5043DFFEE1F515058256173FE1B868C2529CE5E6198C3A8088EE4EF
10B4A10D8C960549CD1C7BD6E9576C3A1F7D14951FDD41F025566C21BDE9EFF7
8FCF3758282444F3896527F7F252C291211FA96E6EE4F330823044E19B60D109
7AA17493421B4AA6725D88F6E6F682DBBB0412E93C23CFC703674AE3DAFC6313
0EDB1DB8F25F50A8132D40DB535D379EDD7462D287216DA40A259518E721D507
1FC8596E175A7E363C7CDCD5AF0074AD30AF6B3B70BCB2DA1B7AD139133CF247
CD561927C9AA278CF7A30345DB8A00F03721426254FC98A9CC90277A159107EB
830BA806F3B1FF2D8D48EFC7CA595BD806B9F3A7FCB85203B434B83E15BA08AC
29EB7D4245C3F594CD953527F7CA485D9C547BA1152DF8A86AC3FCED69F6CA18
B9F9C2A8928150B9AE3A2E917019A135CA559213D900FDA60A1814E5BA93812C
6EB455E3E9B3B4FBD60F892F862B0EDCF89914BB1EB48DC373FF255E1987DD90
C08747858DD3AF7E1C746923A280B9B498EC30F2234029D18DCAF1E60577502A
4F46E7EBA98DB16AB65946261345881FF2A674658582FF071E16295BCF1F5EB1
6BE2DB5BBA2BA51D61535D3B6D8FE2BFC838505A00A390F093614119606AD588
A579DB14B51D759CCCF2BEE1C6A2C5B7E808F16C3AB4D36DA7B23C9B3197DF93
CBC3E2A5AC2EC0473284B1E1F43ECD66E8BAF4AC397CEFDB5CE456053DBC4C0A
6AA0223B967BF3A3492936AA3E662B93CDE7D0E59707570674CFFF1F25D825C3
28BE8D863ADF42DC4E4F89AF45A588EB80A18D9F15FC62727B048052FEE360BD
0BF16CCDCEE32BE60FA8F0D8AA72E57BCC6348BC692434A688F9AD31D75C7246
A17E34128E40866AB21C74E79E364381656C0785C7B542BD0C3084D53B3D53B1
9CDA26C581C9B0AFC44285315544058FB0C30CB7DA15B32204429C5991C5DCB4
5B8F8C51E9EADCE27C8EC97C3BFD6422BB7E9A04C6BD5803E26BA846013F6B50
CD9A336E7CD4E5C40C77F6B6403746B0E4ADB1D0125EE1F39EB6273A9FADACF6
D622AB5988ADBC1D2B6F715D3E59BAC3589A3C637BF3C3E6A8110C9EDE02BEE2
ABF21920B863A434542C08D8649B3CCBF2294234EEE70256EF771D195C0244F0
F8054AFCE3E05E405997DEDED90E7438FE103DD5FE3CA638E1BBB974C844E347
F57587AD7273188F41B09DDFB0CC295C940D6E612EB1844FCD7AB4F66933A0AC
E7DBC707BCBA9E587718C732C9D0B20BBFE189136871B559417C01CB27EA4C46
6E401010C32764A7EFEBD36C2D5D0216EAE0488A1E9CAB178F5D395BAAA110D1
4E9CA9E6F19B7DBCE9F5ACB9C69AF2FBCA6B4B29D230EE6B93E31B79549D9AAE
8E35C5CCB5625A7EF2F7D204317E0B6A4DC669553240D2128B1DA45C75AA378C
316F340A3A8E56E3B144110D28DEE13396FF2D7B8B9744C6F7017C59BDC0C7DF
96D9D44F046E637D95C183F9567BC7A713510DA837833540E6538932B7D307AC
7B7B0B069364A9F919D4571C42CB8CEC073F15664D93DC6B85833511BECB9EFB
2A1FDA23A2001B51A8420743A2B2207DAA989A41059A1151876F0B6FD9B644F7
CDF5A72F0D94EF142432597AD5DE55B5A193D5E5184D706B729330DA6BDC07C8
33EF36EEE5BF8072468575F38E4C1B8B4403D2A1B8787D15BCF375C65F1EDC32
B4B18EE98D699F44E34B9E921F90ABEC96D2D7830CDF01F2E8D9703724E94919
CB8A305724986F816C692587F7EFBD7518ED5FE422DC7D8CCC223D112B3CB10D
C0392E67ACD2F48A779430F56415BA43D8CAC7456486BDF4910BD09C16FA501D
B13B60CC56DB0B18F0AB4B3A27C70C7DFDC0C03D968FE3C29505A5AD5206E21D
61FB11542FD7D3F813398C386930B799CACD95BF668E4E00A3A00789773E669D
D4174F836CCD063BF9EDDDFDCD73D3C417631417E7CEBCF3C47CDFE5FE9822DD
2D5B6BB4ADB16AD064A0142850DF7497F3AF66AEF2EECE51686388C8B68CA9CF
417C0D2AA48DA4DE01B0C70C811877EF628AF3CD697115972D7B655B24EDD9B4
B9201C8786CB8C490A0B2A1D2F3D895D1D3407BC42CD2E9256EC61A4EC1FC294
E69DC65238F10C54B501A997ED0874CAEB6650C7B482E534ABE0C37DCC753BC4
3D79A3D97ED61DC90A738C16CEECCF16BC27AC098F766C35F8DFA02B5EE68FDA
87B3F713B81DF898792337314C24630BD22ED67D7A570CFEF1BA90AB46A07F46
A969C0B61583E815D2724DD591B0E6751ED3421D51FCC54446FCE1486D7BEF6A
133E5B72675543377264F852B6497AC535BCDA0C3686BBC92640CD68A7466C5F
4E570A3CF6833ED36138663CEA557F01906C2E0AEAC649ABD961E4641904C4B8
98090980EBA728B953294450A639C21703E228FD0B0E518CDED5667F291A2F7C
4D31F1649AF5297446FB5C09B9CECACAD757ADC90096ED204A68E553FECAAFAB
B83E739B7C2097D6383B1A1D5BB043D84A26B5E5C136DE14D3E028F9CF8F118F
90B6E3D7AFD3235B46DBE6BE94B4276F4E54E169EBCA3B0DAE69ECB508168D51
91BB3EBBD675E024C9CC2AAA7580C4B958E66A84D88A431F4C95313DFFAFBE4F
4B11967547C46ABBF4EE119BADF8C6A9A60A1D057528C6F73E2620F4FCC89A36
2DD1E93A0F67F58B65B52886B9C879A263C11B558D5CA95D476D89B2530951E7
981AE1959F49271D3BFE24CD819D139C75F325F2035F8C066EE8B44F7FDFE502
473B67E254EF5DDAA511A6BFB7F80068E941E28DF7F2626132FD986594728C4E
906D94526FBC495736831C1A507F2F0E783EEE1484EDE9A05CA8310D80EB4646
0658CB8B3F15C476ED7E08373F79D924B20F3CB1A6FCBD3BB1B48CBB1D38BE12
6310AFDD2B96F13666C551B06CD5BBCAE46261DDC8C3334DB00D60ACA0141C65
E80349D479DD00CF991A720D414F32214E06CE9C50AB55A22262AF3E2E216C1C
851AE7F2B93DCBF53EAA1C93A483DB07C6AA5B0C84196B92360367C27A2E29DB
38991EF2FE3A1A932CF6C9380F51DE69AE9E97CCE6E89A34964AA78520D664FB
37CD121B06DE544E0AC7C51B293E9ED3CE042D0BC193EC6F2552F78216B309FE
9937F6BB56B05268D2706D68138AD00C35D465143BF0628A160A5EDB3B9FC76E
D0F1CEAF8AF6EEF4672911B1BC472DC68D929A3A1994D4FE7EFB0800C8F41FEF
982239BA3FA08077F0EC4FEF5EC1CA3ACF51BAB01D3F2E05DAAAD708D97F5582
6E27CBCE2A2FED8EF34D5124C9A28BB1D2D35F915A3E284BE8AE2886FF711A32
76BCDB566ABF5AD264046D561249526285D5C673966FFE3CA741EF8B4479C6A3
33B9934B916606313705A7F3092672FB8BB2C3022C5D8120791C0FF5BBD4E306
851EB75EA4A5D03FA64BDFF0466559DAC1463FD96B75EB2B7709E8DED001BDB4
2D8C0FB2FDC20D471221078DC3DA8BC991AF9BF3699488D1AC87AAE2FAD737D8
1557C310D72612E0846F8CB26A6F6E0828A6918F64CCA2B5345993013D9F09EE
AF181EB2E790897D1C76AB03E1B5617D730D0FFAAFE80C6D0476AEBCEFD497B7
70DF5C0EF53558D703AD09BC9A78AD1EEF5AB2C159095E40805766C271E7509C
8157B0CC260DB7AD470D55DD69366058B5FB6D41CFBD07B676135B482E877022
EC4E196313566BE9EEB9671A44C8F5DEA1EF5F6F2BC2D7C2DAD35A597DDF630D
F0235741E4838CEA2004226EFD215E11C6DD66CE7DFEF7EC4DDA23A34A14ADDE
9B16AFEB04863D772A7A518295219072A8AF1792317A87A92099299EA08201C4
7BF065F454D6B205FBE84DEA930FA0EA1ECC7468B9E031E6B578802F314CFCFE
35AB36F6CDD7576608D1C68430023F12FBC21F98D07FA0EA857BCC47726C46BC
7C61E292A0829FA743C7DD84D7F85CB8A91A7D95B4E8284AF2C33DE8BE03D9AC
ADAE9355B4DB54E6FA4FE6A3FE81E561E4E20D2FE283A51CB05B656492D7017E
A223561160EF6B739A1339D0CD37BBE44656C2670023FD77541FD4D1B23B30C6
2EF3CEA16F560FD507A00D7590760909CE7C546DB759645C6091A4386DC020FB
317EE7FA81D2E61A7AE9E05B04A17CD389F0A966E85A4444846D4C55C930CC30
6D72CD6C26741DC89E661DAD1A17A892D03E525ED302B907C089844F1DB93EEE
D7CC882B7D14B659FE5A3FD58835F370878517F713FF7010F4FA219589E3906C
E777C226EA7F2E68F5CCEF739638C9A1C0EE7D60B42B6399854F46C5B2D30D07
EF43BF2175F34E445D59533B0E4F7E7685EB558E3FE9BBF1F54357CA96F1DCAE
1E7F05E7E235EDF66411E5C58F596DB84EB056854F2072D083230122799F7D67
1CA4DDD8FFFBB70006FF543F6E0259271254314DF2FF4DE3B9FD81D123F23216
0EF1F971EE44B95CF3305DA255BDE0BA68BF20098D1AD1FD7A10822501389DA5
CED485D095CAC86297CD31443416D94729F2527A0F6946C9D30EA52807DC5877
C520222CBB106DEC626C634128E46E1E83F8719F7E45ED8A8C3050446BB0D9AE
AE7827D2AF2B87B58B3A70A78718A6E3F7BF092B1072A62A32BF2A7B279BFFDF
B4DB97144ED1319ECC3E0C5FA58AE921C4643139ED0969F6EA3E6B838429C0D3
8E3137077752868FEF3CE8F417BE2B836CBCE20F411CDF906CD963B4E6A136BB
E16F70D10340FF0BB701DE3037E7030F14EDF9C2700F4E6F5BB30EC7DA46A9C1
909FF810872B19F0F7BFF1926E6F90B7AFC06AB8F09A8CA51532401B1272643C
EEB3664137E929D7F6002E77FA7719C5076587A8DE7EED17153262EAE28115F6
DEA52D068D46590789092C4CE14086FBCCFA35CD03FEF0909944CD3B0A9CEC48
2F648E50FF90FAA830FE50648E18AAF6F2E25383E48716A17B94FE632C83383F
E495864032DF47176307C1BD2331B8F665F39D2EB40F0D8EDE7E6F2EBC8F7344
61A8C3E9B47CDAE60045AFA59AEFEEEF6F53D0E7DE61742D5CABB341C91EE1B8
D7DCEC053C3DF244751083A699479A0C42A532ECC19E3FB6FFDDCE7C573ED0E8
ACFFD37EDFB3A68A3607D4518375DF652F3683DC2EAE1DC08E4B7F8E17458ACE
DE57B8852FCD8995A29BFB6A73083AC5F286B39BC5D5B3B8843C87DB99A156C1
13BEB0ACB6EF539C6A27276C5F8BECE3310CC25812734C5B08BA02FD1674F353
0ECBFB04CB6EA02BD0E9100F02B8A08C1CECB65323F8B3854830FE4980268410
F0177B17314570C6D630100451662CAEB04E15160F89A105F636808FC02249C7
11269CAD2D18DF82C4EDA1D6FDBDDCB790A026EB8B882FDE8429F8A112C735B6
C11E6973E8E781244AE70DFC0D2488012B780431799FD9A7E13CE00122341368
AA2EFFE54FD7EFB01C043C9279F0394743B8720E4CBC6787109B35A6A0101731
0812C6B37DBEF4A9A67155A45EE59F8BBA7203C8C8D685AA24EE4A3CAF8FB337
6519E379EE587B087364F3C4B5482D97AEEC639811BD899C2AB3E223FA7AB201
6001ABE95D794122AD77D831F5681DAB3EFA812F4CC45D726EC8189EA16DAD79
04126F5365517CB3E962EDB76ED4321322598CB46ED953757A123787F2CAC900
7F764F8D7ADEDB450EF6ACA72D0728DB731C066FDE05EE684AF0D4CE75B11833
AC6EBE2010FEC66F2747FCD815D335CE14C546E915890F3362A2016165110F77
70FD5A44945B04A26FCCB1FF5BC270CD83A848EB6759B2D1439B1143F7512FCD
F374AE8881C6312B617E9F9B783648F7D60761C2073A71CC72BF28FEBA375591
7182D7C5A4846D6ED53DA2762436E7C109EA036F2BAAD834BBD5A3BB711DCFBA
91FA2BD8EAB7B815A215F374EAB06ABC4A56C0C02C5537CE42DDA8F3568C87BA
86208B55075B08557848E48B1A46372F9D14FBACCB44CD72887F9B1B45A8CDA9
DEE940524B2C1C47943860C912C65A168F0511651BC0370D93451909B3FB157C
5312A6AABC94E6AAE29F87CEBEEF22718825B8B20CFE3709678BA5EFBDF3F568
57E900988C438879FDB8A49C90F3510B9A8A1E242424CCD295DE3F927A64BACB
840837C5DACE2C67A8F74460750466C4D1E3A5E6EE43DEFC51CE3DDADC282561
4C5B7CFB201F29096072D5165CA6127D092F9D69A727B40659887DF348841C21
5BA72176FE7E185F0587394A87293586175AF8EFE8818EA3A9D4B71EB052221A
FB655D7453AC4687E04F404D7E1C4773EC03ED807E35C6014B285A24D3D2D35B
DF9585FD5848B81B75D79E2ECE4C12E27C19A5539478D8E5DFC565AE1F83524D
A09C1A5C9B462D80F97A03AA806190B2D2E52AFC3E6D57C56FCDB58224925928
56A9A4460611D3AF1A87A216690C85E7AE985610532EFC131629FDC8E50ACEF9
AEF4BFB522D38A12A8013B9EB1E909FE2F8C4224D0502A27C9721270EB7CBFD6
DCE5BF3E7AFA7838F7A0C5D6533449A7FED790B945E63BDE4E631FD5F45C792C
51CBCE98D19D8AE1138C2BBF076DABE658A7472842626C8C474D33BA14B5D93B
26E24E87770E062FEF623B8CA5D22BB08FDA0D9D6001F01BAF57EB1977237F41
819F16FBC67C3F0FB2D82BA47EEB8F25625DBDEA34FA9B73A5F91D14D5A2AC38
95CE093CF0814856D588D5D8387B0B4AD1C6FD441C80DB3F122D26EDE75E9BBF
199C305BF9A9D0C89D0C3D4F439114350E76587E574D6A6FB8B8D146DFA4ADBD
8854B2C4B94956969CBA5C11CA1366D00D2A5F8D3CB2AA098813DCC1C9C791B4
D43C348CC9CD1857C60E2866C0E9679F9F33DFAAF5CDD958F698222E810C5845
65A1919F44F4C35F5CCEB0299AEDF41FC6FF7815CA63BA354E5CA6ADAAE09426
DD85C9BD2BA4C4ABA60030A0AA5FA4B6540D3DC14908D9567D90283073127324
5BFDDF872E57A4E1D3C771107A014AEB140332514D1AAE74DEC81C50BAF89793
22F4F90F00C311871B182C7E3F8D2E002331E69511190FA55BA8FA15281F4556
48A491E9E7D46BFC4DFB17E3BEEF78C94502B527BD270587D23CE639FC96A981
9A7B4A3D789319BCA903817326911BE23068340C23E85000EBFD019794B398E8
57C5BD8C9266F75BA48FDC28ED6037C9A85945E37C5873D4DA4DA72244D14DB4
D05FC328C06D249220D88DF5FFB028B7EE1FB734A9338EEE3D04426CC8706F93
3AA256E98F8122AA93587B0B36594888842DE6E690FC069317A5BB8691B04BA5
4B4E68D2C4312A479169E6BBB0E0D1BD2D36B8DBF610666A7B55A20ABB52F02A
9104EB930CA478AED625F052CA85F6606BCBAD6AAFDA272F9BF8090647468BAC
9043C2A22A2A225971126D97C3482510E6D2DB766F446B078551F30D2A861F73
82E9A8BC978C10046CEF236DDE82F6D372F9D9D62F10AD35955795B8DBEE0845
54D32D4B59948E4FBA4AA0A69B38A4637F2ED9E68E420D44D2A48E1704BE68BC
7EC97BB34293864BB0A129B0DA1F2A1813D1A18A997AE5A0BA7F266B0CBE5C0D
47DF1F37155082532CB277BA4C4066188CFB508ABEA5F8143608D1DF7A5DE51E
E9E332322D5BA9FE920339D521C991E0AD8BD851FE34775106D5B242D8A9B973
4DA820EF3AE14EA80F15C0354E884846954AD06E75DE0E98616986FA74FA8B79
C84FA9E5D6BB05DB580C46930B7C54DC5FB0CC70C5CFAE51B2BC6A1DDF26584F
2FDA84935566857C5E15631A4823A1B8940E8A91C4E5236F82E80954A50DACF5
521CFFF1F3E91431779595B86912D750589815810579576AA36261F6E7763244
2C4516C14E2DF52A89AC79B352424CA1F0CFCAF2D406C92473AD00D4C644C720
0674EC43CC6406314444269951ABECD2627610FD469844E4C1F31832AC2934A9
EFBEA86993BBDFAEC5289C1ADE1BCFC686F364D117A1E1D8C5A23470BA1338C0
03F59BB59CFE8B151E4031DF81EEB362CDBE05ABFD9B9CC1922F27E74C509B93
0C775515DCDE9B2810FAB7A3DBB3B503EA4BF82B903519119220EF9478FDC1FB
BE2BDDD48454E76F5A8BFD935AD1DE45B6D65204C19AD64D6346DA9B16876237
A2D578667CEB8BB2B0BA3516EF6FC6EF8BC6BB9B484AAEBEFB705D5172E6A5D4
720C75D6A56BD87F676B1FDAAEA13E8AA09F30585DDD4EEF101403E4FF51E366
22AE9207521D52592B64C27BDD0FCE622593031ADDA32CE5CC22386968962ECA
8B90A3D5237B33E8A9C301D0BCEEA73D23B958FDEDBB39AC9BB2605AB2246713
BE74E7751B6A9F4F024EC81674DE5C2162FDD1DB32A7A2E84EAB49F7D86FE71F
9B9D6624965E36239B800CEBC447BF7926D25D96AEE720728FF625E701CDE7C0
2E244338430363508726A7E4C062CBB20C87C45464D17EDFF5A6E858C98043C1
D3F0D7ED2E463967FC0EA68048AD3726DC957326332D020176CCA1C5BE4FC9B8
274F99BF7AB5CD09965D477AA1344F6685335DF3F9B7AAE09587423E8711AC8C
00F3F71E6AE91C4B2ACAF24A9ABB8CE53B623A5F35806F888A9E1BF98802E68D
F1D02DFF9706F30F5A1C3035C511F03931D15E9770CB4603EAC2319761D6DB66
0E6A46C5C22EA5D305D656E541FC57D2C9758F3731B675699E5694F86757EEF3
0125BED122F57D07A56F63DF06BCB396EE3E956A6A75AF1DDC076C0F8CDA0F5D
89CAAF68C601566C4E8BF289C8DEBBA7AFB7644724B81C114F9E39FCE54C07FA
C94AA44A471A39AB050D45897A0607949D2275246CD6C05B9E99CAC431E01365
A7D95B59E4215899FFAE97CF95CBC9564AD0BE6194FD7D37ED8964BBAF4DA492
6FF86A869BD1E51ED37506CDC604EB40F2ECC7253A08E5B9A06AD0530DB4500A
0B72C5C48B239DA223D8CCDA412BFA412DA99310881DA0CD41FD46E3E827123A
A1D4B34BCA4F64C5F041CB34116ACD126F28FC1B1B50313F0FBB33A2E8758633
72398570626D55D64DDEB08C706FCCC0A09538F9A2120B5226DA483ACEDAF153
742EB5363182C3F8A38334D3EACD7719326F1DD11F82DD5FB2FDA861D73E81E6
AC1C7EA955B532C85F32EEFAF5B30EAB8E320EEEC901D7DF115F8C5FC7E703C4
6BC7E863D44ADF189BCC47D4031806C37DD16518A8860ED40E21E726EA75170B
427FA18423F11F2546AC7615BCA9F12DA1AE66FCE541A550F6D95D956E9CC6B0
7E870A94330328AD2AF77419D3CA3391CC68D75FCD13919F2A58B7CA994EC17B
0F361738BCF7B343F323C52E32121B55C8F382A94CC66551137F7A1FCE94D2F8
3CD2CF2E7393ED8E48CA56BF20DFC6FD1246AE253FF5CCB77CEE26BF5344AD6A
ABA4613A7063A3AE610FED4DEDA7C88B96E4608B21214C3953B096E603A3C17E
55E488F0F92900347C53E5716273E0B224F25BC6F91D99F7D8F7707FBD607D7F
B7A056E524FD7E56D9E22F1C85FB021FE57BF0C03990D77396D3FA049F17679A
BA83829267D67DFBD82423A9E08DE58CD073295E5C7FA7029C0993302BC0F5CB
839EA7126AF27770BBCBA0DA72B2346760C11B92816B82F589D1226FA7A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CEB0F7F496AD
7A919E031AC74FE7BEBA9DAFC46254DE60784DF1D94A38291CD3A3C40D42983C
C4B3DB3E68AA0D416F09F228BFC42E1B20AC89DB7E913E866D5EEB0AA34A35EC
79D3ADB6E26D9114D507252085BBB8CE9F90383D61F396FF96162350D4A20302
B9316E6F87AACE47E2669BC0FEBAB95BBDB21CA8C5B0E8B4913B6FFCD0FA8CF6
D4027524775DAD9B1E302E7F156A37518C89A6E326158DC778BEA985828FD177
643CB53BBECD949873A3261D450EDDE286EC6DFB7B4FAFFC0BF0235EE3AD8629
2130289F8BD7DBB939850654AE2063ADF45BADCAF261221181176C4E8C7343D7
64FAF776D574EF28CE5F8D0C6FAE2EFB40363F64CD2AB5F31AC1AFE5E4607937
7432C185342894F00D3C24D65E7B2C33363B03C00208AA2E0D566EB778120276
97446E907E18D580F26B79757E89916B0CF1BBC3A0B39ECE47167E3FD68A9F5B
A2F205E371A208EE5C113854508D91FFF390AF6D946F8AE6688D5B063EF2ED03
629128D6D34F90FA5B09E8CD66D7F926236D3C839501965942DCDAD91A52DDD3
0FDA4E188B0A3ECCC89A3CF375F25E89755A3F74E4ED8F5766FA3DBAAB4C49C4
BB105B22D4CB2440A6AFABAF329CE01BF69D0F5FFDB596BD641D3C64F0BB4178
29009DF506D9C1616F81479D96F5922D27BDD8AB496E78D1595C40F1DFF3F27B
6E77B66DFEC1D8E2ABF4C2D506921D89A55C53CF1299E62363BA9A2C114F8E5B
34DC67E486057837090E394A913B1F6255EF9DB9AB61A29D27AD45EA30BE97F2
9439CA845B86ECE49BFA031F30B3D01E38D8291F35A828B9071CEE7BD739AE74
F3892F4AF52A1E996336EE32CDF69F7A2A38A719524E9627F81948BC567881D8
8D39E24D8444F9DD5AAF36A8B9AB7011B5FF2D080987BB0F35A5F23084C919CD
EBED7B2B2CEB21664882BB565D2D216CAAE7DAA7207D9F2A7D580BA50144FB5B
234D72678F5778886CB4073DBC53C884ABE57C4220CF030C94AB4ED54E94A9FE
F2EC104ABED922120612C2FDBC63BD7FE3AA25214266F0D37018C1F1B4BD4B15
367BD9EE6C97708580979F84987929EAD1B878E868655733BEA063B46A33BDF1
408AF4FA5ED0D34345BA18DFDCBC639FA224E7C3F43AB1CA60334C3D063EAD4B
284A958AB33437C62FCDE6FF2E7B2060B6A8185F1CC82B01CB99B120D1C37D13
3C8EDD72558E98E8BC51771E5CE22B05BCB4C49AD316E11FDC54E1CA96ECBE4E
D7A7A1833B7A4CCBEA74DE0E219066408B048DAE2887F0D9B53C9C84FFF43A37
2721A73CBC66D2499416BBF90BAE8389550A4F7DC65834B0DF0431667D34941D
CDE922626C07339A572214CE6047E28FD11AB65B815C9F1DCDFABA559DEF5981
6FCF5214DBBDCFA622216574AAD8F2663EEE6359A2F0110CF3F79C4CA3F3CF0B
77458DD99512D2D5DEFBA6D5738A3248CD5757447D6193572A5A26776F8B2D07
C8973E56E3A0231587A663674A57B336B445032809A34E2D579A6921581ECD33
5BE11ACB764B27EEC62800E6D5CACCA2F95CB7D7CD7884241ABB0E66A4DB836C
EC4A80B2F6B69AA70999C14A1E1C065A35B04A7F3E037CC17780C90841A542E7
5E8CAE89E45D2D7339499FBCB4037A84AB58A66D425441BCED2D42F6BB45A744
8C04269DE03C0C9C23FA35D15FAD3DE446679B1FE2775DE457B69FC3F2E89795
D5E71ADB98EE1789066FD2CCE1222EB625FF8967B3F614813D864E145C799CE8
B5F49B85ECE6E55FD83B28D1FDAD58EC045FE30435296E93F832BE678841F51F
1A7B1714BF04BED63F2C5F7C8B033F781031AFD6F67D349656484C42CE3B8253
D56BB76494C87C4396A427931474D073135C8B1AC58064424C9321E4D17D6A54
8A2A86E9AAAF9D7608037C4D49AED8C4F2710DDB11096EDF94D86A2C07B45FD3
F6F21EC92898E77EB389512E45E5F84B58312C70792F0107B6923D4D6CC6988A
96CDC2B6AAB2A13755C83E1B9F8D3545ABAD694743682AEAA5C6159B18BE469F
7C6CB806A6EA15D4B2D7806D7047FCF3D811AF6A45F47EB50B475F58F0BE8DA7
68C4646B4F370DF3DF39AFFB8537FDC4D8ADB9127FF78F9CAAAC05D25D7DF2C3
0520A34C994FC4E5EB77E3CBA7DEE9FC3ECB1016ED92A33E2D4AD4A49C97DA18
3DB071668F1A286B7C9E0385EBEEA9251820A37D23DDBD60EE44AF668788340D
487E55E2911A607B69FE8090F9B605ECA847892C0538A592BFD913F5EC810FCD
B140F41BDA01D18B4F4C7FD76D58E95B7843C4C82A58389D60D9B091C9E0B892
B81F32AB94F8E2559B357A27646A4E15BA4EC1E0A8B02F62EFF17F267E8B490D
CEFCA841641D39CE006B5A1730BEE0308277E381E0756BBE652058F450780707
6FE5721A69090C441A917E07026779F3F4CC1AB27B11148EBF5D5AA0E476DCFA
20821E261F8707DE6DB643A6D72423A106D968D3CA7639CDD77DA2A810723190
13A0E1D0CD7F5CB0C7E0A1C8241669FC7966F2833113FF72CC847858F69F3C12
1E2D03AD658A3FF7CF8CC6CE61BA68DE0E53E63B09FADC5BCDAE94BA37993B76
053BA1BF8D44182D429B963D840C297156475F87AF57D566D38AED93ABDD71F1
54586E994426E32C816DB1F69BBFACF1BF276B38D4DCD8D86349C6F6EC1D5853
2CD18890DE6AE7A8B9AF6A50B68C2EB4B62D68633BE361896C00AC7703BC006A
9859EA50B616E71A6B3D4058834656EE3BA565A12CA622B6F41964425E75901A
09BBA51E1D032A8FC73C4768557F6E6CC2457041C986CF44DB14C4E57F99A75C
ABA6F2D77F3B63094EE5B18E55DF0E4B8A240CDA958083A21B55F82A6293A3CF
E237E0495F3EA0AED8A91207F10080F37C796A32997046DD7290DA48AE1D5918
FAEA5BD1A89BF99F5002AE125E8618CAD69F41238649A404EFF28841D0702B35
356570BD61B7468884CE8B574D228AD5FD55FAAC53FC8684C48BC1E7C3B64A5E
9FE5FEC9B74245CB0F3D0F226886F3427C843E69FD194520A30C6022876DFF9C
DC8DD94BA455FFB222273628D47070ED2E96F3EE061A206DAD0C24A34EE279F3
6A009FAD033CB6DDD0F8071D96BE76EFA0A77AE69AA5EA1E2099F3612AC78919
FCEBEB7A8098B231B0C17DC12245FEEC06747D1DAD206D8BB6353760FA69519C
F216A0F9FEA5F77D9F2AC71C41DCCF038623FC40BFD8E04256212BB967E7CEDF
DB16C730F61F7F087D1F29EAAE5D10F3D0FA1ABED28D677C8D7542B51A4BD92F
6B0A827DB4ACDC417D693B977439E99B363779353F1B5F4D61F4FA0366B496AB
101CDEB9AAE4DB491E716E120AEDD20812E0B7BAF6C183E450E8FB09D701CFEF
CB8E0C41A6B96388E15AE0619D956E32F2A742C7D6C6F42F7F3243C689E21B8E
61AFBEDA5C20FAD7578BEAD8D326F641489FDCB0A4EED929B91BE272D4E182A4
9C0ACADE7BB6ACE3AC0EEA873BA5ACE5294F5B5316E684A3ABC00AEF6B826F30
1DC8C0F42966055D37A176344685B663456CD312AB773104A06C2A3FBBD1C5E7
5CC32532EAC0156F14623090E824BB725F4DA11F3C3BDFE264274A959F839A48
C8EFAB2E914A729DD12AFB026DA1DFCAD513DDA5F458B6E70BE9834BE3FC6699
4453E9ED077ABB25FFF79E365039948670A004DEB9D97FA4B152C55BC552FDCB
67FDB80935CF95CDC1B78FD1AA12C01ABBE0A4AAE7C3C64A2D997579C805589E
E3F694E8DF80CB384F040537B5B100858448DFADCF11268922DA572DB3571439
E596812048F312B704A1A9A65873786012A9750394CF5D97E366D2C9D570F1A8
652EF9BB899094FA24EDB69F0DDED623AF6BF6387D19188AE80ECD36C593A7D0
B9A1F57263FEFC4CA3AF5874E05C335D9556E8627A4CFEE099F7AF64EFCCEB9C
8FA48B99FCFD33A8C64226622F9514D35E1DA67AAE9ED2FFFA2FE3A51ABC8038
27FF1BC1FC151ADB7AE4DCA22BD92B7E2ABB6AACAADB9DF9D68763C018CAFEF6
2C210FFD0EE5F6F2B7F3521255C6EE11AD3517478ACAACC31E8737662559C1EA
D105021D2C5CEFE146788B79E37CCFEDAF135276C71C971D0F2EAAB3BB7DDFC9
A840DBF5F3A2C1398406C09F9D4AE798CE533B6040BC41EC6E016A98BB29C8D8
92B5D6EE49526804F964733F5C27743640
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /four put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 73 /I put
dup 76 /L put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
/FontBBox{14 -250 1077 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EFB588B1E83F80A
82250D0E564D661DF87A1B48CCF6F9BB2C05C567BB49B5A08BE2651EF33C5139
50FE48B6DE7E50F766A83BA6072EFF20BD95C156710C9A362F9F63874EEB1378
479A49CD1210F3F442FDD807758C67F04029141D650C53A2F28AB3829A2BF8AA
60B1053260C79323507C1C6A1A6E755633A0FD57CD34201BB41EBCE2841B9F23
455500FC333C1D68A46332569841FD6B507E734115AA56AE06D4D1ECD424157A
970779422160ABA48C41287D380E957F1394AF27D7D4A8F1FB7454F521B4A02C
AED7FFF3A1FCB3B3F775987A824134E138B331B9F31F84BBFAEA166E2C545640
8B84423801D5EF2ECF655217100B556871F4AF462A7E64ED8CCCB3BE9893B369
2549A2876C4F3223D4ECB92F8206AAF58FDCCAF34B00AE0A4B4B254B2FCA54E3
8CE69F21F65B83BC37D96FE58C599670DC624F13A5CDF7064A8A087782BA562F
65D8BC9C25DF69791130E60AE8CECB58B98991B0E8E8B453BBDCB1D10C227942
13A8B70D26F169608A8A6FC2F3DE472CF683C757FAB444A67C79B305B09653A8
46754FDD054C59BEA6D014C750FDDC5A631BB0A36DFE09B51AB3239D18790822
A96274F969F05F494865D98D37F24639A1A8207AB4069EE9B7D94CAB2A4B446D
7E60A543601F7372DBFC20DBBB5789581E25F74B18BC7BFEB86B85C671A51E9C
7ED31D1982C3E2E7782A1BF491E1D86FCE31E1CC210E3C4F3CF911A415328FE6
FF2F7EAF955D576231D46807572828ACA0308379640C874C9D8D21EEDB2F82E6
06ECD17609DF6028BC94496422417A14817DCCF6A3F9EB4D0748D03CB5CE6B4A
8868844E78DE1ED7DC97847D6E31E8AA0F8DA5B1C5D6A3A9FD892E8E2BBEA495
46166F1C116B8D9D121C7BD518D37ED63B4E2F4513DBBEEAE6A75E64A5D6213D
FAD8E2DA38AB66BCF4E789DAB0773276314C4D7FD3C542D9FC9399997BFCBD1E
D2526507B7B54918F214AFA5AF3C19B2D77C5579E4A1A2A04277949F9E8FB470
EB24667DB9D571B0398448D65C0F347AE1CC42CB664BD0A7AE9E1B5EA1EBF3AB
FA780B4DF362C280A203A018C4E4E26490688ACADB530211DCA7DFC6389D3532
455E4C717F71B7CF43B04F486562B5CD7A2F88E065218500627D51AC66FB938B
3D2E945AF303610D917F50461280CFEA599C67C66E0862972EF02C87A4CE3ED1
11D5B7B0260D0D19A797B4E5AB4B9044D56327D1A9A70D2613E6E5DA976D45E4
08FA61637784A1BBD73BDFD4F5035EEA8336341772E7EE127DB5E0885C486885
9CC1D9ADF646294EF7261B31A5BEE5A4C94EC15C14ACA605A835475607E3AC49
E6A5A38C5FFDF4986DB2B874BEDCC6673947B1D54CF34348DDC037211C221D45
F2ACA0FD695CC1AA6E3E0AC8A1BDDF01B3137AD2B8ABD11ADDAA09EE8A1398EE
1DF43E58B2583675CE1EFD1E4E72AFE0409077AC6F3322689365B55D7CDD9F40
3C84419B2865A1DF325963AAFB5CDCB0ED8BB35278175A94D25F9BCC1BF2BD93
0A8833212D11108F63D0DCBFB4998239F465A6ED2E4FE1EEA8FFEDDD5EDAFEB3
8FA6AB195E4C2A9B43D4AF22368DA042B038BC5653749100EA6668BF1E81433F
477844ADB0A2A1EE0256B35382DF63F180442206FA2BE103A5092CDF558EBD40
832356D32C6F1823B709CE9D794783D772D51381ADB3FE6B0F7BBB85D48B372B
7109A18F60F7ED0D7906DDC715DDA1220513FFC3D49A4C8B927757281C8E730B
93DC221AD2A7FDF3CFC2B796CBB40BCE3709F8CB08FD9C749FF172139FE580BD
3F9745207A0881382155C2D666E58CEBA155EF1D2D462A3D3886845CEA04B8C2
8A117B8A64C7EC257DA820766E764FFC0616F698AC0A72AAFCDFB984877AD1C1
143FFF6BE214924E93CD4F7D2E023638979E3B9237396D368E87341D33180FA6
6271473FEFB48884665856F70F522AB84F022AB04CC939DE4C274E2B349CC217
CD70A9BA4AAC7D13BC88DA839617B3707EF930292DA1C88237B1473FBC668B9E
216DDD81D7E3FB13344D466FC1EA3FDCEC416DC25AADE46962513573B7BF5A41
F5D6F567394959E47ADA3C4916DE32E8C7B51C1688744F3BF6DE548271B5D896
2CC6D96C1D5FE211D6BD29119C6F7F9FADC774E8CD52329D7C9F5B53C98E18A2
ECAC6D7F23998C081C1669DC7B8722ABC5597AC21340FDB611E2C810D0ACDFC9
D24F9C141EADE58E991FFC394798CAA33E58330CD58B4A69FBB58A9E87A5C009
C44848F1E510C2667F6AD53373423B5B6FDC6BE564F54FD63FB9CC135E8DA494
999E4D5572D426D9E3A4A294321AE4FE8BB9804C8B3DDDBAF47203DE3018A5B0
A07A81178399D9E57414B2F16DB535E48B440FDA04BCF447E42064D90E913DD6
A25338208B6488122E6B574C0AA1723C99478BB30D0D6CD695777F7B27363470
7C3021DDEEED02C02F1D83C0CABEE96579E7E2E33A1EEE071624B5757D2B847F
B1125A57B9E14A49B4682C308686061306A429A3B233D71F10710831F1824F82
E5E77791A929164DF4AD1DA2C7377B40965C3D1E4F769D55EA283FC5E7C255B1
15AEC1EF549FB1FC8D39AD40323D05BC5685284649CD6A89CEE121AD452B6217
4AD33DD9F9F9E03755C18A6C5F17F844A7BA2E0CC7FE9843F3911894BEA32390
D4CE7EACAA2B30B6E69DD7F8F1BA22FAC751335CE127D609FEB31FA55944E09B
AC9454ECAFCECBDE8F704B7F4E9FAAF80AD47D17BF0AAF01D14E4FB90768B075
9B4D1895F5E6FD7A24450A14B7B87DDE9559F29DB73D7F52F1409D82EE951160
ABD84EC3683F3386D6BE965FF7009DB68A0350BE56E055B6EBB5EF24782F3BFE
00C278B2E5C64885782A436E6E51CB3C97C2B92FD1D1ED56EF8AA171248E87C5
02AF0C42E1D098DB8C6CC2AF2D4EF71CF21F24CD65654A2A17ADCBC317621111
EFDC9356F033032AEFB6868BF2D37F3A4DB31C74B2BCEF95CDFE01E3EBC830CD
EEDB5D408A355719A636B25C41B193481404741A6CF7A6910283D8FC6A51DF3D
9C5733D3D65170E7FAA1C9D2F10B114C26F23290934178D842D2BC0F8C72639E
4E6BE12AA7831B7056CF0D5FBA0B4BCBB8FC2139957F2E298C5D2A6D685CC856
365B0D595818A7DE2514D7DB6A81A9E7E33870865E69E303ABB8B4E56ACD2685
9E3E69CF111A74586EB8A8C78F518E041CE3C17DA938E593B8F560FE2E95487C
8CCB0C4088FFE633CC621006A6178DE3FB02191D38EDE0822DDA1B6CA435BD01
83AAAF982AF086986C91A73FB74AEC8898CE932E873BD9346267F209C0E43B19
78065BC52D124B728CA1B443C2D17EE3739940192362924BA25E490C82485FE2
59BA706B9B2770614F8839E80F989AE2C9C7998098BF1AF7959AACFB90B551F8
74394FD5D694A56C4A9CF41E3F328FF24DFA7CF337DA8BB76AD1C05B91370F4A
ED1E3048E4318FD107970A7F4B8EE9B30917CC7A78BA23B9A9B1F517E6669E43
2599194AA9FBB89673FDB1D13F1397721617E900580F0B40708D3971304002A5
A7051E0067B7873F145FC412FF0662D85745EE1ED25F26F5B34237A09556667C
E38505E61AE62F0018A1BD2E79FBFFA72D69F9ACD25F8E91485AABF34575CD89
426D6E7161D31FFAE9F46BE9680F2E1DAB9FC99BA2C5BBA5E5FA646F58CE6A3A
0A83003D04C4867BCB09FCD72998AA7D2B1DDB359F8677BA41065E77614DFB83
5E10D2EDA08646A7EB463C27B508EB3B2CD636A47E4263A6810E0F5CF8E8F6BF
3E8FA574AEC908FE856F74F2F0909C8351DE5B10B2CA8458994E45E4E0DC59C2
FBC389E6EEB9797DAD21EC9AAE9E57F3A73EF2790015A617B342E6939146E5DD
7F0F59466F56E63DF7A60116C861BCD3DE415FC2BF198DFC56FE0895F7D194C7
D22FC2BFE85C05940D4C0D156170C38E4250142B6A6DAAAE1E497148801F0862
74A181C84BC10AA4FA485888BFEFBB7ECEEBF10B5CCA655614E771A29D93D934
D9268C5D3E5A3299473D9843C5F70C2BD0B8DA3D8A11214D75944525D0F6139C
E9A1AE73CDD01AAA6C8B8F52917693C0D9F9A5F626DECD6AA5F5E64B6CDF8986
32C5016C6B24D04ADF9DDD80CDF0662BE475E88B9A2C8DA91B11EF6E52440F9E
06A67C38A49B655D3A78C44BEAD6205CF6F8A855B745BE3ECCBDEE89E2634646
3CB69813DE6BE2B40BB66FB7914A6133DBFD89F9D8F900CE4C3A7C7A9BA23B00
BAE37C22D3BA3BB1CC097B46A4840026DAA09341DF005EC7A78141BFB7D808ED
3A538B9667D69744C3C7004E6BF17CD1CEB535C2BE3BA37FAF9DA68DD0CE06F9
FA9950218509299751A9C8EB442183C9D56B3DC959041C1C750FF7F6788E63C0
CDF0E9AEC162848AA9A3571F07B342DD7010A222EF0A24CA5F1454CE4389F388
0ADCF0452323D914DE0516C470ECCDAA61F023DB9BBF673F16F48A00FCEEFC4A
AE57B818DB31249190E798235842008A28DADF9A9FBBFDDD069F9D0F143525D8
8F123F638C4063F409136191462CA8F56B6B5D4134B6C11D053C326A05B8FFC2
D09392911F18B0E323A1AEB16704CF54D415D1E55590C9DC6524DCA6E56F7179
B50957B9DFE47AB12B8A31331087BCF218B8BC04937D28D0DAED5026077A8F64
4421FA4ABE00C3ED329F27F483C5BB8D98BDE9D97A8194F96263D5E6A0CE0127
9301D67D16436AB8B80F060C9DAE00E3E67D420A55E801A321BB4118FB237BCF
0D9441855EBDF899E5AD331892475052469AB273B210F548493FE619804DF638
7CC7C1B1F7304C2BC8CBB1186045230BA3DABA47429200AC2DE80625C6E0E24F
69B38A5C31A44E5E61D60332411E3FD1A68532FEE51B16E0488E73EE21C09C9A
D667A6C6F31E0AADFEB35A3EA408674BE707F42DB4434E569C0A8F82FAC77ED2
E64A9F5B5FFF0395905C7D7B8FA3286280A7DBF84CE182206126DA573FC38618
5CF7B95DF3F9A9F24D8BA699A26F6557B1D04D286D3C2D4B246D8564341A046A
23DB8D0F8F49F65442DD907C796E731C45CDEFD53474812F6080865958AA4BF7
24FEA936B22B070AE2F3BCDCB636899CCAA975B6B89C20873B4397EE7AE5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (assign4.dvi)
@start /Fa 134[71 2[71 75 52 53 55 2[67 75 4[37 1[67
1[61 19[101 3[128 4[105 3[103 16[67 67 67 49[{}18 119.552
/CMBX12 rf /Fb 133[48 2[78 1[63 1[48 49 2[60 66 4[36
60 2[54 60 2[60 19[105 2[61 5[88 84 82 19[36 46[{}18
119.552 /CMTI12 rf /Fc 133[37 44 44 60 44 46 32 33 33
44 46 42 46 69 23 44 25 23 46 42 25 37 46 37 46 42 9[85
1[62 60 46 3[65 62 76 52 1[43 30 2[54 1[63 60 59 62 65
1[39 1[23 1[23 42 42 42 42 42 42 42 42 42 42 42 23 28
23 4[23 4[42 20[46 46 48 11[{}64 83.022 /CMR10 rf /Fd
137[51 1[38 38 38 2[49 1[81 7[43 1[43 54 49 18[73 12[73
9[49 49 3[49 49 49 3[27 44[{}18 99.6264 /CMR12 rf /Fe
134[59 1[81 1[62 44 44 46 1[62 56 62 93 31 59 1[31 62
56 34 51 62 50 62 54 9[116 85 1[78 7[67 3[88 88 70 1[86
81 3[53 8[56 1[56 56 56 56 56 1[31 1[31 44[{}39 99.6264
/CMBX12 rf /Ff 134[88 4[85 66 86 1[80 1[88 107 3[43 1[92
1[80 3[88 13[88 3[121 5[58 5[113 8[46 5[79 52[{}17 143.462
/CMCSC10 rf /Fg 139[102 79 4[106 129 3[52 106 110 1[96
16[135 105 3[145 2[118 9[133 140 6[55 5[95 52[{}16 172.188
/CMCSC10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Project 4: The SLOB SLAB) /Subject (CS 444 Project 4) /Creator (LaTeX with hyperref package) /Author (Christopher Mendez, Joshua Bowen) /Keywords (cs444 ) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (MM Driver Design) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -4 /Dest (section.2) cvn /Title (Questions) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.1) cvn /Title (What do you think the main point of this assignment is?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.2) cvn /Title (How did you personally approach the problem? Design decisions, algorithm, etc.) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.2.3) cvn /Title (How did you ensure your solution was correct? Testing details, for instance.) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.2.4) cvn /Title (What did you learn?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (History) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Git Version Control Log) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (Work Log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150
0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150
0 a 569 1235 a Fg(Assignment)64 b(4:)85 b(The)65 b(SLOB)g(SLAB)864
1654 y Ff(CS)54 b(444:)72 b(Opera)-10 b(ting)55 b(Systems)e(I)t(I)1730
1889 y Fe(F)-9 b(all)39 b(2016)1764 2005 y Fd(Abstract)292
2223 y Fc(This)27 b(pro)5 b(ject)27 b(in)n(v)n(olv)n(es)f(researc)n
(hing)f(and)i(implemen)n(ting)h(a)f(SLAB)h(memory)f(manager)f(with)i(b)
r(est)g(\014t)171 2322 y(algorithms.)36 b(The)28 b(goal)e(is)h(to)h
(gain)f(an)g(understanding)g(of)h(ho)n(w)e(Memory)h(Managemen)n(t)g(w)n
(orks)f(inside)h(of)h(an)231 2422 y(op)r(erating)f(system.)36
b(Through)27 b(w)n(ork)f(our)h(pro)r(cess)f(of)i(learning)e(ab)r(out)i
(and)f(implemen)n(ting)h(the)g(SLAB)g(is)1826 2522 y(sho)n(wn.)1501
2907 y Fb(Joshua)41 b(D.)h(Bowen)1528 3057 y(Chris)g(J.)g(Mendez)1544
5081 y Fd(No)m(v)m(em)m(b)s(er)34 b(27,)e(2016)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 275 83 a Fc(Assignmen)n(t)27
b(4,)g(CS444)f(Christopher)h(Mendez,)h(Josh)n(ua)e(Bo)n(w)n(en)150
224 y
SDict begin H.S end
 150 224 a 150 224 a
SDict begin 12 H.A end
 150 224 a 150 224 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 224
a 134 x Fa(1)135 b(MM)44 b(Driv)l(er)h(Design)150 539
y Fc(Our)31 b(\014rst)h(decision)g(w)n(as)f(to)h(researc)n(h)e(the)j
(already)d(existing)i(SLOB.)g(W)-7 b(e)32 b(found)h(in)f(the)g(SLOB)g
(the)h(already)150 639 y(existen)n(t)f(Memory)g(Allo)r(cation)g(system)
g(and)g(then)h(the)g(memory)e(placemen)n(t)i(p)r(ortion.)50
b(The)33 b(SLOB)f(already)150 739 y(had)h(a)g(system)g(in)h(place)e(to)
i(place)e(or)h(create)f(pages)g(at)h(the)h(\014rst)f(lo)r(cation)g
(that)g(it)h(could)f(\014nd)h(space.)53 b(The)150 838
y(mo)r(di\014cation)34 b(w)n(e)g(needed)g(to)g(mak)n(e)f(is)h(one)g
(that)g(tak)n(es)g(this)g(but)h(instead)f(of)g(placing)f(at)h(the)h
(\014rst)f(sp)r(ot,)i(it)150 938 y(instead)27 b(\014nds)h(the)g(b)r
(est)g(sp)r(ot.)275 1038 y(T)-7 b(o)27 b(implemen)n(t)h(this)g(design)f
(w)n(e)g(\014rst)h(came)f(up)h(with)g(a)f(men)n(tal)g(mo)r(del)h(of)g
(what)f(this)h(lo)r(ok)n(ed)f(lik)n(e.)275 1137 y(The)35
b(SLOB)g(w)n(ould)g(iterate)g(accross)e(the)j(list)g(of)f(pages)g(lo)r
(oking)f(for)h(the)h(b)r(est)g(\014t.)61 b(When)36 b(the)g(curren)n(t)
150 1237 y(p)r(osition)c(is)f(a)h(b)r(etter)g(\014t)g(than)g(the)g
(curren)n(t)f(b)r(est)h(\014t,)h(the)g(new)e(b)r(est)i(\014t)f(is)f
(remem)n(b)r(ered.)49 b(Once)31 b(the)i(SLOB)150 1336
y(reac)n(hes)25 b(the)j(end)f(of)f(the)i(list)f(it)g(will)g(place)g
(the)g(item)g(at)g(the)g(b)r(es)g(\014t)h(lo)r(cation.)36
b(If)27 b(no)g(\014t)g(is)g(found)g(at)g(all,)g(then)150
1436 y(a)g(new)h(page)f(is)g(generated)f(to)i(\014t)g(the)g(item.)275
1536 y(Using)35 b(this)h(men)n(tal)g(mo)r(del)g(w)n(e)f(knew)h(what)g
(it)g(w)n(as)f(that)h(w)n(e)f(needed)h(to)g(do.)61 b(With)37
b(this)f(in)g(mind)g(w)n(e)150 1635 y(sk)n(etc)n(hed)27
b(up)h(some)f(pseudo)r(co)r(de.)150 1777 y
SDict begin H.S end
 150 1777 a
150 1777 a
SDict begin 12 H.A end
 150 1777 a 150 1777 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 1777 a 133 x Fa(2)135
b(Questions)150 2015 y
SDict begin H.S end
 150 2015 a 150 2015 a
SDict begin 12 H.A end
 150 2015
a 150 2015 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.1) cvn H.B /DEST pdfmark end
 150 2015 a 93 x Fe(2.1)112 b(What)38 b(do)f(y)m(ou)h
(think)g(the)f(main)i(p)s(oin)m(t)f(of)f(this)h(assignmen)m(t)h(is?)150
2262 y Fc(The)32 b(main)g(p)r(oin)n(t)g(of)h(this)f(assignmen)n(t)f(w)n
(as)g(to)h(learn)f(more)h(ab)r(out)g(the)g(v)-5 b(arious)31
b(asp)r(ects)h(within)h(the)f(k)n(ernel)150 2361 y(of)f(the)h(Op)r
(erating)e(Systems.)49 b(In)31 b(this)h(sp)r(eci\014c)f(assignmen)n(t)g
(w)n(e)g(w)n(ere)f(supp)r(osed)h(to)h(b)r(e)f(able)g(to)h(lo)r(ok)e(at)
i(the)150 2461 y(SLOB)e(and)g(\014nd)i(what)e(it)h(w)n(as)f(that)h
(needed)f(to)h(b)r(e)g(c)n(hanged.)45 b(Then)30 b(as)g(in)h(previous)f
(assignmen)n(ts)f(w)n(e)h(w)n(ere)150 2560 y(resp)r(onsible)23
b(for)h(getting)g(it)g(w)n(orking)e(with)j(the)f(rest)g(of)g(the)g(OS.)
g(W)-7 b(e)25 b(con)n(tin)n(ued)f(with)g(the)h(tradition)e(of)h(ha)n
(ving)150 2660 y(some)j(strange)f(error)g(or)h(bug)g(in)h(the)g(co)r
(de)f(that)h(w)n(e)f(needed)h(to)g(\015ex)f(our)g(problem)g(solving)g
(skills)g(to)g(solv)n(e.)275 2760 y(On)h(top)h(of)g(the)g(\014guring)f
(out)h(ho)n(w)f(to)g(get)h(the)g(SLAB)g(w)n(orking,)f(w)n(e)g(w)n(ere)g
(also)g(task)n(ed)g(with)h(ho)n(w)f(to)h(test)150 2859
y(it.)63 b(I)36 b(think)h(one)e(of)h(the)h(p)r(oin)n(ts)f(of)g(this)h
(assignmen)n(t)e(w)n(as)g(to)h(once)f(again)g(mak)n(e)h(sure)f(that)h
(w)n(e)g(w)n(ere)f(able)150 2959 y(to)g(understand)h(our)e(assignmen)n
(t)h(and)g(mak)n(e)g(tests)h(that)g(thoroughly)e(tested)i(the)g(co)r
(de.)60 b(In)36 b(general)e(these)150 3059 y(assignmen)n(ts)23
b(often)h(ha)n(v)n(e)f(di\013eren)n(t)h(w)n(a)n(ys)e(of)i(testing)g
(the)g(algorithm)f(that)h(is)g(di\013eren)n(t)g(from)g(ev)n(ery)e
(other)i(part)150 3158 y(of)k(the)g(k)n(ernel.)150 3274
y
SDict begin H.S end
 150 3274 a 150 3274 a
SDict begin 12 H.A end
 150 3274 a 150 3274 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.2) cvn H.B /DEST pdfmark end
 150 3274
a 117 x Fe(2.2)112 b(Ho)m(w)50 b(did)h(y)m(ou)g(p)s(ersonally)h
(approac)m(h)g(the)e(problem?)91 b(Design)51 b(decisions,)405
3507 y(algorithm,)39 b(etc.)150 3660 y Fc(The)31 b(\014rst)f(step,)h
(of)g(course,)f(w)n(as)g(to)g(researc)n(h)f(the)h(already)g(existing)g
(SLOB.)g(After)h(lo)r(oking)e(in)n(to)i(the)g(SLOB)150
3760 y(w)n(e)38 b(w)n(ere)g(able)h(to)g(determine)f(what)h(w)n(ould)g
(need)g(to)f(b)r(e)h(c)n(hanged.)70 b(In)39 b(general)e(the)j(SLOB)e
(already)f(had)150 3859 y(a)f(functioning)h(Memory)e(Allo)r(cation)i
(system)f(whic)n(h)g(didn't)h(need)g(to)f(b)r(e)h(c)n(hanged.)63
b(What)36 b(w)n(e)h(needed)f(to)150 3959 y(c)n(hange)e(w)n(as)g(ho)n(w)
g(ho)n(w)g(the)i(SLOB)e(determined)h(where)g(pages)e(w)n(en)n(t.)59
b(Our)34 b(goal)g(is)h(to)g(c)n(hange)e(the)j("First)150
4059 y(Find")28 b(\014t)g(to)f(a)g("Best)g(Fit".)275
4158 y(W)-7 b(e)22 b(decided)g(that)h(all)f(w)n(e)g(needed)g(to)g(c)n
(hange)f(w)n(as)g(this)h(asp)r(ect)g(of)h(the)f(SLOB.)g(W)-7
b(e)22 b(then)h(wrote)e(up)i(a)f(design)150 4258 y(for)27
b(the)h(algorithm)e(b)r(efore)i(implemen)n(ting.)37 b(This)28
b(design)f(can)g(b)r(e)h(seen)f(ab)r(o)n(v)n(e.)275 4357
y(After)h(crafting)e(our)h(design)g(w)n(e)h(b)r(egan)f(implemen)n
(tation.)37 b(After)28 b(implemen)n(tation)g(came)f(testing.)150
4490 y
SDict begin H.S end
 150 4490 a 150 4490 a
SDict begin 12 H.A end
 150 4490 a 150 4490 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.3) cvn H.B /DEST pdfmark end
 150
4490 a 100 x Fe(2.3)112 b(Ho)m(w)43 b(did)h(y)m(ou)f(ensure)h(y)m(our)f
(solution)h(w)m(as)f(correct?)66 b(T)-9 b(esting)43 b(details,)j(for)
405 4706 y(instance.)150 4859 y Fc(Originally)-7 b(,)30
b(the)i(plan)f(w)n(as)f(to)h(mo)r(dify)h(the)f(data)g(structure)f
(struct)h(page,)g(and)g(to)g(include)h(an)f(elemen)n(t)g(that)150
4959 y(w)n(ould)h(b)r(e)i(the)f(di\013erence)g(b)r(et)n(w)n(een)f(the)i
(requested)e(allotmen)n(t)g(and)h(the)g(allotmen)n(t)g(a)n(v)-5
b(ailable.)51 b(This)33 b(w)n(as)e(a)150 5059 y(w)n(a)n(y)j(o)n(v)n
(erengineered)f(w)n(a)n(y)h(of)h(approac)n(hing)e(the)j(problem,)h(and)
e(one)g(that)h(Im)f(not)h(sure)e(w)n(ould)h(w)n(ork.)59
b(As)p 0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray
eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fc(so)r(on)24 b(as)h(w)n(e)g(b)r
(egan)g(programming)e(and)i(tried)g(mo)r(difying)g(the)h(data)f
(structure,)g(there)g(w)n(as)f(a)h(h)n(uge)f(amoun)n(t)h(of)150
183 y(compile)i(errors.)34 b(This)27 b(made)g(us)f(feel)i(lik)n(e)e(w)n
(e)g(w)n(ere)g(on)h(the)g(wrong)f(trac)n(k)f(and)i(so)f(rethough)n(t)g
(the)i(approac)n(h)c(a)150 282 y(bit.)45 b(F)-7 b(rom)29
b(what)h(w)n(e)g(understo)r(o)r(d)f(of)h(the)g(curren)n(t)g(slob)f
(allo)r(cation,)h(the)g(slob)p 2718 282 25 4 v 29 w(page)p
2914 282 V 29 w(allo)r(c)g(function)g(handled)150 382
y(\014nding)g(where)f(to)h(place)f(a)g(blo)r(c)n(k)g(and)h(placing)f
(it.)43 b(The)30 b(\014rst)f(\014t)i(algorithm)d(w)n(ould)h(just)i(c)n
(hec)n(k)d(if)j(there)e(w)n(as)150 482 y(a)h(di\013erence)f(b)r(et)n(w)
n(een)h(the)h(allo)r(cated)e(request)g(and)h(page,)g(and)g(if)g(there)g
(w)n(as,)g(it)g(could)g(place)f(the)i(requested)150 581
y(blo)r(c)n(ks)j(there.)59 b(W)-7 b(e)36 b(rewrote)e(that)h(so)f(that)i
(when)f(it)g(got)g(to)g(that)g(p)r(oin)n(t)h(where)e(there)h(w)n(as)f
(a)h(di\013erence)g(it)150 681 y(w)n(ould)29 b(k)n(eep)g(trac)n(k)f(of)
h(the)h(b)r(est)g(\014t,)g(and)f(then)h(up)r(on)g(going)e(through)h
(all)g(the)h(pages,)e(allo)r(cate)h(the)h(blo)r(c)n(ks)e(at)150
780 y(the)g(sp)r(ot)g(with)g(the)g(b)r(est)g(\014t.)275
880 y(In)18 b(order)g(to)g(test)h(this,)i(w)n(e)d(created)g(t)n(w)n(o)g
(system)g(calls.)33 b(The)19 b(\014rst)f(k)n(ept)h(trac)n(k)e(of)i(the)
g(memory)f(b)r(eing)g(claimed)150 980 y(b)n(y)26 b(the)g(slob)g
(\014le.)37 b(It)26 b(did)h(this)f(b)n(y)g(starting)g(at)g(0)f(and)h
(ev)n(ery)f(time)i(a)f(page)f(w)n(as)g(allo)r(cated,)h(it)h(increased)e
(b)n(y)h(the)150 1079 y(page)21 b(size.)34 b(There)21
b(w)n(as)g(also)f(the)i(memory)f(b)r(eing)g(used.)35
b(The)22 b(memory)f(b)r(eing)g(used)h(w)n(ould)f(just)h(incremen)n(t)f
(and)150 1179 y(decremen)n(t)28 b(as)g(blo)r(c)n(ks)f(w)n(ere)h(allo)r
(cated.)38 b(The)28 b(\014rst)h(system)f(call)g(returned)g(the)g
(memory)g(claimed)g(the)h(second)150 1279 y(returned)g(the)h(memory)e
(claimed)h(-)g(the)h(memory)f(b)r(eing)g(used.)42 b(By)29
b(dividing)h(the)f(di\013erence)g(in)h(claimed)f(and)150
1378 y(used)f(o)n(v)n(er)d(the)j(total)g(claimed,)f(w)n(e)g(w)n(ould)h
(b)r(e)g(able)f(to)g(see)g(the)h(fragmen)n(tation.)150
1510 y
SDict begin H.S end
 150 1510 a 150 1510 a
SDict begin 12 H.A end
 150 1510 a 150 1510 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.4) cvn H.B /DEST pdfmark end
 150
1510 a 101 x Fe(2.4)112 b(What)38 b(did)g(y)m(ou)f(learn?)150
1764 y Fc(W)-7 b(e)32 b(learned)e(ab)r(out)h(the)h(SLOB)e(and)h(memory)
g(managemen)n(t)f(in)h(general.)47 b(W)-7 b(e)31 b(also)f(learned)h(ho)
n(w)f(to)h(debug)150 1863 y(and)e(test)h(a)f(di\013eren)n(t)h(asp)r
(ect)f(of)g(the)h(k)n(ernel.)42 b(Additionally)-7 b(,)30
b(w)n(e)f(learned)f(ho)n(w)h(to)g(familiarze)g(ourselv)n(es)f(with)150
1963 y(another)34 b(asp)r(ect)i(of)f(the)g(k)n(ernel)g(and)g(mak)n(e)g
(c)n(hanges)e(to)j(what)f(w)n(e)g(needed)g(so)g(that)h(it)f(w)n(ould)g
(do)g(what)g(w)n(e)150 2063 y(w)n(an)n(ted.)150 2188
y
SDict begin H.S end
 150 2188 a 150 2188 a
SDict begin 12 H.A end
 150 2188 a 150 2188 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 2188
a 149 x Fa(3)135 b(History)150 2443 y
SDict begin H.S end
 150 2443 a 150
2443 a
SDict begin 12 H.A end
 150 2443 a 150 2443 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 2443 a 93 x Fe(3.1)112
b(Git)37 b(V)-9 b(ersion)38 b(Con)m(trol)f(Log)p 150
2620 3271 4 v 148 2720 4 100 v 200 2690 a Fc(Commit)p
2610 2720 V 2167 w(Message)p 3418 2720 V 150 2723 3271
4 v 148 3022 4 299 v 200 2793 a(commit)81 b(741b)r(db5031847e5c06c6)o
(9b)r(cd79)o(45)o(08)o(a7)o(a4)o(644)o(efc)75 b(Author:)200
2893 y(b)r(o)n(w)n(enjos)22 b(<b)r(o)n(w)n(enjos@oregonstate.edu>)f
(Date:)35 b(Sun)23 b(No)n(v)g(27)g(21:33:41)200 2992
y(2016)j(-0800)p 2610 3022 V 2662 2793 a(W)-7 b(rite)73
b(up)g(Up)r(date)2662 2893 y(and)27 b(T)-7 b(esting)p
3418 3022 V 150 3025 3271 4 v 148 3324 4 299 v 200 3095
a(commit)118 b(c5e1486fee8df91f4d0c97e591)o(64)o(0f0a)o(5a)o(6f1db5)111
b(Author:)200 3195 y(b)r(o)n(w)n(enjos)22 b(<b)r(o)n(w)n
(enjos@oregonstate.edu>)f(Date:)35 b(Sun)23 b(No)n(v)g(20)g(12:06:10)
200 3294 y(2016)j(-0800)p 2610 3324 V 2662 3095 a(p)r(df)i(test)p
3418 3324 V 150 3328 3271 4 v 148 3627 4 299 v 200 3397
a(commit)99 b(a13f36ede9488602d97ec1)o(80)o(cb)r(ee42)o(1c8)o(a2)o
(cf2d2)93 b(Author:)200 3497 y(b)r(o)n(w)n(enjos)22 b(<b)r(o)n(w)n
(enjos@oregonstate.edu>)f(Date:)35 b(Sun)23 b(No)n(v)g(20)g(11:51:07)
200 3597 y(2016)j(-0800)p 2610 3627 V 2662 3397 a(Some)57
b(k)n(ernel)g(stu\013,)2662 3497 y(some)27 b(write)g(up)h(stu\013)p
3418 3627 V 150 3630 3271 4 v 148 3929 4 299 v 200 3700
a(commit)105 b(9960f2a450f6dd8f87a93ed7)o(48)o(1d9)o(67)o(8e6)o(fdeec5)
99 b(Author:)200 3799 y(b)r(o)n(w)n(enjos)22 b(<b)r(o)n(w)n
(enjos@oregonstate.edu>)f(Date:)35 b(Sun)23 b(No)n(v)g(20)g(11:16:47)
200 3899 y(2016)j(-0800)p 2610 3929 V 2662 3700 a(Added)97
b(write)g(up)2662 3799 y(\014les)p 3418 3929 V 150 3932
3271 4 v 0 TeXcolorgray 1929 5349 a(2)p 0 TeXcolorgray
eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fe(3.2)112 b(W)-9 b(ork)37
b(Log)p 150 168 2898 4 v 148 267 4 100 v 200 237 a Fc(Date)p
957 267 V 634 w(Time)p 1765 267 V 619 w(What)p 3046 267
V 150 271 2898 4 v 148 669 4 399 v 200 340 a(11/15/2016)p
957 669 V 388 w(3pm-5m)p 1765 669 V 512 w(Began)e(researc)n(hing)f(the)
j(curren)n(tly)1816 440 y(implemen)n(ted)d(SLOB)f(and)g(gaining)1816
540 y(and)51 b(understanding)f(of)g(ho)n(w)g(the)1816
639 y(memory)27 b(managemen)n(t)g(w)n(orks.)p 3046 669
V 150 672 2898 4 v 148 772 4 100 v 200 742 a(11/19/2016)p
957 772 V 388 w(10am-12pm)p 1765 772 V 386 w(Began)g(some)g(co)r(de.)p
3046 772 V 150 775 2898 4 v 148 1074 4 299 v 200 845
a(11/20/2016)p 957 1074 V 388 w(10am-12pm)p 1765 1074
V 386 w(Con)n(tin)n(ued)54 b(w)n(orking)e(on)i(the)h(as-)1816
945 y(signmen)n(t,)28 b(b)r(egan)g(writing)f(our)g(for-)1816
1044 y(mal)h(design)f(do)r(cumen)n(t.)p 3046 1074 V 150
1078 2898 4 v 148 1177 4 100 v 200 1147 a(11/23/2016)p
957 1177 V 388 w(8am-12pm)p 1765 1177 V 428 w(T)-7 b(ested)28
b(implemen)n(tation.)p 3046 1177 V 150 1181 2898 4 v
148 1280 4 100 v 200 1250 a(11/27/2016)p 957 1280 V 388
w(9pm-10pm)p 1765 1280 V 424 w(Finished)g(W)-7 b(rite)28
b(up.)p 3046 1280 V 150 1283 2898 4 v 0 TeXcolorgray
1929 5349 a(3)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
